进行词法分析！！
宏定义：
include <stdio.h>
include <stdlib.h>
include <mpi.h>
define INIT_TYPE 10
define ALLTOONE_TYPE 100
define ONETOALL_TYPE 200
define MULTI_TYPE 300
define RESULT_TYPE 400
define RESULT_LEN 500
define MULTI_LEN 600
词法分析词素：
Line:13 ,(KEYWORD    , int)
Line:13 ,(IDENTIFIER , Spt)
Line:13 ,(SEPERATOR  , ;)
Line:14 ,(KEYWORD    , long)
Line:14 ,(IDENTIFIER , DataSize)
Line:14 ,(SEPERATOR  , ;)
Line:15 ,(KEYWORD    , int)
Line:15 ,(OPERATOR   , *)
Line:15 ,(IDENTIFIER , arr)
Line:15 ,(SEPERATOR  , ;)
Line:16 ,(KEYWORD    , int)
Line:16 ,(OPERATOR   , *)
Line:16 ,(IDENTIFIER , arr1)
Line:16 ,(SEPERATOR  , ;)
Line:17 ,(KEYWORD    , int)
Line:17 ,(IDENTIFIER , mylength)
Line:17 ,(SEPERATOR  , ;)
Line:18 ,(KEYWORD    , int)
Line:18 ,(OPERATOR   , *)
Line:18 ,(IDENTIFIER , index)
Line:18 ,(SEPERATOR  , ;)
Line:19 ,(KEYWORD    , int)
Line:19 ,(OPERATOR   , *)
Line:19 ,(IDENTIFIER , temp1)
Line:19 ,(SEPERATOR  , ;)
Line:21 ,(KEYWORD    , int)
Line:21 ,(IDENTIFIER , main)
Line:21 ,(SEPERATOR  , ()
Line:21 ,(KEYWORD    , int)
Line:21 ,(IDENTIFIER , argc)
Line:21 ,(SEPERATOR  , ,)
Line:21 ,(KEYWORD    , char)
Line:21 ,(OPERATOR   , *)
Line:21 ,(OPERATOR   , *)
Line:21 ,(IDENTIFIER , argv)
Line:21 ,(SEPERATOR  , ))
Line:22 ,(SEPERATOR  , {)
Line:23 ,(KEYWORD    , long)
Line:23 ,(IDENTIFIER , BaseNum)
Line:23 ,(OPERATOR   , =)
Line:23 ,(CONST      , 1L)
Line:23 ,(SEPERATOR  , ;)
Line:24 ,(KEYWORD    , int)
Line:24 ,(IDENTIFIER , PlusNum)
Line:24 ,(SEPERATOR  , ;)
Line:25 ,(KEYWORD    , int)
Line:25 ,(IDENTIFIER , MyID)
Line:25 ,(SEPERATOR  , ;)
Line:27 ,(IDENTIFIER , MPI_Init)
Line:27 ,(SEPERATOR  , ()
Line:27 ,(OPERATOR   , &)
Line:27 ,(IDENTIFIER , argc)
Line:27 ,(SEPERATOR  , ,)
Line:27 ,(OPERATOR   , &)
Line:27 ,(IDENTIFIER , argv)
Line:27 ,(SEPERATOR  , ))
Line:27 ,(SEPERATOR  , ;)
Line:28 ,(IDENTIFIER , MPI_Comm_rank)
Line:28 ,(SEPERATOR  , ()
Line:28 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:28 ,(SEPERATOR  , ,)
Line:28 ,(OPERATOR   , &)
Line:28 ,(IDENTIFIER , MyID)
Line:28 ,(SEPERATOR  , ))
Line:28 ,(SEPERATOR  , ;)
Line:30 ,(IDENTIFIER , PlusNum)
Line:30 ,(OPERATOR   , =)
Line:30 ,(CONST      , 60)
Line:30 ,(SEPERATOR  , ;)
Line:31 ,(IDENTIFIER , DataSize)
Line:31 ,(OPERATOR   , =)
Line:31 ,(IDENTIFIER , BaseNum)
Line:31 ,(OPERATOR   , *)
Line:31 ,(IDENTIFIER , PlusNum)
Line:31 ,(SEPERATOR  , ;)
Line:33 ,(KEYWORD    , if)
Line:33 ,(SEPERATOR  , ()
Line:33 ,(IDENTIFIER , MyID)
Line:33 ,(OPERATOR   , ==)
Line:33 ,(CONST      , 0)
Line:33 ,(SEPERATOR  , ))
Line:34 ,(IDENTIFIER , printf)
Line:34 ,(SEPERATOR  , ()
Line:34 ,(CONST      , "The DataSize is : %lu\n")
Line:34 ,(SEPERATOR  , ,)
Line:34 ,(IDENTIFIER , PlusNum)
Line:34 ,(SEPERATOR  , ))
Line:34 ,(SEPERATOR  , ;)
Line:35 ,(IDENTIFIER , Psrs_Main)
Line:35 ,(SEPERATOR  , ()
Line:35 ,(SEPERATOR  , ))
Line:35 ,(SEPERATOR  , ;)
Line:37 ,(KEYWORD    , if)
Line:37 ,(SEPERATOR  , ()
Line:37 ,(IDENTIFIER , MyID)
Line:37 ,(OPERATOR   , ==)
Line:37 ,(CONST      , 0)
Line:37 ,(SEPERATOR  , ))
Line:38 ,(IDENTIFIER , printf)
Line:38 ,(SEPERATOR  , ()
Line:38 ,(CONST      , "\n")
Line:38 ,(SEPERATOR  , ))
Line:38 ,(SEPERATOR  , ;)
Line:40 ,(IDENTIFIER , MPI_Finalize)
Line:40 ,(SEPERATOR  , ()
Line:40 ,(SEPERATOR  , ))
Line:40 ,(SEPERATOR  , ;)
Line:41 ,(KEYWORD    , return)
Line:41 ,(CONST      , 0)
Line:41 ,(SEPERATOR  , ;)
Line:42 ,(SEPERATOR  , })
Line:45 ,(KEYWORD    , void)
Line:45 ,(IDENTIFIER , Psrs_Main)
Line:45 ,(SEPERATOR  , ()
Line:45 ,(SEPERATOR  , ))
Line:46 ,(SEPERATOR  , {)
Line:47 ,(KEYWORD    , int)
Line:47 ,(IDENTIFIER , i)
Line:47 ,(SEPERATOR  , ,)
Line:47 ,(IDENTIFIER , j)
Line:47 ,(SEPERATOR  , ;)
Line:48 ,(KEYWORD    , int)
Line:48 ,(IDENTIFIER , MyID)
Line:48 ,(SEPERATOR  , ,)
Line:48 ,(IDENTIFIER , SumID)
Line:48 ,(SEPERATOR  , ;)
Line:49 ,(KEYWORD    , int)
Line:49 ,(IDENTIFIER , n)
Line:49 ,(SEPERATOR  , ,)
Line:49 ,(IDENTIFIER , c1)
Line:49 ,(SEPERATOR  , ,)
Line:49 ,(IDENTIFIER , c2)
Line:49 ,(SEPERATOR  , ,)
Line:49 ,(IDENTIFIER , c3)
Line:49 ,(SEPERATOR  , ,)
Line:49 ,(IDENTIFIER , c4)
Line:49 ,(SEPERATOR  , ,)
Line:49 ,(IDENTIFIER , k)
Line:49 ,(SEPERATOR  , ,)
Line:49 ,(IDENTIFIER , l)
Line:49 ,(SEPERATOR  , ;)
Line:50 ,(IDENTIFIER , FILE)
Line:50 ,(OPERATOR   , *)
Line:50 ,(IDENTIFIER , fp)
Line:50 ,(SEPERATOR  , ;)
Line:51 ,(KEYWORD    , int)
Line:51 ,(IDENTIFIER , ready)
Line:51 ,(SEPERATOR  , ;)
Line:52 ,(IDENTIFIER , MPI_Status)
Line:52 ,(IDENTIFIER , status)
Line:52 ,(SEPERATOR  , [)
Line:52 ,(CONST      , 32)
Line:52 ,(OPERATOR   , *)
Line:52 ,(CONST      , 32)
Line:52 ,(OPERATOR   , *)
Line:52 ,(CONST      , 2)
Line:52 ,(SEPERATOR  , ])
Line:52 ,(SEPERATOR  , ;)
Line:53 ,(IDENTIFIER , MPI_Request)
Line:53 ,(IDENTIFIER , request)
Line:53 ,(SEPERATOR  , [)
Line:53 ,(CONST      , 32)
Line:53 ,(OPERATOR   , *)
Line:53 ,(CONST      , 32)
Line:53 ,(OPERATOR   , *)
Line:53 ,(CONST      , 2)
Line:53 ,(SEPERATOR  , ])
Line:53 ,(SEPERATOR  , ;)
Line:55 ,(IDENTIFIER , MPI_Comm_rank)
Line:55 ,(SEPERATOR  , ()
Line:55 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:55 ,(SEPERATOR  , ,)
Line:55 ,(OPERATOR   , &)
Line:55 ,(IDENTIFIER , MyID)
Line:55 ,(SEPERATOR  , ))
Line:55 ,(SEPERATOR  , ;)
Line:56 ,(IDENTIFIER , MPI_Comm_size)
Line:56 ,(SEPERATOR  , ()
Line:56 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:56 ,(SEPERATOR  , ,)
Line:56 ,(OPERATOR   , &)
Line:56 ,(IDENTIFIER , SumID)
Line:56 ,(SEPERATOR  , ))
Line:56 ,(SEPERATOR  , ;)
Line:58 ,(IDENTIFIER , Spt)
Line:58 ,(OPERATOR   , =)
Line:58 ,(IDENTIFIER , SumID)
Line:58 ,(OPERATOR   , -)
Line:58 ,(CONST      , 1)
Line:58 ,(SEPERATOR  , ;)
Line:61 ,(IDENTIFIER , arr)
Line:61 ,(OPERATOR   , =)
Line:61 ,(SEPERATOR  , ()
Line:61 ,(KEYWORD    , int)
Line:61 ,(OPERATOR   , *)
Line:61 ,(SEPERATOR  , ))
Line:61 ,(IDENTIFIER , malloc)
Line:61 ,(SEPERATOR  , ()
Line:61 ,(CONST      , 2)
Line:61 ,(OPERATOR   , *)
Line:61 ,(IDENTIFIER , DataSize)
Line:61 ,(OPERATOR   , *)
Line:61 ,(KEYWORD    , sizeof)
Line:61 ,(SEPERATOR  , ()
Line:61 ,(CONST      , 4)
Line:61 ,(SEPERATOR  , ))
Line:61 ,(SEPERATOR  , ))
Line:61 ,(SEPERATOR  , ;)
Line:62 ,(KEYWORD    , if)
Line:62 ,(SEPERATOR  , ()
Line:62 ,(IDENTIFIER , arr)
Line:62 ,(OPERATOR   , ==)
Line:62 ,(CONST      , 0)
Line:62 ,(SEPERATOR  , ))
Line:62 ,(IDENTIFIER , merror)
Line:62 ,(SEPERATOR  , ()
Line:62 ,(CONST      , "malloc memory for arr error!")
Line:62 ,(SEPERATOR  , ))
Line:62 ,(SEPERATOR  , ;)
Line:63 ,(IDENTIFIER , arr1)
Line:63 ,(OPERATOR   , =)
Line:63 ,(OPERATOR   , &)
Line:63 ,(IDENTIFIER , arr)
Line:63 ,(SEPERATOR  , [)
Line:63 ,(IDENTIFIER , DataSize)
Line:63 ,(SEPERATOR  , ])
Line:63 ,(SEPERATOR  , ;)
Line:65 ,(KEYWORD    , if)
Line:65 ,(SEPERATOR  , ()
Line:65 ,(IDENTIFIER , SumID)
Line:65 ,(OPERATOR   , >)
Line:65 ,(CONST      , 1)
Line:65 ,(SEPERATOR  , ))
Line:66 ,(SEPERATOR  , {)
Line:67 ,(IDENTIFIER , temp1)
Line:67 ,(OPERATOR   , =)
Line:67 ,(SEPERATOR  , ()
Line:67 ,(KEYWORD    , int)
Line:67 ,(OPERATOR   , *)
Line:67 ,(SEPERATOR  , ))
Line:67 ,(IDENTIFIER , malloc)
Line:67 ,(SEPERATOR  , ()
Line:67 ,(KEYWORD    , sizeof)
Line:67 ,(SEPERATOR  , ()
Line:67 ,(CONST      , 4)
Line:67 ,(SEPERATOR  , ))
Line:67 ,(OPERATOR   , *)
Line:67 ,(IDENTIFIER , SumID)
Line:67 ,(OPERATOR   , *)
Line:67 ,(IDENTIFIER , Spt)
Line:67 ,(SEPERATOR  , ))
Line:67 ,(SEPERATOR  , ;)
Line:68 ,(KEYWORD    , if)
Line:68 ,(SEPERATOR  , ()
Line:68 ,(IDENTIFIER , temp1)
Line:68 ,(OPERATOR   , ==)
Line:68 ,(CONST      , 0)
Line:68 ,(SEPERATOR  , ))
Line:68 ,(IDENTIFIER , merror)
Line:68 ,(SEPERATOR  , ()
Line:68 ,(CONST      , "malloc memory for temp1 error!")
Line:68 ,(SEPERATOR  , ))
Line:68 ,(SEPERATOR  , ;)
Line:69 ,(IDENTIFIER , index)
Line:69 ,(OPERATOR   , =)
Line:69 ,(SEPERATOR  , ()
Line:69 ,(KEYWORD    , int)
Line:69 ,(OPERATOR   , *)
Line:69 ,(SEPERATOR  , ))
Line:69 ,(IDENTIFIER , malloc)
Line:69 ,(SEPERATOR  , ()
Line:69 ,(KEYWORD    , sizeof)
Line:69 ,(SEPERATOR  , ()
Line:69 ,(CONST      , 4)
Line:69 ,(SEPERATOR  , ))
Line:69 ,(OPERATOR   , *)
Line:69 ,(CONST      , 2)
Line:69 ,(OPERATOR   , *)
Line:69 ,(IDENTIFIER , SumID)
Line:69 ,(SEPERATOR  , ))
Line:69 ,(SEPERATOR  , ;)
Line:70 ,(KEYWORD    , if)
Line:70 ,(SEPERATOR  , ()
Line:70 ,(IDENTIFIER , index)
Line:70 ,(OPERATOR   , ==)
Line:70 ,(CONST      , 0)
Line:70 ,(SEPERATOR  , ))
Line:70 ,(IDENTIFIER , merror)
Line:70 ,(SEPERATOR  , ()
Line:70 ,(CONST      , "malloc memory for index error!")
Line:70 ,(SEPERATOR  , ))
Line:70 ,(SEPERATOR  , ;)
Line:71 ,(SEPERATOR  , })
Line:73 ,(IDENTIFIER , MPI_Barrier)
Line:73 ,(SEPERATOR  , ()
Line:73 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:73 ,(SEPERATOR  , ))
Line:73 ,(SEPERATOR  , ;)
Line:75 ,(IDENTIFIER , mylength)
Line:75 ,(OPERATOR   , =)
Line:75 ,(IDENTIFIER , DataSize)
Line:75 ,(OPERATOR   , /)
Line:75 ,(IDENTIFIER , SumID)
Line:75 ,(SEPERATOR  , ;)
Line:76 ,(IDENTIFIER , srand)
Line:76 ,(SEPERATOR  , ()
Line:76 ,(IDENTIFIER , MyID)
Line:76 ,(SEPERATOR  , ))
Line:76 ,(SEPERATOR  , ;)
Line:78 ,(IDENTIFIER , printf)
Line:78 ,(SEPERATOR  , ()
Line:78 ,(CONST      , "This is node %d \n")
Line:78 ,(SEPERATOR  , ,)
Line:78 ,(IDENTIFIER , MyID)
Line:78 ,(SEPERATOR  , ))
Line:78 ,(SEPERATOR  , ;)
Line:79 ,(IDENTIFIER , printf)
Line:79 ,(SEPERATOR  , ()
Line:79 ,(CONST      , "On node %d the input data is:\n")
Line:79 ,(SEPERATOR  , ,)
Line:79 ,(IDENTIFIER , MyID)
Line:79 ,(SEPERATOR  , ))
Line:79 ,(SEPERATOR  , ;)
Line:80 ,(KEYWORD    , for)
Line:80 ,(SEPERATOR  , ()
Line:80 ,(IDENTIFIER , i)
Line:80 ,(OPERATOR   , =)
Line:80 ,(CONST      , 0)
Line:80 ,(SEPERATOR  , ;)
Line:80 ,(IDENTIFIER , i)
Line:80 ,(OPERATOR   , <)
Line:80 ,(IDENTIFIER , mylength)
Line:80 ,(SEPERATOR  , ;)
Line:80 ,(IDENTIFIER , i)
Line:80 ,(OPERATOR   , ++)
Line:80 ,(SEPERATOR  , ))
Line:81 ,(SEPERATOR  , {)
Line:82 ,(IDENTIFIER , arr)
Line:82 ,(SEPERATOR  , [)
Line:82 ,(IDENTIFIER , i)
Line:82 ,(SEPERATOR  , ])
Line:82 ,(OPERATOR   , =)
Line:82 ,(SEPERATOR  , ()
Line:82 ,(KEYWORD    , int)
Line:82 ,(SEPERATOR  , ))
Line:82 ,(IDENTIFIER , rand)
Line:82 ,(SEPERATOR  , ()
Line:82 ,(SEPERATOR  , ))
Line:82 ,(SEPERATOR  , ;)
Line:83 ,(IDENTIFIER , printf)
Line:83 ,(SEPERATOR  , ()
Line:83 ,(CONST      , "%d : ")
Line:83 ,(SEPERATOR  , ,)
Line:83 ,(IDENTIFIER , arr)
Line:83 ,(SEPERATOR  , [)
Line:83 ,(IDENTIFIER , i)
Line:83 ,(SEPERATOR  , ])
Line:83 ,(SEPERATOR  , ))
Line:83 ,(SEPERATOR  , ;)
Line:84 ,(SEPERATOR  , })
Line:85 ,(IDENTIFIER , printf)
Line:85 ,(SEPERATOR  , ()
Line:85 ,(CONST      , "\n")
Line:85 ,(SEPERATOR  , ))
Line:85 ,(SEPERATOR  , ;)
Line:88 ,(IDENTIFIER , MPI_Barrier)
Line:88 ,(SEPERATOR  , ()
Line:88 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:88 ,(SEPERATOR  , ))
Line:88 ,(SEPERATOR  , ;)
Line:89 ,(IDENTIFIER , quicksort)
Line:89 ,(SEPERATOR  , ()
Line:89 ,(IDENTIFIER , arr)
Line:89 ,(SEPERATOR  , ,)
Line:89 ,(CONST      , 0)
Line:89 ,(SEPERATOR  , ,)
Line:89 ,(IDENTIFIER , mylength)
Line:89 ,(OPERATOR   , -)
Line:89 ,(CONST      , 1)
Line:89 ,(SEPERATOR  , ))
Line:89 ,(SEPERATOR  , ;)
Line:90 ,(IDENTIFIER , MPI_Barrier)
Line:90 ,(SEPERATOR  , ()
Line:90 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:90 ,(SEPERATOR  , ))
Line:90 ,(SEPERATOR  , ;)
Line:93 ,(KEYWORD    , if)
Line:93 ,(SEPERATOR  , ()
Line:93 ,(IDENTIFIER , SumID)
Line:93 ,(OPERATOR   , >)
Line:93 ,(CONST      , 1)
Line:93 ,(SEPERATOR  , ))
Line:94 ,(SEPERATOR  , {)
Line:95 ,(IDENTIFIER , MPI_Barrier)
Line:95 ,(SEPERATOR  , ()
Line:95 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:95 ,(SEPERATOR  , ))
Line:95 ,(SEPERATOR  , ;)
Line:97 ,(IDENTIFIER , n)
Line:97 ,(OPERATOR   , =)
Line:97 ,(SEPERATOR  , ()
Line:97 ,(KEYWORD    , int)
Line:97 ,(SEPERATOR  , ))
Line:97 ,(SEPERATOR  , ()
Line:97 ,(IDENTIFIER , mylength)
Line:97 ,(OPERATOR   , /)
Line:97 ,(SEPERATOR  , ()
Line:97 ,(IDENTIFIER , Spt)
Line:97 ,(OPERATOR   , +)
Line:97 ,(CONST      , 1)
Line:97 ,(SEPERATOR  , ))
Line:97 ,(SEPERATOR  , ))
Line:97 ,(SEPERATOR  , ;)
Line:98 ,(KEYWORD    , for)
Line:98 ,(SEPERATOR  , ()
Line:98 ,(IDENTIFIER , i)
Line:98 ,(OPERATOR   , =)
Line:98 ,(CONST      , 0)
Line:98 ,(SEPERATOR  , ;)
Line:98 ,(IDENTIFIER , i)
Line:98 ,(OPERATOR   , <)
Line:98 ,(IDENTIFIER , Spt)
Line:98 ,(SEPERATOR  , ;)
Line:98 ,(IDENTIFIER , i)
Line:98 ,(OPERATOR   , ++)
Line:98 ,(SEPERATOR  , ))
Line:99 ,(IDENTIFIER , temp1)
Line:99 ,(SEPERATOR  , [)
Line:99 ,(IDENTIFIER , i)
Line:99 ,(SEPERATOR  , ])
Line:99 ,(OPERATOR   , =)
Line:99 ,(IDENTIFIER , arr)
Line:99 ,(SEPERATOR  , [)
Line:99 ,(SEPERATOR  , ()
Line:99 ,(IDENTIFIER , i)
Line:99 ,(OPERATOR   , +)
Line:99 ,(CONST      , 1)
Line:99 ,(SEPERATOR  , ))
Line:99 ,(OPERATOR   , *)
Line:99 ,(IDENTIFIER , n)
Line:99 ,(OPERATOR   , -)
Line:99 ,(CONST      , 1)
Line:99 ,(SEPERATOR  , ])
Line:99 ,(SEPERATOR  , ;)
Line:101 ,(IDENTIFIER , MPI_Barrier)
Line:101 ,(SEPERATOR  , ()
Line:101 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:101 ,(SEPERATOR  , ))
Line:101 ,(SEPERATOR  , ;)
Line:103 ,(KEYWORD    , if)
Line:103 ,(SEPERATOR  , ()
Line:103 ,(IDENTIFIER , MyID)
Line:103 ,(OPERATOR   , ==)
Line:103 ,(CONST      , 0)
Line:103 ,(SEPERATOR  , ))
Line:104 ,(SEPERATOR  , {)
Line:106 ,(IDENTIFIER , j)
Line:106 ,(OPERATOR   , =)
Line:106 ,(CONST      , 0)
Line:106 ,(SEPERATOR  , ;)
Line:107 ,(KEYWORD    , for)
Line:107 ,(SEPERATOR  , ()
Line:107 ,(IDENTIFIER , i)
Line:107 ,(OPERATOR   , =)
Line:107 ,(CONST      , 1)
Line:107 ,(SEPERATOR  , ;)
Line:107 ,(IDENTIFIER , i)
Line:107 ,(OPERATOR   , <)
Line:107 ,(IDENTIFIER , SumID)
Line:107 ,(SEPERATOR  , ;)
Line:107 ,(IDENTIFIER , i)
Line:107 ,(OPERATOR   , ++)
Line:107 ,(SEPERATOR  , ))
Line:108 ,(IDENTIFIER , MPI_Irecv)
Line:108 ,(SEPERATOR  , ()
Line:108 ,(OPERATOR   , &)
Line:108 ,(IDENTIFIER , temp1)
Line:108 ,(SEPERATOR  , [)
Line:108 ,(IDENTIFIER , i)
Line:108 ,(OPERATOR   , *)
Line:108 ,(IDENTIFIER , Spt)
Line:108 ,(SEPERATOR  , ])
Line:108 ,(SEPERATOR  , ,)
Line:108 ,(KEYWORD    , sizeof)
Line:108 ,(SEPERATOR  , ()
Line:108 ,(CONST      , 4)
Line:108 ,(SEPERATOR  , ))
Line:108 ,(OPERATOR   , *)
Line:108 ,(IDENTIFIER , Spt)
Line:108 ,(SEPERATOR  , ,)
Line:108 ,(IDENTIFIER , MPI_CHAR)
Line:108 ,(SEPERATOR  , ,)
Line:108 ,(IDENTIFIER , i)
Line:108 ,(SEPERATOR  , ,)
Line:108 ,(IDENTIFIER , ALLTOONE_TYPE)
Line:108 ,(OPERATOR   , +)
Line:108 ,(IDENTIFIER , i)
Line:108 ,(SEPERATOR  , ,)
Line:108 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:108 ,(SEPERATOR  , ,)
Line:108 ,(OPERATOR   , &)
Line:108 ,(IDENTIFIER , request)
Line:108 ,(SEPERATOR  , [)
Line:108 ,(IDENTIFIER , j)
Line:108 ,(OPERATOR   , ++)
Line:108 ,(SEPERATOR  , ])
Line:108 ,(SEPERATOR  , ))
Line:108 ,(SEPERATOR  , ;)
Line:109 ,(IDENTIFIER , MPI_Waitall)
Line:109 ,(SEPERATOR  , ()
Line:109 ,(IDENTIFIER , SumID)
Line:109 ,(OPERATOR   , -)
Line:109 ,(CONST      , 1)
Line:109 ,(SEPERATOR  , ,)
Line:109 ,(IDENTIFIER , request)
Line:109 ,(SEPERATOR  , ,)
Line:109 ,(IDENTIFIER , status)
Line:109 ,(SEPERATOR  , ))
Line:109 ,(SEPERATOR  , ;)
Line:112 ,(IDENTIFIER , MPI_Barrier)
Line:112 ,(SEPERATOR  , ()
Line:112 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:112 ,(SEPERATOR  , ))
Line:112 ,(SEPERATOR  , ;)
Line:113 ,(IDENTIFIER , quicksort)
Line:113 ,(SEPERATOR  , ()
Line:113 ,(IDENTIFIER , temp1)
Line:113 ,(SEPERATOR  , ,)
Line:113 ,(CONST      , 0)
Line:113 ,(SEPERATOR  , ,)
Line:113 ,(IDENTIFIER , SumID)
Line:113 ,(OPERATOR   , *)
Line:113 ,(IDENTIFIER , Spt)
Line:113 ,(OPERATOR   , -)
Line:113 ,(CONST      , 1)
Line:113 ,(SEPERATOR  , ))
Line:113 ,(SEPERATOR  , ;)
Line:114 ,(IDENTIFIER , MPI_Barrier)
Line:114 ,(SEPERATOR  , ()
Line:114 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:114 ,(SEPERATOR  , ))
Line:114 ,(SEPERATOR  , ;)
Line:116 ,(KEYWORD    , for)
Line:116 ,(SEPERATOR  , ()
Line:116 ,(IDENTIFIER , i)
Line:116 ,(OPERATOR   , =)
Line:116 ,(CONST      , 1)
Line:116 ,(SEPERATOR  , ;)
Line:116 ,(IDENTIFIER , i)
Line:116 ,(OPERATOR   , <)
Line:116 ,(IDENTIFIER , Spt)
Line:116 ,(OPERATOR   , +)
Line:116 ,(CONST      , 1)
Line:116 ,(SEPERATOR  , ;)
Line:116 ,(IDENTIFIER , i)
Line:116 ,(OPERATOR   , ++)
Line:116 ,(SEPERATOR  , ))
Line:117 ,(IDENTIFIER , temp1)
Line:117 ,(SEPERATOR  , [)
Line:117 ,(IDENTIFIER , i)
Line:117 ,(SEPERATOR  , ])
Line:117 ,(OPERATOR   , =)
Line:117 ,(IDENTIFIER , temp1)
Line:117 ,(SEPERATOR  , [)
Line:117 ,(IDENTIFIER , i)
Line:117 ,(OPERATOR   , *)
Line:117 ,(IDENTIFIER , Spt)
Line:117 ,(OPERATOR   , -)
Line:117 ,(CONST      , 1)
Line:117 ,(SEPERATOR  , ])
Line:117 ,(SEPERATOR  , ;)
Line:119 ,(IDENTIFIER , MPI_Bcast)
Line:119 ,(SEPERATOR  , ()
Line:119 ,(IDENTIFIER , temp1)
Line:119 ,(SEPERATOR  , ,)
Line:119 ,(KEYWORD    , sizeof)
Line:119 ,(SEPERATOR  , ()
Line:119 ,(CONST      , 4)
Line:119 ,(SEPERATOR  , ))
Line:119 ,(OPERATOR   , *)
Line:119 ,(SEPERATOR  , ()
Line:119 ,(CONST      , 1)
Line:119 ,(OPERATOR   , +)
Line:119 ,(IDENTIFIER , Spt)
Line:119 ,(SEPERATOR  , ))
Line:119 ,(SEPERATOR  , ,)
Line:119 ,(IDENTIFIER , MPI_CHAR)
Line:119 ,(SEPERATOR  , ,)
Line:119 ,(CONST      , 0)
Line:119 ,(SEPERATOR  , ,)
Line:119 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:119 ,(SEPERATOR  , ))
Line:119 ,(SEPERATOR  , ;)
Line:120 ,(IDENTIFIER , MPI_Barrier)
Line:120 ,(SEPERATOR  , ()
Line:120 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:120 ,(SEPERATOR  , ))
Line:120 ,(SEPERATOR  , ;)
Line:121 ,(SEPERATOR  , })
Line:122 ,(KEYWORD    , else)
Line:123 ,(SEPERATOR  , {)
Line:124 ,(IDENTIFIER , MPI_Send)
Line:124 ,(SEPERATOR  , ()
Line:124 ,(IDENTIFIER , temp1)
Line:124 ,(SEPERATOR  , ,)
Line:124 ,(KEYWORD    , sizeof)
Line:124 ,(SEPERATOR  , ()
Line:124 ,(CONST      , 4)
Line:124 ,(SEPERATOR  , ))
Line:124 ,(OPERATOR   , *)
Line:124 ,(IDENTIFIER , Spt)
Line:124 ,(SEPERATOR  , ,)
Line:124 ,(IDENTIFIER , MPI_CHAR)
Line:124 ,(SEPERATOR  , ,)
Line:124 ,(CONST      , 0)
Line:124 ,(SEPERATOR  , ,)
Line:124 ,(IDENTIFIER , ALLTOONE_TYPE)
Line:124 ,(OPERATOR   , +)
Line:124 ,(IDENTIFIER , MyID)
Line:124 ,(SEPERATOR  , ,)
Line:124 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:124 ,(SEPERATOR  , ))
Line:124 ,(SEPERATOR  , ;)
Line:125 ,(IDENTIFIER , MPI_Barrier)
Line:125 ,(SEPERATOR  , ()
Line:125 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:125 ,(SEPERATOR  , ))
Line:125 ,(SEPERATOR  , ;)
Line:126 ,(IDENTIFIER , MPI_Barrier)
Line:126 ,(SEPERATOR  , ()
Line:126 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:126 ,(SEPERATOR  , ))
Line:126 ,(SEPERATOR  , ;)
Line:127 ,(IDENTIFIER , MPI_Bcast)
Line:127 ,(SEPERATOR  , ()
Line:127 ,(IDENTIFIER , temp1)
Line:127 ,(SEPERATOR  , ,)
Line:127 ,(KEYWORD    , sizeof)
Line:127 ,(SEPERATOR  , ()
Line:127 ,(CONST      , 4)
Line:127 ,(SEPERATOR  , ))
Line:127 ,(OPERATOR   , *)
Line:127 ,(SEPERATOR  , ()
Line:127 ,(CONST      , 1)
Line:127 ,(OPERATOR   , +)
Line:127 ,(IDENTIFIER , Spt)
Line:127 ,(SEPERATOR  , ))
Line:127 ,(SEPERATOR  , ,)
Line:127 ,(IDENTIFIER , MPI_CHAR)
Line:127 ,(SEPERATOR  , ,)
Line:127 ,(CONST      , 0)
Line:127 ,(SEPERATOR  , ,)
Line:127 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:127 ,(SEPERATOR  , ))
Line:127 ,(SEPERATOR  , ;)
Line:128 ,(IDENTIFIER , MPI_Barrier)
Line:128 ,(SEPERATOR  , ()
Line:128 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:128 ,(SEPERATOR  , ))
Line:128 ,(SEPERATOR  , ;)
Line:129 ,(SEPERATOR  , })
Line:132 ,(IDENTIFIER , n)
Line:132 ,(OPERATOR   , =)
Line:132 ,(IDENTIFIER , mylength)
Line:132 ,(SEPERATOR  , ;)
Line:133 ,(IDENTIFIER , index)
Line:133 ,(SEPERATOR  , [)
Line:133 ,(CONST      , 0)
Line:133 ,(SEPERATOR  , ])
Line:133 ,(OPERATOR   , =)
Line:133 ,(CONST      , 0)
Line:133 ,(SEPERATOR  , ;)
Line:134 ,(IDENTIFIER , i)
Line:134 ,(OPERATOR   , =)
Line:134 ,(CONST      , 1)
Line:134 ,(SEPERATOR  , ;)
Line:135 ,(KEYWORD    , while)
Line:135 ,(SEPERATOR  , ()
Line:135 ,(SEPERATOR  , ()
Line:135 ,(IDENTIFIER , arr)
Line:135 ,(SEPERATOR  , [)
Line:135 ,(CONST      , 0)
Line:135 ,(SEPERATOR  , ])
Line:135 ,(OPERATOR   , >=)
Line:135 ,(IDENTIFIER , temp1)
Line:135 ,(SEPERATOR  , [)
Line:135 ,(IDENTIFIER , i)
Line:135 ,(SEPERATOR  , ])
Line:135 ,(SEPERATOR  , ))
Line:135 ,(OPERATOR   , &&)
Line:135 ,(SEPERATOR  , ()
Line:135 ,(IDENTIFIER , i)
Line:135 ,(OPERATOR   , <)
Line:135 ,(IDENTIFIER , SumID)
Line:135 ,(SEPERATOR  , ))
Line:135 ,(SEPERATOR  , ))
Line:136 ,(SEPERATOR  , {)
Line:137 ,(IDENTIFIER , index)
Line:137 ,(SEPERATOR  , [)
Line:137 ,(CONST      , 2)
Line:137 ,(OPERATOR   , *)
Line:137 ,(IDENTIFIER , i)
Line:137 ,(OPERATOR   , -)
Line:137 ,(CONST      , 1)
Line:137 ,(SEPERATOR  , ])
Line:137 ,(OPERATOR   , =)
Line:137 ,(CONST      , 0)
Line:137 ,(SEPERATOR  , ;)
Line:138 ,(IDENTIFIER , index)
Line:138 ,(SEPERATOR  , [)
Line:138 ,(CONST      , 2)
Line:138 ,(OPERATOR   , *)
Line:138 ,(IDENTIFIER , i)
Line:138 ,(SEPERATOR  , ])
Line:138 ,(OPERATOR   , =)
Line:138 ,(CONST      , 0)
Line:138 ,(SEPERATOR  , ;)
Line:139 ,(IDENTIFIER , i)
Line:139 ,(OPERATOR   , ++)
Line:139 ,(SEPERATOR  , ;)
Line:140 ,(SEPERATOR  , })
Line:141 ,(KEYWORD    , if)
Line:141 ,(SEPERATOR  , ()
Line:141 ,(IDENTIFIER , i)
Line:141 ,(OPERATOR   , ==)
Line:141 ,(IDENTIFIER , SumID)
Line:141 ,(SEPERATOR  , ))
Line:141 ,(IDENTIFIER , index)
Line:141 ,(SEPERATOR  , [)
Line:141 ,(CONST      , 2)
Line:141 ,(OPERATOR   , *)
Line:141 ,(IDENTIFIER , i)
Line:141 ,(OPERATOR   , -)
Line:141 ,(CONST      , 1)
Line:141 ,(SEPERATOR  , ])
Line:141 ,(OPERATOR   , =)
Line:141 ,(IDENTIFIER , n)
Line:141 ,(SEPERATOR  , ;)
Line:142 ,(IDENTIFIER , c1)
Line:142 ,(OPERATOR   , =)
Line:142 ,(CONST      , 0)
Line:142 ,(SEPERATOR  , ;)
Line:143 ,(KEYWORD    , while)
Line:143 ,(SEPERATOR  , ()
Line:143 ,(IDENTIFIER , i)
Line:143 ,(OPERATOR   , <)
Line:143 ,(IDENTIFIER , SumID)
Line:143 ,(SEPERATOR  , ))
Line:144 ,(SEPERATOR  , {)
Line:145 ,(IDENTIFIER , c4)
Line:145 ,(OPERATOR   , =)
Line:145 ,(IDENTIFIER , temp1)
Line:145 ,(SEPERATOR  , [)
Line:145 ,(IDENTIFIER , i)
Line:145 ,(SEPERATOR  , ])
Line:145 ,(SEPERATOR  , ;)
Line:146 ,(IDENTIFIER , c3)
Line:146 ,(OPERATOR   , =)
Line:146 ,(IDENTIFIER , n)
Line:146 ,(SEPERATOR  , ;)
Line:147 ,(IDENTIFIER , c2)
Line:147 ,(OPERATOR   , =)
Line:147 ,(SEPERATOR  , ()
Line:147 ,(KEYWORD    , int)
Line:147 ,(SEPERATOR  , ))
Line:147 ,(SEPERATOR  , ()
Line:147 ,(SEPERATOR  , ()
Line:147 ,(IDENTIFIER , c1)
Line:147 ,(OPERATOR   , +)
Line:147 ,(IDENTIFIER , c3)
Line:147 ,(SEPERATOR  , ))
Line:147 ,(OPERATOR   , /)
Line:147 ,(CONST      , 2)
Line:147 ,(SEPERATOR  , ))
Line:147 ,(SEPERATOR  , ;)
Line:148 ,(KEYWORD    , while)
Line:148 ,(SEPERATOR  , ()
Line:148 ,(SEPERATOR  , ()
Line:148 ,(IDENTIFIER , arr)
Line:148 ,(SEPERATOR  , [)
Line:148 ,(IDENTIFIER , c2)
Line:148 ,(SEPERATOR  , ])
Line:148 ,(OPERATOR   , !=)
Line:148 ,(IDENTIFIER , c4)
Line:148 ,(SEPERATOR  , ))
Line:148 ,(OPERATOR   , &&)
Line:148 ,(SEPERATOR  , ()
Line:148 ,(IDENTIFIER , c1)
Line:148 ,(OPERATOR   , <)
Line:148 ,(IDENTIFIER , c3)
Line:148 ,(SEPERATOR  , ))
Line:148 ,(SEPERATOR  , ))
Line:149 ,(SEPERATOR  , {)
Line:150 ,(KEYWORD    , if)
Line:150 ,(SEPERATOR  , ()
Line:150 ,(IDENTIFIER , arr)
Line:150 ,(SEPERATOR  , [)
Line:150 ,(IDENTIFIER , c2)
Line:150 ,(SEPERATOR  , ])
Line:150 ,(OPERATOR   , >)
Line:150 ,(IDENTIFIER , c4)
Line:150 ,(SEPERATOR  , ))
Line:151 ,(SEPERATOR  , {)
Line:152 ,(IDENTIFIER , c3)
Line:152 ,(OPERATOR   , =)
Line:152 ,(IDENTIFIER , c2)
Line:152 ,(OPERATOR   , -)
Line:152 ,(CONST      , 1)
Line:152 ,(SEPERATOR  , ;)
Line:153 ,(IDENTIFIER , c2)
Line:153 ,(OPERATOR   , =)
Line:153 ,(SEPERATOR  , ()
Line:153 ,(KEYWORD    , int)
Line:153 ,(SEPERATOR  , ))
Line:153 ,(SEPERATOR  , ()
Line:153 ,(SEPERATOR  , ()
Line:153 ,(IDENTIFIER , c1)
Line:153 ,(OPERATOR   , +)
Line:153 ,(IDENTIFIER , c3)
Line:153 ,(SEPERATOR  , ))
Line:153 ,(OPERATOR   , /)
Line:153 ,(CONST      , 2)
Line:153 ,(SEPERATOR  , ))
Line:153 ,(SEPERATOR  , ;)
Line:154 ,(SEPERATOR  , })
Line:155 ,(KEYWORD    , else)
Line:156 ,(SEPERATOR  , {)
Line:157 ,(IDENTIFIER , c1)
Line:157 ,(OPERATOR   , =)
Line:157 ,(IDENTIFIER , c2)
Line:157 ,(OPERATOR   , +)
Line:157 ,(CONST      , 1)
Line:157 ,(SEPERATOR  , ;)
Line:158 ,(IDENTIFIER , c2)
Line:158 ,(OPERATOR   , =)
Line:158 ,(SEPERATOR  , ()
Line:158 ,(KEYWORD    , int)
Line:158 ,(SEPERATOR  , ))
Line:158 ,(SEPERATOR  , ()
Line:158 ,(SEPERATOR  , ()
Line:158 ,(IDENTIFIER , c1)
Line:158 ,(OPERATOR   , +)
Line:158 ,(IDENTIFIER , c3)
Line:158 ,(SEPERATOR  , ))
Line:158 ,(OPERATOR   , /)
Line:158 ,(CONST      , 2)
Line:158 ,(SEPERATOR  , ))
Line:158 ,(SEPERATOR  , ;)
Line:159 ,(SEPERATOR  , })
Line:160 ,(SEPERATOR  , })
Line:161 ,(KEYWORD    , while)
Line:161 ,(SEPERATOR  , ()
Line:161 ,(SEPERATOR  , ()
Line:161 ,(IDENTIFIER , arr)
Line:161 ,(SEPERATOR  , [)
Line:161 ,(IDENTIFIER , c2)
Line:161 ,(SEPERATOR  , ])
Line:161 ,(OPERATOR   , <=)
Line:161 ,(IDENTIFIER , c4)
Line:161 ,(SEPERATOR  , ))
Line:161 ,(OPERATOR   , &&)
Line:161 ,(SEPERATOR  , ()
Line:161 ,(IDENTIFIER , c2)
Line:161 ,(OPERATOR   , <)
Line:161 ,(IDENTIFIER , n)
Line:161 ,(SEPERATOR  , ))
Line:161 ,(SEPERATOR  , ))
Line:161 ,(IDENTIFIER , c2)
Line:161 ,(OPERATOR   , ++)
Line:161 ,(SEPERATOR  , ;)
Line:162 ,(KEYWORD    , if)
Line:162 ,(SEPERATOR  , ()
Line:162 ,(IDENTIFIER , c2)
Line:162 ,(OPERATOR   , ==)
Line:162 ,(IDENTIFIER , n)
Line:162 ,(SEPERATOR  , ))
Line:163 ,(SEPERATOR  , {)
Line:164 ,(IDENTIFIER , index)
Line:164 ,(SEPERATOR  , [)
Line:164 ,(CONST      , 2)
Line:164 ,(OPERATOR   , *)
Line:164 ,(IDENTIFIER , i)
Line:164 ,(OPERATOR   , -)
Line:164 ,(CONST      , 1)
Line:164 ,(SEPERATOR  , ])
Line:164 ,(OPERATOR   , =)
Line:164 ,(IDENTIFIER , n)
Line:164 ,(SEPERATOR  , ;)
Line:165 ,(KEYWORD    , for)
Line:165 ,(SEPERATOR  , ()
Line:165 ,(IDENTIFIER , k)
Line:165 ,(OPERATOR   , =)
Line:165 ,(IDENTIFIER , i)
Line:165 ,(SEPERATOR  , ;)
Line:165 ,(IDENTIFIER , k)
Line:165 ,(OPERATOR   , <)
Line:165 ,(IDENTIFIER , SumID)
Line:165 ,(SEPERATOR  , ;)
Line:165 ,(IDENTIFIER , k)
Line:165 ,(OPERATOR   , ++)
Line:165 ,(SEPERATOR  , ))
Line:166 ,(SEPERATOR  , {)
Line:167 ,(IDENTIFIER , index)
Line:167 ,(SEPERATOR  , [)
Line:167 ,(CONST      , 2)
Line:167 ,(OPERATOR   , *)
Line:167 ,(IDENTIFIER , k)
Line:167 ,(SEPERATOR  , ])
Line:167 ,(OPERATOR   , =)
Line:167 ,(CONST      , 0)
Line:167 ,(SEPERATOR  , ;)
Line:168 ,(IDENTIFIER , index)
Line:168 ,(SEPERATOR  , [)
Line:168 ,(CONST      , 2)
Line:168 ,(OPERATOR   , *)
Line:168 ,(IDENTIFIER , k)
Line:168 ,(OPERATOR   , +)
Line:168 ,(CONST      , 1)
Line:168 ,(SEPERATOR  , ])
Line:168 ,(OPERATOR   , =)
Line:168 ,(CONST      , 0)
Line:168 ,(SEPERATOR  , ;)
Line:169 ,(SEPERATOR  , })
Line:170 ,(IDENTIFIER , i)
Line:170 ,(OPERATOR   , =)
Line:170 ,(IDENTIFIER , SumID)
Line:170 ,(SEPERATOR  , ;)
Line:171 ,(SEPERATOR  , })
Line:172 ,(KEYWORD    , else)
Line:173 ,(SEPERATOR  , {)
Line:174 ,(IDENTIFIER , index)
Line:174 ,(SEPERATOR  , [)
Line:174 ,(CONST      , 2)
Line:174 ,(OPERATOR   , *)
Line:174 ,(IDENTIFIER , i)
Line:174 ,(SEPERATOR  , ])
Line:174 ,(OPERATOR   , =)
Line:174 ,(IDENTIFIER , c2)
Line:174 ,(SEPERATOR  , ;)
Line:175 ,(IDENTIFIER , index)
Line:175 ,(SEPERATOR  , [)
Line:175 ,(CONST      , 2)
Line:175 ,(OPERATOR   , *)
Line:175 ,(IDENTIFIER , i)
Line:175 ,(OPERATOR   , -)
Line:175 ,(CONST      , 1)
Line:175 ,(SEPERATOR  , ])
Line:175 ,(OPERATOR   , =)
Line:175 ,(IDENTIFIER , c2)
Line:175 ,(SEPERATOR  , ;)
Line:176 ,(SEPERATOR  , })
Line:177 ,(IDENTIFIER , c1)
Line:177 ,(OPERATOR   , =)
Line:177 ,(IDENTIFIER , c2)
Line:177 ,(SEPERATOR  , ;)
Line:178 ,(IDENTIFIER , c2)
Line:178 ,(OPERATOR   , =)
Line:178 ,(SEPERATOR  , ()
Line:178 ,(KEYWORD    , int)
Line:178 ,(SEPERATOR  , ))
Line:178 ,(SEPERATOR  , ()
Line:178 ,(SEPERATOR  , ()
Line:178 ,(IDENTIFIER , c1)
Line:178 ,(OPERATOR   , +)
Line:178 ,(IDENTIFIER , c3)
Line:178 ,(SEPERATOR  , ))
Line:178 ,(OPERATOR   , /)
Line:178 ,(CONST      , 2)
Line:178 ,(SEPERATOR  , ))
Line:178 ,(SEPERATOR  , ;)
Line:179 ,(IDENTIFIER , i)
Line:179 ,(OPERATOR   , ++)
Line:179 ,(SEPERATOR  , ;)
Line:180 ,(SEPERATOR  , })
Line:181 ,(KEYWORD    , if)
Line:181 ,(SEPERATOR  , ()
Line:181 ,(IDENTIFIER , i)
Line:181 ,(OPERATOR   , ==)
Line:181 ,(IDENTIFIER , SumID)
Line:181 ,(SEPERATOR  , ))
Line:181 ,(IDENTIFIER , index)
Line:181 ,(SEPERATOR  , [)
Line:181 ,(CONST      , 2)
Line:181 ,(OPERATOR   , *)
Line:181 ,(IDENTIFIER , i)
Line:181 ,(OPERATOR   , -)
Line:181 ,(CONST      , 1)
Line:181 ,(SEPERATOR  , ])
Line:181 ,(OPERATOR   , =)
Line:181 ,(IDENTIFIER , n)
Line:181 ,(SEPERATOR  , ;)
Line:183 ,(IDENTIFIER , MPI_Barrier)
Line:183 ,(SEPERATOR  , ()
Line:183 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:183 ,(SEPERATOR  , ))
Line:183 ,(SEPERATOR  , ;)
Line:187 ,(IDENTIFIER , j)
Line:187 ,(OPERATOR   , =)
Line:187 ,(CONST      , 0)
Line:187 ,(SEPERATOR  , ;)
Line:188 ,(KEYWORD    , for)
Line:188 ,(SEPERATOR  , ()
Line:188 ,(IDENTIFIER , i)
Line:188 ,(OPERATOR   , =)
Line:188 ,(CONST      , 0)
Line:188 ,(SEPERATOR  , ;)
Line:188 ,(IDENTIFIER , i)
Line:188 ,(OPERATOR   , <)
Line:188 ,(IDENTIFIER , SumID)
Line:188 ,(SEPERATOR  , ;)
Line:188 ,(IDENTIFIER , i)
Line:188 ,(OPERATOR   , ++)
Line:188 ,(SEPERATOR  , ))
Line:189 ,(SEPERATOR  , {)
Line:190 ,(KEYWORD    , if)
Line:190 ,(SEPERATOR  , ()
Line:190 ,(IDENTIFIER , i)
Line:190 ,(OPERATOR   , ==)
Line:190 ,(IDENTIFIER , MyID)
Line:190 ,(SEPERATOR  , ))
Line:191 ,(SEPERATOR  , {)
Line:192 ,(IDENTIFIER , temp1)
Line:192 ,(SEPERATOR  , [)
Line:192 ,(IDENTIFIER , i)
Line:192 ,(SEPERATOR  , ])
Line:192 ,(OPERATOR   , =)
Line:192 ,(IDENTIFIER , index)
Line:192 ,(SEPERATOR  , [)
Line:192 ,(CONST      , 2)
Line:192 ,(OPERATOR   , *)
Line:192 ,(IDENTIFIER , i)
Line:192 ,(OPERATOR   , +)
Line:192 ,(CONST      , 1)
Line:192 ,(SEPERATOR  , ])
Line:192 ,(OPERATOR   , -)
Line:192 ,(IDENTIFIER , index)
Line:192 ,(SEPERATOR  , [)
Line:192 ,(CONST      , 2)
Line:192 ,(OPERATOR   , *)
Line:192 ,(IDENTIFIER , i)
Line:192 ,(SEPERATOR  , ])
Line:192 ,(SEPERATOR  , ;)
Line:193 ,(KEYWORD    , for)
Line:193 ,(SEPERATOR  , ()
Line:193 ,(IDENTIFIER , n)
Line:193 ,(OPERATOR   , =)
Line:193 ,(CONST      , 0)
Line:193 ,(SEPERATOR  , ;)
Line:193 ,(IDENTIFIER , n)
Line:193 ,(OPERATOR   , <)
Line:193 ,(IDENTIFIER , SumID)
Line:193 ,(SEPERATOR  , ;)
Line:193 ,(IDENTIFIER , n)
Line:193 ,(OPERATOR   , ++)
Line:193 ,(SEPERATOR  , ))
Line:194 ,(KEYWORD    , if)
Line:194 ,(SEPERATOR  , ()
Line:194 ,(IDENTIFIER , n)
Line:194 ,(OPERATOR   , !=)
Line:194 ,(IDENTIFIER , MyID)
Line:194 ,(SEPERATOR  , ))
Line:195 ,(SEPERATOR  , {)
Line:196 ,(IDENTIFIER , k)
Line:196 ,(OPERATOR   , =)
Line:196 ,(IDENTIFIER , index)
Line:196 ,(SEPERATOR  , [)
Line:196 ,(CONST      , 2)
Line:196 ,(OPERATOR   , *)
Line:196 ,(IDENTIFIER , n)
Line:196 ,(OPERATOR   , +)
Line:196 ,(CONST      , 1)
Line:196 ,(SEPERATOR  , ])
Line:196 ,(OPERATOR   , -)
Line:196 ,(IDENTIFIER , index)
Line:196 ,(SEPERATOR  , [)
Line:196 ,(CONST      , 2)
Line:196 ,(OPERATOR   , *)
Line:196 ,(IDENTIFIER , n)
Line:196 ,(SEPERATOR  , ])
Line:196 ,(SEPERATOR  , ;)
Line:197 ,(IDENTIFIER , MPI_Send)
Line:197 ,(SEPERATOR  , ()
Line:197 ,(OPERATOR   , &)
Line:197 ,(IDENTIFIER , k)
Line:197 ,(SEPERATOR  , ,)
Line:197 ,(KEYWORD    , sizeof)
Line:197 ,(SEPERATOR  , ()
Line:197 ,(CONST      , 4)
Line:197 ,(SEPERATOR  , ))
Line:197 ,(SEPERATOR  , ,)
Line:197 ,(IDENTIFIER , MPI_CHAR)
Line:197 ,(SEPERATOR  , ,)
Line:197 ,(IDENTIFIER , n)
Line:197 ,(SEPERATOR  , ,)
Line:197 ,(IDENTIFIER , MULTI_LEN)
Line:197 ,(OPERATOR   , +)
Line:197 ,(IDENTIFIER , MyID)
Line:197 ,(SEPERATOR  , ,)
Line:197 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:197 ,(SEPERATOR  , ))
Line:197 ,(SEPERATOR  , ;)
Line:198 ,(SEPERATOR  , })
Line:200 ,(SEPERATOR  , })
Line:201 ,(KEYWORD    , else)
Line:202 ,(SEPERATOR  , {)
Line:203 ,(IDENTIFIER , MPI_Recv)
Line:203 ,(SEPERATOR  , ()
Line:203 ,(OPERATOR   , &)
Line:203 ,(IDENTIFIER , temp1)
Line:203 ,(SEPERATOR  , [)
Line:203 ,(IDENTIFIER , i)
Line:203 ,(SEPERATOR  , ])
Line:203 ,(SEPERATOR  , ,)
Line:203 ,(KEYWORD    , sizeof)
Line:203 ,(SEPERATOR  , ()
Line:203 ,(CONST      , 4)
Line:203 ,(SEPERATOR  , ))
Line:203 ,(SEPERATOR  , ,)
Line:203 ,(IDENTIFIER , MPI_CHAR)
Line:203 ,(SEPERATOR  , ,)
Line:203 ,(IDENTIFIER , i)
Line:203 ,(SEPERATOR  , ,)
Line:203 ,(IDENTIFIER , MULTI_LEN)
Line:203 ,(OPERATOR   , +)
Line:203 ,(IDENTIFIER , i)
Line:203 ,(SEPERATOR  , ,)
Line:203 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:203 ,(SEPERATOR  , ,)
Line:203 ,(OPERATOR   , &)
Line:203 ,(IDENTIFIER , status)
Line:203 ,(SEPERATOR  , [)
Line:203 ,(IDENTIFIER , j)
Line:203 ,(OPERATOR   , ++)
Line:203 ,(SEPERATOR  , ])
Line:203 ,(SEPERATOR  , ))
Line:203 ,(SEPERATOR  , ;)
Line:204 ,(SEPERATOR  , })
Line:205 ,(SEPERATOR  , })
Line:207 ,(IDENTIFIER , MPI_Barrier)
Line:207 ,(SEPERATOR  , ()
Line:207 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:207 ,(SEPERATOR  , ))
Line:207 ,(SEPERATOR  , ;)
Line:209 ,(IDENTIFIER , j)
Line:209 ,(OPERATOR   , =)
Line:209 ,(CONST      , 0)
Line:209 ,(SEPERATOR  , ;)
Line:210 ,(IDENTIFIER , k)
Line:210 ,(OPERATOR   , =)
Line:210 ,(CONST      , 0)
Line:210 ,(SEPERATOR  , ;)
Line:211 ,(IDENTIFIER , l)
Line:211 ,(OPERATOR   , =)
Line:211 ,(CONST      , 0)
Line:211 ,(SEPERATOR  , ;)
Line:213 ,(KEYWORD    , for)
Line:213 ,(SEPERATOR  , ()
Line:213 ,(IDENTIFIER , i)
Line:213 ,(OPERATOR   , =)
Line:213 ,(CONST      , 0)
Line:213 ,(SEPERATOR  , ;)
Line:213 ,(IDENTIFIER , i)
Line:213 ,(OPERATOR   , <)
Line:213 ,(IDENTIFIER , SumID)
Line:213 ,(SEPERATOR  , ;)
Line:213 ,(IDENTIFIER , i)
Line:213 ,(OPERATOR   , ++)
Line:213 ,(SEPERATOR  , ))
Line:214 ,(SEPERATOR  , {)
Line:215 ,(IDENTIFIER , MPI_Barrier)
Line:215 ,(SEPERATOR  , ()
Line:215 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:215 ,(SEPERATOR  , ))
Line:215 ,(SEPERATOR  , ;)
Line:217 ,(KEYWORD    , if)
Line:217 ,(SEPERATOR  , ()
Line:217 ,(IDENTIFIER , i)
Line:217 ,(OPERATOR   , ==)
Line:217 ,(IDENTIFIER , MyID)
Line:217 ,(SEPERATOR  , ))
Line:218 ,(SEPERATOR  , {)
Line:219 ,(KEYWORD    , for)
Line:219 ,(SEPERATOR  , ()
Line:219 ,(IDENTIFIER , n)
Line:219 ,(OPERATOR   , =)
Line:219 ,(IDENTIFIER , index)
Line:219 ,(SEPERATOR  , [)
Line:219 ,(CONST      , 2)
Line:219 ,(OPERATOR   , *)
Line:219 ,(IDENTIFIER , i)
Line:219 ,(SEPERATOR  , ])
Line:219 ,(SEPERATOR  , ;)
Line:219 ,(IDENTIFIER , n)
Line:219 ,(OPERATOR   , <)
Line:219 ,(IDENTIFIER , index)
Line:219 ,(SEPERATOR  , [)
Line:219 ,(CONST      , 2)
Line:219 ,(OPERATOR   , *)
Line:219 ,(IDENTIFIER , i)
Line:219 ,(OPERATOR   , +)
Line:219 ,(CONST      , 1)
Line:219 ,(SEPERATOR  , ])
Line:219 ,(SEPERATOR  , ;)
Line:219 ,(IDENTIFIER , n)
Line:219 ,(OPERATOR   , ++)
Line:219 ,(SEPERATOR  , ))
Line:220 ,(IDENTIFIER , arr1)
Line:220 ,(SEPERATOR  , [)
Line:220 ,(IDENTIFIER , k)
Line:220 ,(OPERATOR   , ++)
Line:220 ,(SEPERATOR  , ])
Line:220 ,(OPERATOR   , =)
Line:220 ,(IDENTIFIER , arr)
Line:220 ,(SEPERATOR  , [)
Line:220 ,(IDENTIFIER , n)
Line:220 ,(SEPERATOR  , ])
Line:220 ,(SEPERATOR  , ;)
Line:221 ,(SEPERATOR  , })
Line:223 ,(IDENTIFIER , MPI_Barrier)
Line:223 ,(SEPERATOR  , ()
Line:223 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:223 ,(SEPERATOR  , ))
Line:223 ,(SEPERATOR  , ;)
Line:225 ,(KEYWORD    , if)
Line:225 ,(SEPERATOR  , ()
Line:225 ,(IDENTIFIER , i)
Line:225 ,(OPERATOR   , ==)
Line:225 ,(IDENTIFIER , MyID)
Line:225 ,(SEPERATOR  , ))
Line:226 ,(SEPERATOR  , {)
Line:227 ,(KEYWORD    , for)
Line:227 ,(SEPERATOR  , ()
Line:227 ,(IDENTIFIER , n)
Line:227 ,(OPERATOR   , =)
Line:227 ,(CONST      , 0)
Line:227 ,(SEPERATOR  , ;)
Line:227 ,(IDENTIFIER , n)
Line:227 ,(OPERATOR   , <)
Line:227 ,(IDENTIFIER , SumID)
Line:227 ,(SEPERATOR  , ;)
Line:227 ,(IDENTIFIER , n)
Line:227 ,(OPERATOR   , ++)
Line:227 ,(SEPERATOR  , ))
Line:228 ,(KEYWORD    , if)
Line:228 ,(SEPERATOR  , ()
Line:228 ,(IDENTIFIER , n)
Line:228 ,(OPERATOR   , !=)
Line:228 ,(IDENTIFIER , MyID)
Line:228 ,(SEPERATOR  , ))
Line:229 ,(SEPERATOR  , {)
Line:230 ,(IDENTIFIER , MPI_Send)
Line:230 ,(SEPERATOR  , ()
Line:230 ,(OPERATOR   , &)
Line:230 ,(IDENTIFIER , arr)
Line:230 ,(SEPERATOR  , [)
Line:230 ,(IDENTIFIER , index)
Line:230 ,(SEPERATOR  , [)
Line:230 ,(CONST      , 2)
Line:230 ,(OPERATOR   , *)
Line:230 ,(IDENTIFIER , n)
Line:230 ,(SEPERATOR  , ])
Line:230 ,(SEPERATOR  , ])
Line:230 ,(SEPERATOR  , ,)
Line:230 ,(KEYWORD    , sizeof)
Line:230 ,(SEPERATOR  , ()
Line:230 ,(CONST      , 4)
Line:230 ,(SEPERATOR  , ))
Line:230 ,(OPERATOR   , *)
Line:230 ,(SEPERATOR  , ()
Line:230 ,(IDENTIFIER , index)
Line:230 ,(SEPERATOR  , [)
Line:230 ,(CONST      , 2)
Line:230 ,(OPERATOR   , *)
Line:230 ,(IDENTIFIER , n)
Line:230 ,(OPERATOR   , +)
Line:230 ,(CONST      , 1)
Line:230 ,(SEPERATOR  , ])
Line:230 ,(OPERATOR   , -)
Line:230 ,(IDENTIFIER , index)
Line:230 ,(SEPERATOR  , [)
Line:230 ,(CONST      , 2)
Line:230 ,(OPERATOR   , *)
Line:230 ,(IDENTIFIER , n)
Line:230 ,(SEPERATOR  , ])
Line:230 ,(SEPERATOR  , ))
Line:230 ,(SEPERATOR  , ,)
Line:230 ,(IDENTIFIER , MPI_CHAR)
Line:230 ,(SEPERATOR  , ,)
Line:230 ,(IDENTIFIER , n)
Line:230 ,(SEPERATOR  , ,)
Line:230 ,(IDENTIFIER , MULTI_TYPE)
Line:230 ,(OPERATOR   , +)
Line:230 ,(IDENTIFIER , MyID)
Line:230 ,(SEPERATOR  , ,)
Line:230 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:230 ,(SEPERATOR  , ))
Line:230 ,(SEPERATOR  , ;)
Line:231 ,(SEPERATOR  , })
Line:233 ,(SEPERATOR  , })
Line:234 ,(KEYWORD    , else)
Line:235 ,(SEPERATOR  , {)
Line:236 ,(IDENTIFIER , l)
Line:236 ,(OPERATOR   , =)
Line:236 ,(IDENTIFIER , temp1)
Line:236 ,(SEPERATOR  , [)
Line:236 ,(IDENTIFIER , i)
Line:236 ,(SEPERATOR  , ])
Line:236 ,(SEPERATOR  , ;)
Line:237 ,(IDENTIFIER , MPI_Recv)
Line:237 ,(SEPERATOR  , ()
Line:237 ,(OPERATOR   , &)
Line:237 ,(IDENTIFIER , arr1)
Line:237 ,(SEPERATOR  , [)
Line:237 ,(IDENTIFIER , k)
Line:237 ,(SEPERATOR  , ])
Line:237 ,(SEPERATOR  , ,)
Line:237 ,(IDENTIFIER , l)
Line:237 ,(OPERATOR   , *)
Line:237 ,(KEYWORD    , sizeof)
Line:237 ,(SEPERATOR  , ()
Line:237 ,(CONST      , 4)
Line:237 ,(SEPERATOR  , ))
Line:237 ,(SEPERATOR  , ,)
Line:237 ,(IDENTIFIER , MPI_CHAR)
Line:237 ,(SEPERATOR  , ,)
Line:237 ,(IDENTIFIER , i)
Line:237 ,(SEPERATOR  , ,)
Line:237 ,(IDENTIFIER , MULTI_TYPE)
Line:237 ,(OPERATOR   , +)
Line:237 ,(IDENTIFIER , i)
Line:237 ,(SEPERATOR  , ,)
Line:237 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:237 ,(SEPERATOR  , ,)
Line:237 ,(OPERATOR   , &)
Line:237 ,(IDENTIFIER , status)
Line:237 ,(SEPERATOR  , [)
Line:237 ,(IDENTIFIER , j)
Line:237 ,(OPERATOR   , ++)
Line:237 ,(SEPERATOR  , ])
Line:237 ,(SEPERATOR  , ))
Line:237 ,(SEPERATOR  , ;)
Line:238 ,(IDENTIFIER , k)
Line:238 ,(OPERATOR   , =)
Line:238 ,(IDENTIFIER , k)
Line:238 ,(OPERATOR   , +)
Line:238 ,(IDENTIFIER , l)
Line:238 ,(SEPERATOR  , ;)
Line:239 ,(SEPERATOR  , })
Line:241 ,(IDENTIFIER , MPI_Barrier)
Line:241 ,(SEPERATOR  , ()
Line:241 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:241 ,(SEPERATOR  , ))
Line:241 ,(SEPERATOR  , ;)
Line:242 ,(SEPERATOR  , })
Line:243 ,(IDENTIFIER , mylength)
Line:243 ,(OPERATOR   , =)
Line:243 ,(IDENTIFIER , k)
Line:243 ,(SEPERATOR  , ;)
Line:244 ,(IDENTIFIER , MPI_Barrier)
Line:244 ,(SEPERATOR  , ()
Line:244 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:244 ,(SEPERATOR  , ))
Line:244 ,(SEPERATOR  , ;)
Line:247 ,(IDENTIFIER , k)
Line:247 ,(OPERATOR   , =)
Line:247 ,(CONST      , 0)
Line:247 ,(SEPERATOR  , ;)
Line:248 ,(IDENTIFIER , multimerge)
Line:248 ,(SEPERATOR  , ()
Line:248 ,(IDENTIFIER , arr1)
Line:248 ,(SEPERATOR  , ,)
Line:248 ,(IDENTIFIER , temp1)
Line:248 ,(SEPERATOR  , ,)
Line:248 ,(IDENTIFIER , arr)
Line:248 ,(SEPERATOR  , ,)
Line:248 ,(OPERATOR   , &)
Line:248 ,(IDENTIFIER , k)
Line:248 ,(SEPERATOR  , ,)
Line:248 ,(IDENTIFIER , SumID)
Line:248 ,(SEPERATOR  , ))
Line:248 ,(SEPERATOR  , ;)
Line:249 ,(IDENTIFIER , MPI_Barrier)
Line:249 ,(SEPERATOR  , ()
Line:249 ,(IDENTIFIER , MPI_COMM_WORLD)
Line:249 ,(SEPERATOR  , ))
Line:249 ,(SEPERATOR  , ;)
Line:250 ,(SEPERATOR  , })
Line:252 ,(IDENTIFIER , printf)
Line:252 ,(SEPERATOR  , ()
Line:252 ,(CONST      , "On node %d the sorted data is : \n")
Line:252 ,(SEPERATOR  , ,)
Line:252 ,(IDENTIFIER , MyID)
Line:252 ,(SEPERATOR  , ))
Line:252 ,(SEPERATOR  , ;)
Line:253 ,(KEYWORD    , for)
Line:253 ,(SEPERATOR  , ()
Line:253 ,(IDENTIFIER , i)
Line:253 ,(OPERATOR   , =)
Line:253 ,(CONST      , 0)
Line:253 ,(SEPERATOR  , ;)
Line:253 ,(IDENTIFIER , i)
Line:253 ,(OPERATOR   , <)
Line:253 ,(IDENTIFIER , mylength)
Line:253 ,(SEPERATOR  , ;)
Line:253 ,(IDENTIFIER , i)
Line:253 ,(OPERATOR   , ++)
Line:253 ,(SEPERATOR  , ))
Line:254 ,(IDENTIFIER , printf)
Line:254 ,(SEPERATOR  , ()
Line:254 ,(CONST      , "%d : ")
Line:254 ,(SEPERATOR  , ,)
Line:254 ,(IDENTIFIER , arr)
Line:254 ,(SEPERATOR  , [)
Line:254 ,(IDENTIFIER , i)
Line:254 ,(SEPERATOR  , ])
Line:254 ,(SEPERATOR  , ))
Line:254 ,(SEPERATOR  , ;)
Line:255 ,(IDENTIFIER , printf)
Line:255 ,(SEPERATOR  , ()
Line:255 ,(CONST      , "\n")
Line:255 ,(SEPERATOR  , ))
Line:255 ,(SEPERATOR  , ;)
Line:256 ,(SEPERATOR  , })
Line:260 ,(KEYWORD    , void)
Line:260 ,(IDENTIFIER , merror)
Line:260 ,(SEPERATOR  , ()
Line:260 ,(KEYWORD    , char)
Line:260 ,(OPERATOR   , *)
Line:260 ,(IDENTIFIER , ch)
Line:260 ,(SEPERATOR  , ))
Line:261 ,(SEPERATOR  , {)
Line:262 ,(IDENTIFIER , printf)
Line:262 ,(SEPERATOR  , ()
Line:262 ,(CONST      , "%s\n")
Line:262 ,(SEPERATOR  , ,)
Line:262 ,(IDENTIFIER , ch)
Line:262 ,(SEPERATOR  , ))
Line:262 ,(SEPERATOR  , ;)
Line:263 ,(IDENTIFIER , exit)
Line:263 ,(SEPERATOR  , ()
Line:263 ,(CONST      , 1)
Line:263 ,(SEPERATOR  , ))
Line:263 ,(SEPERATOR  , ;)
Line:264 ,(SEPERATOR  , })
Line:268 ,(KEYWORD    , void)
Line:268 ,(IDENTIFIER , quicksort)
Line:268 ,(SEPERATOR  , ()
Line:268 ,(KEYWORD    , int)
Line:268 ,(OPERATOR   , *)
Line:268 ,(IDENTIFIER , datas)
Line:268 ,(SEPERATOR  , ,)
Line:268 ,(KEYWORD    , int)
Line:268 ,(IDENTIFIER , bb)
Line:268 ,(SEPERATOR  , ,)
Line:268 ,(KEYWORD    , int)
Line:268 ,(IDENTIFIER , ee)
Line:268 ,(SEPERATOR  , ))
Line:269 ,(SEPERATOR  , {)
Line:270 ,(KEYWORD    , int)
Line:270 ,(IDENTIFIER , tt)
Line:270 ,(SEPERATOR  , ,)
Line:270 ,(IDENTIFIER , i)
Line:270 ,(SEPERATOR  , ,)
Line:270 ,(IDENTIFIER , j)
Line:270 ,(SEPERATOR  , ;)
Line:271 ,(IDENTIFIER , tt)
Line:271 ,(OPERATOR   , =)
Line:271 ,(IDENTIFIER , datas)
Line:271 ,(SEPERATOR  , [)
Line:271 ,(IDENTIFIER , bb)
Line:271 ,(SEPERATOR  , ])
Line:271 ,(SEPERATOR  , ;)
Line:272 ,(IDENTIFIER , i)
Line:272 ,(OPERATOR   , =)
Line:272 ,(IDENTIFIER , bb)
Line:272 ,(SEPERATOR  , ;)
Line:273 ,(IDENTIFIER , j)
Line:273 ,(OPERATOR   , =)
Line:273 ,(IDENTIFIER , ee)
Line:273 ,(SEPERATOR  , ;)
Line:275 ,(KEYWORD    , if)
Line:275 ,(SEPERATOR  , ()
Line:275 ,(IDENTIFIER , i)
Line:275 ,(OPERATOR   , <)
Line:275 ,(IDENTIFIER , j)
Line:275 ,(SEPERATOR  , ))
Line:276 ,(SEPERATOR  , {)
Line:277 ,(KEYWORD    , while)
Line:277 ,(SEPERATOR  , ()
Line:277 ,(IDENTIFIER , i)
Line:277 ,(OPERATOR   , <)
Line:277 ,(IDENTIFIER , j)
Line:277 ,(SEPERATOR  , ))
Line:278 ,(SEPERATOR  , {)
Line:279 ,(KEYWORD    , while)
Line:279 ,(SEPERATOR  , ()
Line:279 ,(SEPERATOR  , ()
Line:279 ,(IDENTIFIER , i)
Line:279 ,(OPERATOR   , <)
Line:279 ,(IDENTIFIER , j)
Line:279 ,(SEPERATOR  , ))
Line:279 ,(OPERATOR   , &&)
Line:279 ,(SEPERATOR  , ()
Line:279 ,(IDENTIFIER , tt)
Line:279 ,(OPERATOR   , <=)
Line:279 ,(IDENTIFIER , datas)
Line:279 ,(SEPERATOR  , [)
Line:279 ,(IDENTIFIER , j)
Line:279 ,(SEPERATOR  , ])
Line:279 ,(SEPERATOR  , ))
Line:279 ,(SEPERATOR  , ))
Line:279 ,(IDENTIFIER , j)
Line:279 ,(OPERATOR   , --)
Line:279 ,(SEPERATOR  , ;)
Line:280 ,(KEYWORD    , if)
Line:280 ,(SEPERATOR  , ()
Line:280 ,(IDENTIFIER , i)
Line:280 ,(OPERATOR   , <)
Line:280 ,(IDENTIFIER , j)
Line:280 ,(SEPERATOR  , ))
Line:281 ,(SEPERATOR  , {)
Line:282 ,(IDENTIFIER , datas)
Line:282 ,(SEPERATOR  , [)
Line:282 ,(IDENTIFIER , i)
Line:282 ,(SEPERATOR  , ])
Line:282 ,(OPERATOR   , =)
Line:282 ,(IDENTIFIER , datas)
Line:282 ,(SEPERATOR  , [)
Line:282 ,(IDENTIFIER , j)
Line:282 ,(SEPERATOR  , ])
Line:282 ,(SEPERATOR  , ;)
Line:283 ,(IDENTIFIER , i)
Line:283 ,(OPERATOR   , ++)
Line:283 ,(SEPERATOR  , ;)
Line:284 ,(KEYWORD    , while)
Line:284 ,(SEPERATOR  , ()
Line:284 ,(SEPERATOR  , ()
Line:284 ,(IDENTIFIER , i)
Line:284 ,(OPERATOR   , <)
Line:284 ,(IDENTIFIER , j)
Line:284 ,(SEPERATOR  , ))
Line:284 ,(OPERATOR   , &&)
Line:284 ,(SEPERATOR  , ()
Line:284 ,(IDENTIFIER , tt)
Line:284 ,(OPERATOR   , >)
Line:284 ,(IDENTIFIER , datas)
Line:284 ,(SEPERATOR  , [)
Line:284 ,(IDENTIFIER , i)
Line:284 ,(SEPERATOR  , ])
Line:284 ,(SEPERATOR  , ))
Line:284 ,(SEPERATOR  , ))
Line:284 ,(IDENTIFIER , i)
Line:284 ,(OPERATOR   , ++)
Line:284 ,(SEPERATOR  , ;)
Line:285 ,(KEYWORD    , if)
Line:285 ,(SEPERATOR  , ()
Line:285 ,(IDENTIFIER , i)
Line:285 ,(OPERATOR   , <)
Line:285 ,(IDENTIFIER , j)
Line:285 ,(SEPERATOR  , ))
Line:286 ,(SEPERATOR  , {)
Line:287 ,(IDENTIFIER , datas)
Line:287 ,(SEPERATOR  , [)
Line:287 ,(IDENTIFIER , j)
Line:287 ,(SEPERATOR  , ])
Line:287 ,(OPERATOR   , =)
Line:287 ,(IDENTIFIER , datas)
Line:287 ,(SEPERATOR  , [)
Line:287 ,(IDENTIFIER , i)
Line:287 ,(SEPERATOR  , ])
Line:287 ,(SEPERATOR  , ;)
Line:288 ,(IDENTIFIER , j)
Line:288 ,(OPERATOR   , --)
Line:288 ,(SEPERATOR  , ;)
Line:289 ,(KEYWORD    , if)
Line:289 ,(SEPERATOR  , ()
Line:289 ,(IDENTIFIER , i)
Line:289 ,(OPERATOR   , ==)
Line:289 ,(IDENTIFIER , j)
Line:289 ,(SEPERATOR  , ))
Line:289 ,(IDENTIFIER , datas)
Line:289 ,(SEPERATOR  , [)
Line:289 ,(IDENTIFIER , i)
Line:289 ,(SEPERATOR  , ])
Line:289 ,(OPERATOR   , =)
Line:289 ,(IDENTIFIER , tt)
Line:289 ,(SEPERATOR  , ;)
Line:290 ,(SEPERATOR  , })
Line:291 ,(KEYWORD    , else)
Line:291 ,(IDENTIFIER , datas)
Line:291 ,(SEPERATOR  , [)
Line:291 ,(IDENTIFIER , j)
Line:291 ,(SEPERATOR  , ])
Line:291 ,(OPERATOR   , =)
Line:291 ,(IDENTIFIER , tt)
Line:291 ,(SEPERATOR  , ;)
Line:292 ,(SEPERATOR  , })
Line:292 ,(KEYWORD    , else)
Line:292 ,(IDENTIFIER , datas)
Line:292 ,(SEPERATOR  , [)
Line:292 ,(IDENTIFIER , i)
Line:292 ,(SEPERATOR  , ])
Line:292 ,(OPERATOR   , =)
Line:292 ,(IDENTIFIER , tt)
Line:292 ,(SEPERATOR  , ;)
Line:293 ,(SEPERATOR  , })
Line:295 ,(IDENTIFIER , quicksort)
Line:295 ,(SEPERATOR  , ()
Line:295 ,(IDENTIFIER , datas)
Line:295 ,(SEPERATOR  , ,)
Line:295 ,(IDENTIFIER , bb)
Line:295 ,(SEPERATOR  , ,)
Line:295 ,(IDENTIFIER , i)
Line:295 ,(OPERATOR   , -)
Line:295 ,(CONST      , 1)
Line:295 ,(SEPERATOR  , ))
Line:295 ,(SEPERATOR  , ;)
Line:296 ,(IDENTIFIER , quicksort)
Line:296 ,(SEPERATOR  , ()
Line:296 ,(IDENTIFIER , datas)
Line:296 ,(SEPERATOR  , ,)
Line:296 ,(IDENTIFIER , i)
Line:296 ,(OPERATOR   , +)
Line:296 ,(CONST      , 1)
Line:296 ,(SEPERATOR  , ,)
Line:296 ,(IDENTIFIER , ee)
Line:296 ,(SEPERATOR  , ))
Line:296 ,(SEPERATOR  , ;)
Line:297 ,(SEPERATOR  , })
Line:298 ,(SEPERATOR  , })
Line:302 ,(KEYWORD    , void)
Line:302 ,(IDENTIFIER , multimerge)
Line:302 ,(SEPERATOR  , ()
Line:302 ,(KEYWORD    , int)
Line:302 ,(OPERATOR   , *)
Line:302 ,(IDENTIFIER , data1)
Line:302 ,(SEPERATOR  , ,)
Line:302 ,(KEYWORD    , int)
Line:302 ,(OPERATOR   , *)
Line:302 ,(IDENTIFIER , ind)
Line:302 ,(SEPERATOR  , ,)
Line:302 ,(KEYWORD    , int)
Line:302 ,(OPERATOR   , *)
Line:302 ,(IDENTIFIER , data)
Line:302 ,(SEPERATOR  , ,)
Line:302 ,(KEYWORD    , int)
Line:302 ,(OPERATOR   , *)
Line:302 ,(IDENTIFIER , iter)
Line:302 ,(SEPERATOR  , ,)
Line:302 ,(KEYWORD    , int)
Line:302 ,(IDENTIFIER , SumID)
Line:302 ,(SEPERATOR  , ))
Line:303 ,(SEPERATOR  , {)
Line:304 ,(KEYWORD    , int)
Line:304 ,(IDENTIFIER , i)
Line:304 ,(SEPERATOR  , ,)
Line:304 ,(IDENTIFIER , j)
Line:304 ,(SEPERATOR  , ,)
Line:304 ,(IDENTIFIER , n)
Line:304 ,(SEPERATOR  , ;)
Line:306 ,(IDENTIFIER , j)
Line:306 ,(OPERATOR   , =)
Line:306 ,(CONST      , 0)
Line:306 ,(SEPERATOR  , ;)
Line:307 ,(KEYWORD    , for)
Line:307 ,(SEPERATOR  , ()
Line:307 ,(IDENTIFIER , i)
Line:307 ,(OPERATOR   , =)
Line:307 ,(CONST      , 0)
Line:307 ,(SEPERATOR  , ;)
Line:307 ,(IDENTIFIER , i)
Line:307 ,(OPERATOR   , <)
Line:307 ,(IDENTIFIER , SumID)
Line:307 ,(SEPERATOR  , ;)
Line:307 ,(IDENTIFIER , i)
Line:307 ,(OPERATOR   , ++)
Line:307 ,(SEPERATOR  , ))
Line:308 ,(KEYWORD    , if)
Line:308 ,(SEPERATOR  , ()
Line:308 ,(IDENTIFIER , ind)
Line:308 ,(SEPERATOR  , [)
Line:308 ,(IDENTIFIER , i)
Line:308 ,(SEPERATOR  , ])
Line:308 ,(OPERATOR   , >)
Line:308 ,(CONST      , 0)
Line:308 ,(SEPERATOR  , ))
Line:309 ,(SEPERATOR  , {)
Line:310 ,(IDENTIFIER , ind)
Line:310 ,(SEPERATOR  , [)
Line:310 ,(IDENTIFIER , j)
Line:310 ,(OPERATOR   , ++)
Line:310 ,(SEPERATOR  , ])
Line:310 ,(OPERATOR   , =)
Line:310 ,(IDENTIFIER , ind)
Line:310 ,(SEPERATOR  , [)
Line:310 ,(IDENTIFIER , i)
Line:310 ,(SEPERATOR  , ])
Line:310 ,(SEPERATOR  , ;)
Line:311 ,(KEYWORD    , if)
Line:311 ,(SEPERATOR  , ()
Line:311 ,(IDENTIFIER , j)
Line:311 ,(OPERATOR   , <)
Line:311 ,(IDENTIFIER , i)
Line:311 ,(OPERATOR   , +)
Line:311 ,(CONST      , 1)
Line:311 ,(SEPERATOR  , ))
Line:311 ,(IDENTIFIER , ind)
Line:311 ,(SEPERATOR  , [)
Line:311 ,(IDENTIFIER , i)
Line:311 ,(SEPERATOR  , ])
Line:311 ,(OPERATOR   , =)
Line:311 ,(CONST      , 0)
Line:311 ,(SEPERATOR  , ;)
Line:312 ,(SEPERATOR  , })
Line:313 ,(KEYWORD    , if)
Line:313 ,(SEPERATOR  , ()
Line:313 ,(IDENTIFIER , j)
Line:313 ,(OPERATOR   , >)
Line:313 ,(CONST      , 1)
Line:313 ,(SEPERATOR  , ))
Line:314 ,(SEPERATOR  , {)
Line:315 ,(IDENTIFIER , n)
Line:315 ,(OPERATOR   , =)
Line:315 ,(CONST      , 0)
Line:315 ,(SEPERATOR  , ;)
Line:316 ,(KEYWORD    , for)
Line:316 ,(SEPERATOR  , ()
Line:316 ,(IDENTIFIER , i)
Line:316 ,(OPERATOR   , =)
Line:316 ,(CONST      , 0)
Line:316 ,(SEPERATOR  , ;)
Line:316 ,(IDENTIFIER , i)
Line:316 ,(OPERATOR   , +)
Line:316 ,(CONST      , 1)
Line:316 ,(OPERATOR   , <)
Line:316 ,(IDENTIFIER , j)
Line:316 ,(SEPERATOR  , ;)
Line:316 ,(IDENTIFIER , i)
Line:316 ,(OPERATOR   , =)
Line:316 ,(IDENTIFIER , i)
Line:316 ,(OPERATOR   , +)
Line:316 ,(CONST      , 2)
Line:316 ,(SEPERATOR  , ))
Line:317 ,(SEPERATOR  , {)
Line:318 ,(IDENTIFIER , merge)
Line:318 ,(SEPERATOR  , ()
Line:318 ,(OPERATOR   , &)
Line:318 ,(SEPERATOR  , ()
Line:318 ,(IDENTIFIER , data1)
Line:318 ,(SEPERATOR  , [)
Line:318 ,(IDENTIFIER , n)
Line:318 ,(SEPERATOR  , ])
Line:318 ,(SEPERATOR  , ))
Line:318 ,(SEPERATOR  , ,)
Line:318 ,(IDENTIFIER , ind)
Line:318 ,(SEPERATOR  , [)
Line:318 ,(IDENTIFIER , i)
Line:318 ,(SEPERATOR  , ])
Line:318 ,(SEPERATOR  , ,)
Line:318 ,(IDENTIFIER , ind)
Line:318 ,(SEPERATOR  , [)
Line:318 ,(IDENTIFIER , i)
Line:318 ,(OPERATOR   , +)
Line:318 ,(CONST      , 1)
Line:318 ,(SEPERATOR  , ])
Line:318 ,(SEPERATOR  , ,)
Line:318 ,(OPERATOR   , &)
Line:318 ,(SEPERATOR  , ()
Line:318 ,(IDENTIFIER , data)
Line:318 ,(SEPERATOR  , [)
Line:318 ,(IDENTIFIER , n)
Line:318 ,(SEPERATOR  , ])
Line:318 ,(SEPERATOR  , ))
Line:318 ,(SEPERATOR  , ))
Line:318 ,(SEPERATOR  , ;)
Line:319 ,(IDENTIFIER , ind)
Line:319 ,(SEPERATOR  , [)
Line:319 ,(IDENTIFIER , i)
Line:319 ,(SEPERATOR  , ])
Line:319 ,(OPERATOR   , +=)
Line:319 ,(IDENTIFIER , ind)
Line:319 ,(SEPERATOR  , [)
Line:319 ,(IDENTIFIER , i)
Line:319 ,(OPERATOR   , +)
Line:319 ,(CONST      , 1)
Line:319 ,(SEPERATOR  , ])
Line:319 ,(SEPERATOR  , ;)
Line:320 ,(IDENTIFIER , ind)
Line:320 ,(SEPERATOR  , [)
Line:320 ,(IDENTIFIER , i)
Line:320 ,(OPERATOR   , +)
Line:320 ,(CONST      , 1)
Line:320 ,(SEPERATOR  , ])
Line:320 ,(OPERATOR   , =)
Line:320 ,(CONST      , 0)
Line:320 ,(SEPERATOR  , ;)
Line:321 ,(IDENTIFIER , n)
Line:321 ,(OPERATOR   , +=)
Line:321 ,(IDENTIFIER , ind)
Line:321 ,(SEPERATOR  , [)
Line:321 ,(IDENTIFIER , i)
Line:321 ,(SEPERATOR  , ])
Line:321 ,(SEPERATOR  , ;)
Line:322 ,(SEPERATOR  , })
Line:323 ,(KEYWORD    , if)
Line:323 ,(SEPERATOR  , ()
Line:323 ,(IDENTIFIER , j)
Line:323 ,(OPERATOR   , %)
Line:323 ,(CONST      , 2)
Line:323 ,(OPERATOR   , ==)
Line:323 ,(CONST      , 1)
Line:323 ,(SEPERATOR  , ))
Line:324 ,(KEYWORD    , for)
Line:324 ,(SEPERATOR  , ()
Line:324 ,(IDENTIFIER , i)
Line:324 ,(OPERATOR   , =)
Line:324 ,(CONST      , 0)
Line:324 ,(SEPERATOR  , ;)
Line:324 ,(IDENTIFIER , i)
Line:324 ,(OPERATOR   , <)
Line:324 ,(IDENTIFIER , ind)
Line:324 ,(SEPERATOR  , [)
Line:324 ,(IDENTIFIER , j)
Line:324 ,(OPERATOR   , -)
Line:324 ,(CONST      , 1)
Line:324 ,(SEPERATOR  , ])
Line:324 ,(SEPERATOR  , ;)
Line:324 ,(IDENTIFIER , i)
Line:324 ,(OPERATOR   , ++)
Line:324 ,(SEPERATOR  , ))
Line:324 ,(IDENTIFIER , data)
Line:324 ,(SEPERATOR  , [)
Line:324 ,(IDENTIFIER , n)
Line:324 ,(OPERATOR   , ++)
Line:324 ,(SEPERATOR  , ])
Line:324 ,(OPERATOR   , =)
Line:324 ,(IDENTIFIER , data1)
Line:324 ,(SEPERATOR  , [)
Line:324 ,(IDENTIFIER , n)
Line:324 ,(SEPERATOR  , ])
Line:324 ,(SEPERATOR  , ;)
Line:325 ,(SEPERATOR  , ()
Line:325 ,(OPERATOR   , *)
Line:325 ,(IDENTIFIER , iter)
Line:325 ,(SEPERATOR  , ))
Line:325 ,(OPERATOR   , ++)
Line:325 ,(SEPERATOR  , ;)
Line:326 ,(IDENTIFIER , multimerge)
Line:326 ,(SEPERATOR  , ()
Line:326 ,(IDENTIFIER , data)
Line:326 ,(SEPERATOR  , ,)
Line:326 ,(IDENTIFIER , ind)
Line:326 ,(SEPERATOR  , ,)
Line:326 ,(IDENTIFIER , data1)
Line:326 ,(SEPERATOR  , ,)
Line:326 ,(IDENTIFIER , iter)
Line:326 ,(SEPERATOR  , ,)
Line:326 ,(IDENTIFIER , SumID)
Line:326 ,(SEPERATOR  , ))
Line:326 ,(SEPERATOR  , ;)
Line:327 ,(SEPERATOR  , })
Line:328 ,(SEPERATOR  , })
Line:331 ,(KEYWORD    , void)
Line:331 ,(IDENTIFIER , merge)
Line:331 ,(SEPERATOR  , ()
Line:331 ,(KEYWORD    , int)
Line:331 ,(OPERATOR   , *)
Line:331 ,(IDENTIFIER , data1)
Line:331 ,(SEPERATOR  , ,)
Line:331 ,(KEYWORD    , int)
Line:331 ,(IDENTIFIER , s1)
Line:331 ,(SEPERATOR  , ,)
Line:331 ,(KEYWORD    , int)
Line:331 ,(IDENTIFIER , s2)
Line:331 ,(SEPERATOR  , ,)
Line:331 ,(KEYWORD    , int)
Line:331 ,(OPERATOR   , *)
Line:331 ,(IDENTIFIER , data2)
Line:331 ,(SEPERATOR  , ))
Line:332 ,(SEPERATOR  , {)
Line:333 ,(KEYWORD    , int)
Line:333 ,(IDENTIFIER , i)
Line:333 ,(SEPERATOR  , ,)
Line:333 ,(IDENTIFIER , l)
Line:333 ,(SEPERATOR  , ,)
Line:333 ,(IDENTIFIER , m)
Line:333 ,(SEPERATOR  , ;)
Line:335 ,(IDENTIFIER , l)
Line:335 ,(OPERATOR   , =)
Line:335 ,(CONST      , 0)
Line:335 ,(SEPERATOR  , ;)
Line:336 ,(IDENTIFIER , m)
Line:336 ,(OPERATOR   , =)
Line:336 ,(IDENTIFIER , s1)
Line:336 ,(SEPERATOR  , ;)
Line:337 ,(KEYWORD    , for)
Line:337 ,(SEPERATOR  , ()
Line:337 ,(IDENTIFIER , i)
Line:337 ,(OPERATOR   , =)
Line:337 ,(CONST      , 0)
Line:337 ,(SEPERATOR  , ;)
Line:337 ,(IDENTIFIER , i)
Line:337 ,(OPERATOR   , <)
Line:337 ,(IDENTIFIER , s1)
Line:337 ,(OPERATOR   , +)
Line:337 ,(IDENTIFIER , s2)
Line:337 ,(SEPERATOR  , ;)
Line:337 ,(IDENTIFIER , i)
Line:337 ,(OPERATOR   , ++)
Line:337 ,(SEPERATOR  , ))
Line:338 ,(SEPERATOR  , {)
Line:339 ,(KEYWORD    , if)
Line:339 ,(SEPERATOR  , ()
Line:339 ,(IDENTIFIER , l)
Line:339 ,(OPERATOR   , ==)
Line:339 ,(IDENTIFIER , s1)
Line:339 ,(SEPERATOR  , ))
Line:340 ,(IDENTIFIER , data2)
Line:340 ,(SEPERATOR  , [)
Line:340 ,(IDENTIFIER , i)
Line:340 ,(SEPERATOR  , ])
Line:340 ,(OPERATOR   , =)
Line:340 ,(IDENTIFIER , data1)
Line:340 ,(SEPERATOR  , [)
Line:340 ,(IDENTIFIER , m)
Line:340 ,(OPERATOR   , ++)
Line:340 ,(SEPERATOR  , ])
Line:340 ,(SEPERATOR  , ;)
Line:341 ,(KEYWORD    , else)
Line:342 ,(KEYWORD    , if)
Line:342 ,(SEPERATOR  , ()
Line:342 ,(IDENTIFIER , m)
Line:342 ,(OPERATOR   , ==)
Line:342 ,(IDENTIFIER , s2)
Line:342 ,(OPERATOR   , +)
Line:342 ,(IDENTIFIER , s1)
Line:342 ,(SEPERATOR  , ))
Line:343 ,(IDENTIFIER , data2)
Line:343 ,(SEPERATOR  , [)
Line:343 ,(IDENTIFIER , i)
Line:343 ,(SEPERATOR  , ])
Line:343 ,(OPERATOR   , =)
Line:343 ,(IDENTIFIER , data1)
Line:343 ,(SEPERATOR  , [)
Line:343 ,(IDENTIFIER , l)
Line:343 ,(OPERATOR   , ++)
Line:343 ,(SEPERATOR  , ])
Line:343 ,(SEPERATOR  , ;)
Line:344 ,(KEYWORD    , else)
Line:345 ,(KEYWORD    , if)
Line:345 ,(SEPERATOR  , ()
Line:345 ,(IDENTIFIER , data1)
Line:345 ,(SEPERATOR  , [)
Line:345 ,(IDENTIFIER , l)
Line:345 ,(SEPERATOR  , ])
Line:345 ,(OPERATOR   , >)
Line:345 ,(IDENTIFIER , data1)
Line:345 ,(SEPERATOR  , [)
Line:345 ,(IDENTIFIER , m)
Line:345 ,(SEPERATOR  , ])
Line:345 ,(SEPERATOR  , ))
Line:346 ,(IDENTIFIER , data2)
Line:346 ,(SEPERATOR  , [)
Line:346 ,(IDENTIFIER , i)
Line:346 ,(SEPERATOR  , ])
Line:346 ,(OPERATOR   , =)
Line:346 ,(IDENTIFIER , data1)
Line:346 ,(SEPERATOR  , [)
Line:346 ,(IDENTIFIER , m)
Line:346 ,(OPERATOR   , ++)
Line:346 ,(SEPERATOR  , ])
Line:346 ,(SEPERATOR  , ;)
Line:347 ,(KEYWORD    , else)
Line:348 ,(IDENTIFIER , data2)
Line:348 ,(SEPERATOR  , [)
Line:348 ,(IDENTIFIER , i)
Line:348 ,(SEPERATOR  , ])
Line:348 ,(OPERATOR   , =)
Line:348 ,(IDENTIFIER , data1)
Line:348 ,(SEPERATOR  , [)
Line:348 ,(IDENTIFIER , l)
Line:348 ,(OPERATOR   , ++)
Line:348 ,(SEPERATOR  , ])
Line:348 ,(SEPERATOR  , ;)
Line:349 ,(SEPERATOR  , })
Line:350 ,(SEPERATOR  , })
每行开始空格数:
Line:1 , has 0 Space
Line:2 , has 0 Space
Line:3 , has 0 Space
Line:4 , has 0 Space
Line:5 , has 0 Space
Line:6 , has 0 Space
Line:7 , has 0 Space
Line:8 , has 0 Space
Line:9 , has 0 Space
Line:10 , has 0 Space
Line:11 , has 0 Space
Line:12 , has 0 Space
Line:13 , has 0 Space
Line:14 , has 0 Space
Line:15 , has 0 Space
Line:16 , has 0 Space
Line:17 , has 0 Space
Line:18 , has 0 Space
Line:19 , has 0 Space
Line:20 , has 0 Space
Line:21 , has 0 Space
Line:22 , has 0 Space
Line:23 , has 4 Space
Line:24 , has 4 Space
Line:25 , has 4 Space
Line:26 , has 0 Space
Line:27 , has 4 Space
Line:28 , has 4 Space
Line:29 , has 0 Space
Line:30 , has 4 Space
Line:31 , has 4 Space
Line:32 , has 0 Space
Line:33 , has 4 Space
Line:34 , has 8 Space
Line:35 , has 4 Space
Line:36 , has 0 Space
Line:37 , has 4 Space
Line:38 , has 8 Space
Line:39 , has 0 Space
Line:40 , has 4 Space
Line:41 , has 4 Space
Line:42 , has 0 Space
Line:43 , has 0 Space
Line:44 , has 0 Space
Line:45 , has 0 Space
Line:46 , has 0 Space
Line:47 , has 4 Space
Line:48 , has 4 Space
Line:49 , has 4 Space
Line:50 , has 4 Space
Line:51 , has 4 Space
Line:52 , has 4 Space
Line:53 , has 4 Space
Line:54 , has 0 Space
Line:55 , has 4 Space
Line:56 , has 4 Space
Line:57 , has 0 Space
Line:58 , has 4 Space
Line:59 , has 0 Space
Line:60 , has 4 Space
Line:61 , has 4 Space
Line:62 , has 4 Space
Line:63 , has 4 Space
Line:64 , has 0 Space
Line:65 , has 4 Space
Line:66 , has 4 Space
Line:67 , has 8 Space
Line:68 , has 8 Space
Line:69 , has 8 Space
Line:70 , has 8 Space
Line:71 , has 4 Space
Line:72 , has 0 Space
Line:73 , has 4 Space
Line:74 , has 0 Space
Line:75 , has 4 Space
Line:76 , has 4 Space
Line:77 , has 0 Space
Line:78 , has 4 Space
Line:79 , has 4 Space
Line:80 , has 4 Space
Line:81 , has 4 Space
Line:82 , has 8 Space
Line:83 , has 8 Space
Line:84 , has 4 Space
Line:85 , has 4 Space
Line:86 , has 0 Space
Line:87 , has 4 Space
Line:88 , has 4 Space
Line:89 , has 4 Space
Line:90 , has 4 Space
Line:91 , has 0 Space
Line:92 , has 4 Space
Line:93 , has 4 Space
Line:94 , has 4 Space
Line:95 , has 8 Space
Line:96 , has 0 Space
Line:97 , has 8 Space
Line:98 , has 8 Space
Line:99 , has 12 Space
Line:100 , has 0 Space
Line:101 , has 8 Space
Line:102 , has 0 Space
Line:103 , has 8 Space
Line:104 , has 8 Space
Line:105 , has 12 Space
Line:106 , has 12 Space
Line:107 , has 12 Space
Line:108 , has 16 Space
Line:109 , has 12 Space
Line:110 , has 0 Space
Line:111 , has 12 Space
Line:112 , has 12 Space
Line:113 , has 12 Space
Line:114 , has 12 Space
Line:115 , has 0 Space
Line:116 , has 12 Space
Line:117 , has 16 Space
Line:118 , has 12 Space
Line:119 , has 12 Space
Line:120 , has 12 Space
Line:121 , has 8 Space
Line:122 , has 8 Space
Line:123 , has 8 Space
Line:124 , has 12 Space
Line:125 , has 12 Space
Line:126 , has 12 Space
Line:127 , has 12 Space
Line:128 , has 12 Space
Line:129 , has 8 Space
Line:130 , has 0 Space
Line:131 , has 8 Space
Line:132 , has 8 Space
Line:133 , has 8 Space
Line:134 , has 8 Space
Line:135 , has 8 Space
Line:136 , has 8 Space
Line:137 , has 12 Space
Line:138 , has 12 Space
Line:139 , has 12 Space
Line:140 , has 8 Space
Line:141 , has 8 Space
Line:142 , has 8 Space
Line:143 , has 8 Space
Line:144 , has 8 Space
Line:145 , has 12 Space
Line:146 , has 12 Space
Line:147 , has 12 Space
Line:148 , has 12 Space
Line:149 , has 12 Space
Line:150 , has 16 Space
Line:151 , has 16 Space
Line:152 , has 20 Space
Line:153 , has 20 Space
Line:154 , has 16 Space
Line:155 , has 16 Space
Line:156 , has 16 Space
Line:157 , has 20 Space
Line:158 , has 20 Space
Line:159 , has 16 Space
Line:160 , has 12 Space
Line:161 , has 12 Space
Line:162 , has 12 Space
Line:163 , has 12 Space
Line:164 , has 16 Space
Line:165 , has 16 Space
Line:166 , has 16 Space
Line:167 , has 20 Space
Line:168 , has 20 Space
Line:169 , has 16 Space
Line:170 , has 16 Space
Line:171 , has 12 Space
Line:172 , has 12 Space
Line:173 , has 12 Space
Line:174 , has 16 Space
Line:175 , has 16 Space
Line:176 , has 12 Space
Line:177 , has 12 Space
Line:178 , has 12 Space
Line:179 , has 12 Space
Line:180 , has 8 Space
Line:181 , has 8 Space
Line:182 , has 0 Space
Line:183 , has 8 Space
Line:184 , has 0 Space
Line:185 , has 8 Space
Line:186 , has 0 Space
Line:187 , has 8 Space
Line:188 , has 8 Space
Line:189 , has 8 Space
Line:190 , has 12 Space
Line:191 , has 12 Space
Line:192 , has 16 Space
Line:193 , has 16 Space
Line:194 , has 20 Space
Line:195 , has 16 Space
Line:196 , has 20 Space
Line:197 , has 20 Space
Line:198 , has 16 Space
Line:199 , has 0 Space
Line:200 , has 12 Space
Line:201 , has 12 Space
Line:202 , has 12 Space
Line:203 , has 16 Space
Line:204 , has 12 Space
Line:205 , has 8 Space
Line:206 , has 0 Space
Line:207 , has 8 Space
Line:208 , has 0 Space
Line:209 , has 8 Space
Line:210 , has 8 Space
Line:211 , has 8 Space
Line:212 , has 0 Space
Line:213 , has 8 Space
Line:214 , has 8 Space
Line:215 , has 12 Space
Line:216 , has 0 Space
Line:217 , has 12 Space
Line:218 , has 12 Space
Line:219 , has 16 Space
Line:220 , has 20 Space
Line:221 , has 12 Space
Line:222 , has 0 Space
Line:223 , has 12 Space
Line:224 , has 0 Space
Line:225 , has 12 Space
Line:226 , has 12 Space
Line:227 , has 16 Space
Line:228 , has 20 Space
Line:229 , has 16 Space
Line:230 , has 20 Space
Line:231 , has 16 Space
Line:232 , has 0 Space
Line:233 , has 12 Space
Line:234 , has 12 Space
Line:235 , has 12 Space
Line:236 , has 16 Space
Line:237 , has 16 Space
Line:238 , has 16 Space
Line:239 , has 12 Space
Line:240 , has 0 Space
Line:241 , has 12 Space
Line:242 , has 8 Space
Line:243 , has 8 Space
Line:244 , has 8 Space
Line:245 , has 0 Space
Line:246 , has 8 Space
Line:247 , has 8 Space
Line:248 , has 8 Space
Line:249 , has 8 Space
Line:250 , has 4 Space
Line:251 , has 0 Space
Line:252 , has 4 Space
Line:253 , has 4 Space
Line:254 , has 8 Space
Line:255 , has 4 Space
Line:256 , has 0 Space
Line:257 , has 0 Space
Line:258 , has 0 Space
Line:259 , has 0 Space
Line:260 , has 0 Space
Line:261 , has 0 Space
Line:262 , has 4 Space
Line:263 , has 4 Space
Line:264 , has 0 Space
Line:265 , has 0 Space
Line:266 , has 0 Space
Line:267 , has 0 Space
Line:268 , has 0 Space
Line:269 , has 0 Space
Line:270 , has 4 Space
Line:271 , has 4 Space
Line:272 , has 4 Space
Line:273 , has 4 Space
Line:274 , has 0 Space
Line:275 , has 4 Space
Line:276 , has 4 Space
Line:277 , has 8 Space
Line:278 , has 8 Space
Line:279 , has 12 Space
Line:280 , has 12 Space
Line:281 , has 12 Space
Line:282 , has 16 Space
Line:283 , has 16 Space
Line:284 , has 16 Space
Line:285 , has 16 Space
Line:286 , has 16 Space
Line:287 , has 20 Space
Line:288 , has 20 Space
Line:289 , has 20 Space
Line:290 , has 16 Space
Line:291 , has 16 Space
Line:292 , has 12 Space
Line:293 , has 8 Space
Line:294 , has 0 Space
Line:295 , has 8 Space
Line:296 , has 8 Space
Line:297 , has 4 Space
Line:298 , has 0 Space
Line:299 , has 0 Space
Line:300 , has 0 Space
Line:301 , has 0 Space
Line:302 , has 0 Space
Line:303 , has 0 Space
Line:304 , has 4 Space
Line:305 , has 0 Space
Line:306 , has 4 Space
Line:307 , has 4 Space
Line:308 , has 8 Space
Line:309 , has 4 Space
Line:310 , has 8 Space
Line:311 , has 8 Space
Line:312 , has 4 Space
Line:313 , has 4 Space
Line:314 , has 4 Space
Line:315 , has 8 Space
Line:316 , has 8 Space
Line:317 , has 8 Space
Line:318 , has 12 Space
Line:319 , has 12 Space
Line:320 , has 12 Space
Line:321 , has 12 Space
Line:322 , has 8 Space
Line:323 , has 8 Space
Line:324 , has 12 Space
Line:325 , has 8 Space
Line:326 , has 8 Space
Line:327 , has 4 Space
Line:328 , has 0 Space
Line:329 , has 0 Space
Line:330 , has 0 Space
Line:331 , has 0 Space
Line:332 , has 0 Space
Line:333 , has 4 Space
Line:334 , has 0 Space
Line:335 , has 4 Space
Line:336 , has 4 Space
Line:337 , has 4 Space
Line:338 , has 4 Space
Line:339 , has 8 Space
Line:340 , has 12 Space
Line:341 , has 8 Space
Line:342 , has 8 Space
Line:343 , has 12 Space
Line:344 , has 8 Space
Line:345 , has 8 Space
Line:346 , has 12 Space
Line:347 , has 8 Space
Line:348 , has 12 Space
Line:349 , has 4 Space
Line:350 , has 0 Space
Line:351 , has 0 Space
进行语法分析 ！！
以下打印语法解析树：
[Root]
---[VarDeclare]: {Name: Spt ,Line:13 }
                 {Type:int,Modifier: None }

---[VarDeclare]: {Name: DataSize ,Line:14 }
                 {Type:long,Modifier: None }

---[VarDeclare]: {Name: arr ,Line:15 }
                 {Type:int*,Modifier: None }

---[VarDeclare]: {Name: arr1 ,Line:16 }
                 {Type:int*,Modifier: None }

---[VarDeclare]: {Name: mylength ,Line:17 }
                 {Type:int,Modifier: None }

---[VarDeclare]: {Name: index ,Line:18 }
                 {Type:int*,Modifier: None }

---[VarDeclare]: {Name: temp1 ,Line:19 }
                 {Type:int*,Modifier: None }

---[FuncDefine]: {Name: main ,Line:21 }
                 {ReturnType:int ,Modifier: None ,ArgTable:{int:argc}{char**:argv}}
---------[VarDeclare]: {Name: BaseNum ,Line:23 }
                       {Type:long,Modifier: None }

-------------[IdNode]: { Name: BaseNum ,Line: 23 }
                       {LexType:IDENTIFIER }
---------[Operator]: {OpType: = ,Line:23 }
                     {OpDir: M }
-------------[IdNode]: { Name: 1L ,Line: 23 }
                       {LexType:CONST }

---------[VarDeclare]: {Name: PlusNum ,Line:24 }
                       {Type:int,Modifier: None }

---------[VarDeclare]: {Name: MyID ,Line:25 }
                       {Type:int,Modifier: None }

---------[Function]: {Name: MPI_Init ,Line:27 }
                     ArgList: 2 Members
---------------------[Operator]: {OpType: & ,Line:27 }
                                 {OpDir: R }
-------------------------[IdNode]: { Name: argc ,Line: 27 }
                                   {LexType:IDENTIFIER }
---------------------[Operator]: {OpType: & ,Line:27 }
                                 {OpDir: R }
-------------------------[IdNode]: { Name: argv ,Line: 27 }
                                   {LexType:IDENTIFIER }

---------[Function]: {Name: MPI_Comm_rank ,Line:28 }
                     ArgList: 2 Members
---------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 28 }
                               {LexType:IDENTIFIER }
---------------------[Operator]: {OpType: & ,Line:28 }
                                 {OpDir: R }
-------------------------[IdNode]: { Name: MyID ,Line: 28 }
                                   {LexType:IDENTIFIER }

-------------[IdNode]: { Name: PlusNum ,Line: 30 }
                       {LexType:IDENTIFIER }
---------[Operator]: {OpType: = ,Line:30 }
                     {OpDir: M }
-------------[IdNode]: { Name: 60 ,Line: 30 }
                       {LexType:CONST }

-------------[IdNode]: { Name: DataSize ,Line: 31 }
                       {LexType:IDENTIFIER }
---------[Operator]: {OpType: = ,Line:31 }
                     {OpDir: M }
-----------------[IdNode]: { Name: BaseNum ,Line: 31 }
                           {LexType:IDENTIFIER }
-------------[Operator]: {OpType: * ,Line:31 }
                         {OpDir: M }
-----------------[IdNode]: { Name: PlusNum ,Line: 31 }
                           {LexType:IDENTIFIER }

---------[Branch]: {Type: if ,Line:33 }
                   Judgement:
-----------------------[IdNode]: { Name: MyID ,Line: 33 }
                                 {LexType:IDENTIFIER }
-------------------[Operator]: {OpType: == ,Line:33 }
                               {OpDir: M }
-----------------------[IdNode]: { Name: 0 ,Line: 33 }
                                 {LexType:CONST }
---------------[Function]: {Name: printf ,Line:34 }
                           ArgList: 2 Members
---------------------------[IdNode]: { Name: "The DataSize is : %lu\n" ,Line: 34 }
                                     {LexType:CONST }
---------------------------[IdNode]: { Name: PlusNum ,Line: 34 }
                                     {LexType:IDENTIFIER }


---------[Function]: {Name: Psrs_Main ,Line:35 }
                     ArgList: 0 Members

---------[Branch]: {Type: if ,Line:37 }
                   Judgement:
-----------------------[IdNode]: { Name: MyID ,Line: 37 }
                                 {LexType:IDENTIFIER }
-------------------[Operator]: {OpType: == ,Line:37 }
                               {OpDir: M }
-----------------------[IdNode]: { Name: 0 ,Line: 37 }
                                 {LexType:CONST }
---------------[Function]: {Name: printf ,Line:38 }
                           ArgList: 1 Members
---------------------------[IdNode]: { Name: "\n" ,Line: 38 }
                                     {LexType:CONST }


---------[Function]: {Name: MPI_Finalize ,Line:40 }
                     ArgList: 0 Members

---------[Return]: {Line:41 }
-------------[IdNode]: { Name: 0 ,Line: 41 }
                       {LexType:CONST }


---[FuncDefine]: {Name: Psrs_Main ,Line:45 }
                 {ReturnType:void ,Modifier: None ,ArgTable:}
---------[VarDeclare]: {Name: i ,Line:47 }
                       {Type:int,Modifier: None }

---------[IdNode]: { Name: i ,Line: 47 }
                   {LexType:IDENTIFIER }

---------[VarDeclare]: {Name: j ,Line:47 }
                       {Type:int,Modifier: None }

---------[IdNode]: { Name: j ,Line: 47 }
                   {LexType:IDENTIFIER }

---------[VarDeclare]: {Name: MyID ,Line:48 }
                       {Type:int,Modifier: None }

---------[IdNode]: { Name: MyID ,Line: 48 }
                   {LexType:IDENTIFIER }

---------[VarDeclare]: {Name: SumID ,Line:48 }
                       {Type:int,Modifier: None }

---------[IdNode]: { Name: SumID ,Line: 48 }
                   {LexType:IDENTIFIER }

---------[VarDeclare]: {Name: n ,Line:49 }
                       {Type:int,Modifier: None }

---------[IdNode]: { Name: n ,Line: 49 }
                   {LexType:IDENTIFIER }

---------[VarDeclare]: {Name: c1 ,Line:49 }
                       {Type:int,Modifier: None }

---------[IdNode]: { Name: c1 ,Line: 49 }
                   {LexType:IDENTIFIER }

---------[VarDeclare]: {Name: c2 ,Line:49 }
                       {Type:int,Modifier: None }

---------[IdNode]: { Name: c2 ,Line: 49 }
                   {LexType:IDENTIFIER }

---------[VarDeclare]: {Name: c3 ,Line:49 }
                       {Type:int,Modifier: None }

---------[IdNode]: { Name: c3 ,Line: 49 }
                   {LexType:IDENTIFIER }

---------[VarDeclare]: {Name: c4 ,Line:49 }
                       {Type:int,Modifier: None }

---------[IdNode]: { Name: c4 ,Line: 49 }
                   {LexType:IDENTIFIER }

---------[VarDeclare]: {Name: k ,Line:49 }
                       {Type:int,Modifier: None }

---------[IdNode]: { Name: k ,Line: 49 }
                   {LexType:IDENTIFIER }

---------[VarDeclare]: {Name: l ,Line:49 }
                       {Type:int,Modifier: None }

---------[IdNode]: { Name: l ,Line: 49 }
                   {LexType:IDENTIFIER }

-------------[IdNode]: { Name: FILE ,Line: 50 }
                       {LexType:IDENTIFIER }
---------[Operator]: {OpType: * ,Line:50 }
                     {OpDir: M }
-------------[IdNode]: { Name: fp ,Line: 50 }
                       {LexType:IDENTIFIER }

---------[VarDeclare]: {Name: ready ,Line:51 }
                       {Type:int,Modifier: None }

---------[VarDeclare]: {Name: status ,Line:52 }
                       {Type:MPI_Status,Modifier: None }

-------------[IdNode]: { Name: status ,Line: 52 }
                       {LexType:IDENTIFIER }
---------[Operator]: {OpType: [ ,Line:52 }
                     {OpDir: M }
-----------------[IdNode]: { Name: 32 ,Line: 52 }
                           {LexType:CONST }
-------------[Operator]: {OpType: * ,Line:52 }
                         {OpDir: M }
---------------------[IdNode]: { Name: 32 ,Line: 52 }
                               {LexType:CONST }
-----------------[Operator]: {OpType: * ,Line:52 }
                             {OpDir: M }
---------------------[IdNode]: { Name: 2 ,Line: 52 }
                               {LexType:CONST }

---------[VarDeclare]: {Name: request ,Line:53 }
                       {Type:MPI_Request,Modifier: None }

-------------[IdNode]: { Name: request ,Line: 53 }
                       {LexType:IDENTIFIER }
---------[Operator]: {OpType: [ ,Line:53 }
                     {OpDir: M }
-----------------[IdNode]: { Name: 32 ,Line: 53 }
                           {LexType:CONST }
-------------[Operator]: {OpType: * ,Line:53 }
                         {OpDir: M }
---------------------[IdNode]: { Name: 32 ,Line: 53 }
                               {LexType:CONST }
-----------------[Operator]: {OpType: * ,Line:53 }
                             {OpDir: M }
---------------------[IdNode]: { Name: 2 ,Line: 53 }
                               {LexType:CONST }

---------[Function]: {Name: MPI_Comm_rank ,Line:55 }
                     ArgList: 2 Members
---------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 55 }
                               {LexType:IDENTIFIER }
---------------------[Operator]: {OpType: & ,Line:55 }
                                 {OpDir: R }
-------------------------[IdNode]: { Name: MyID ,Line: 55 }
                                   {LexType:IDENTIFIER }

---------[Function]: {Name: MPI_Comm_size ,Line:56 }
                     ArgList: 2 Members
---------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 56 }
                               {LexType:IDENTIFIER }
---------------------[Operator]: {OpType: & ,Line:56 }
                                 {OpDir: R }
-------------------------[IdNode]: { Name: SumID ,Line: 56 }
                                   {LexType:IDENTIFIER }

-------------[IdNode]: { Name: Spt ,Line: 58 }
                       {LexType:IDENTIFIER }
---------[Operator]: {OpType: = ,Line:58 }
                     {OpDir: M }
-----------------[IdNode]: { Name: SumID ,Line: 58 }
                           {LexType:IDENTIFIER }
-------------[Operator]: {OpType: - ,Line:58 }
                         {OpDir: M }
-----------------[IdNode]: { Name: 1 ,Line: 58 }
                           {LexType:CONST }

-------------[IdNode]: { Name: arr ,Line: 61 }
                       {LexType:IDENTIFIER }
---------[Operator]: {OpType: = ,Line:61 }
                     {OpDir: M }
-------------[Operator]: {OpType: Cast ,Line:61 }
                         {OpDir: R ,CaseType: int* }
-----------------[Function]: {Name: malloc ,Line:61 }
                             ArgList: 1 Members
---------------------------------[IdNode]: { Name: 2 ,Line: 61 }
                                           {LexType:CONST }
-----------------------------[Operator]: {OpType: * ,Line:61 }
                                         {OpDir: M }
-------------------------------------[IdNode]: { Name: DataSize ,Line: 61 }
                                               {LexType:IDENTIFIER }
---------------------------------[Operator]: {OpType: * ,Line:61 }
                                             {OpDir: M }
-------------------------------------[Function]: {Name: sizeof ,Line:61 }
                                                 ArgList: 1 Members
-------------------------------------------------[IdNode]: { Name: 4 ,Line: 61 }
                                                           {LexType:CONST }

---------[Branch]: {Type: if ,Line:62 }
                   Judgement:
-----------------------[IdNode]: { Name: arr ,Line: 62 }
                                 {LexType:IDENTIFIER }
-------------------[Operator]: {OpType: == ,Line:62 }
                               {OpDir: M }
-----------------------[IdNode]: { Name: 0 ,Line: 62 }
                                 {LexType:CONST }

---------[Function]: {Name: merror ,Line:62 }
                     ArgList: 1 Members
---------------------[IdNode]: { Name: "malloc memory for arr error!" ,Line: 62 }
                               {LexType:CONST }

---------[Operator]: {OpType: & ,Line:63 }
                     {OpDir: R }
-----------------[IdNode]: { Name: arr ,Line: 63 }
                           {LexType:IDENTIFIER }
-------------[Operator]: {OpType: [ ,Line:63 }
                         {OpDir: M }
-----------------[IdNode]: { Name: DataSize ,Line: 63 }
                           {LexType:IDENTIFIER }

---------[Branch]: {Type: if ,Line:65 }
                   Judgement:
-----------------------[IdNode]: { Name: SumID ,Line: 65 }
                                 {LexType:IDENTIFIER }
-------------------[Operator]: {OpType: > ,Line:65 }
                               {OpDir: M }
-----------------------[IdNode]: { Name: 1 ,Line: 65 }
                                 {LexType:CONST }
-------------------[IdNode]: { Name: temp1 ,Line: 67 }
                             {LexType:IDENTIFIER }
---------------[Operator]: {OpType: = ,Line:67 }
                           {OpDir: M }
-------------------[Operator]: {OpType: Cast ,Line:67 }
                               {OpDir: R ,CaseType: int* }
-----------------------[Function]: {Name: malloc ,Line:67 }
                                   ArgList: 1 Members
---------------------------------------[Function]: {Name: sizeof ,Line:67 }
                                                   ArgList: 1 Members
---------------------------------------------------[IdNode]: { Name: 4 ,Line: 67 }
                                                             {LexType:CONST }
-----------------------------------[Operator]: {OpType: * ,Line:67 }
                                               {OpDir: M }
-------------------------------------------[IdNode]: { Name: SumID ,Line: 67 }
                                                     {LexType:IDENTIFIER }
---------------------------------------[Operator]: {OpType: * ,Line:67 }
                                                   {OpDir: M }
-------------------------------------------[IdNode]: { Name: Spt ,Line: 67 }
                                                     {LexType:IDENTIFIER }

---------------[Branch]: {Type: if ,Line:68 }
                         Judgement:
-----------------------------[IdNode]: { Name: temp1 ,Line: 68 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: == ,Line:68 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: 0 ,Line: 68 }
                                       {LexType:CONST }

---------------[Function]: {Name: merror ,Line:68 }
                           ArgList: 1 Members
---------------------------[IdNode]: { Name: "malloc memory for temp1 error!" ,Line: 68 }
                                     {LexType:CONST }

-------------------[IdNode]: { Name: index ,Line: 69 }
                             {LexType:IDENTIFIER }
---------------[Operator]: {OpType: = ,Line:69 }
                           {OpDir: M }
-------------------[Operator]: {OpType: Cast ,Line:69 }
                               {OpDir: R ,CaseType: int* }
-----------------------[Function]: {Name: malloc ,Line:69 }
                                   ArgList: 1 Members
---------------------------------------[Function]: {Name: sizeof ,Line:69 }
                                                   ArgList: 1 Members
---------------------------------------------------[IdNode]: { Name: 4 ,Line: 69 }
                                                             {LexType:CONST }
-----------------------------------[Operator]: {OpType: * ,Line:69 }
                                               {OpDir: M }
-------------------------------------------[IdNode]: { Name: 2 ,Line: 69 }
                                                     {LexType:CONST }
---------------------------------------[Operator]: {OpType: * ,Line:69 }
                                                   {OpDir: M }
-------------------------------------------[IdNode]: { Name: SumID ,Line: 69 }
                                                     {LexType:IDENTIFIER }

---------------[Branch]: {Type: if ,Line:70 }
                         Judgement:
-----------------------------[IdNode]: { Name: index ,Line: 70 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: == ,Line:70 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: 0 ,Line: 70 }
                                       {LexType:CONST }

---------------[Function]: {Name: merror ,Line:70 }
                           ArgList: 1 Members
---------------------------[IdNode]: { Name: "malloc memory for index error!" ,Line: 70 }
                                     {LexType:CONST }


---------[Function]: {Name: MPI_Barrier ,Line:73 }
                     ArgList: 1 Members
---------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 73 }
                               {LexType:IDENTIFIER }

-------------[IdNode]: { Name: mylength ,Line: 75 }
                       {LexType:IDENTIFIER }
---------[Operator]: {OpType: = ,Line:75 }
                     {OpDir: M }
-----------------[IdNode]: { Name: DataSize ,Line: 75 }
                           {LexType:IDENTIFIER }
-------------[Operator]: {OpType: / ,Line:75 }
                         {OpDir: M }
-----------------[IdNode]: { Name: SumID ,Line: 75 }
                           {LexType:IDENTIFIER }

---------[Function]: {Name: srand ,Line:76 }
                     ArgList: 1 Members
---------------------[IdNode]: { Name: MyID ,Line: 76 }
                               {LexType:IDENTIFIER }

---------[Function]: {Name: printf ,Line:78 }
                     ArgList: 2 Members
---------------------[IdNode]: { Name: "This is node %d \n" ,Line: 78 }
                               {LexType:CONST }
---------------------[IdNode]: { Name: MyID ,Line: 78 }
                               {LexType:IDENTIFIER }

---------[Function]: {Name: printf ,Line:79 }
                     ArgList: 2 Members
---------------------[IdNode]: { Name: "On node %d the input data is:\n" ,Line: 79 }
                               {LexType:CONST }
---------------------[IdNode]: { Name: MyID ,Line: 79 }
                               {LexType:IDENTIFIER }

---------[Branch]: {Type: for ,Line:80 }
                   Init:
-----------------------[IdNode]: { Name: i ,Line: 80 }
                                 {LexType:IDENTIFIER }
-------------------[Operator]: {OpType: = ,Line:80 }
                               {OpDir: M }
-----------------------[IdNode]: { Name: 0 ,Line: 80 }
                                 {LexType:CONST }

                   End:
-----------------------[IdNode]: { Name: i ,Line: 80 }
                                 {LexType:IDENTIFIER }
-------------------[Operator]: {OpType: < ,Line:80 }
                               {OpDir: M }
-----------------------[IdNode]: { Name: mylength ,Line: 80 }
                                 {LexType:IDENTIFIER }

                   Iterate:
-----------------------[IdNode]: { Name: i ,Line: 80 }
                                 {LexType:IDENTIFIER }
-------------------[Operator]: {OpType: ++ ,Line:80 }
                               {OpDir: L }
-----------------------[IdNode]: { Name: arr ,Line: 82 }
                                 {LexType:IDENTIFIER }
-------------------[Operator]: {OpType: [ ,Line:82 }
                               {OpDir: M }
-----------------------[IdNode]: { Name: i ,Line: 82 }
                                 {LexType:IDENTIFIER }
---------------[Operator]: {OpType: = ,Line:82 }
                           {OpDir: M }
-------------------[Operator]: {OpType: Cast ,Line:82 }
                               {OpDir: R ,CaseType: int }
-----------------------[Function]: {Name: rand ,Line:82 }
                                   ArgList: 0 Members

---------------[Function]: {Name: printf ,Line:83 }
                           ArgList: 2 Members
---------------------------[IdNode]: { Name: "%d : " ,Line: 83 }
                                     {LexType:CONST }
-------------------------------[IdNode]: { Name: arr ,Line: 83 }
                                         {LexType:IDENTIFIER }
---------------------------[Operator]: {OpType: [ ,Line:83 }
                                       {OpDir: M }
-------------------------------[IdNode]: { Name: i ,Line: 83 }
                                         {LexType:IDENTIFIER }


---------[Function]: {Name: printf ,Line:85 }
                     ArgList: 1 Members
---------------------[IdNode]: { Name: "\n" ,Line: 85 }
                               {LexType:CONST }

---------[Function]: {Name: MPI_Barrier ,Line:88 }
                     ArgList: 1 Members
---------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 88 }
                               {LexType:IDENTIFIER }

---------[Function]: {Name: quicksort ,Line:89 }
                     ArgList: 3 Members
---------------------[IdNode]: { Name: arr ,Line: 89 }
                               {LexType:IDENTIFIER }
---------------------[IdNode]: { Name: 0 ,Line: 89 }
                               {LexType:CONST }
-------------------------[IdNode]: { Name: mylength ,Line: 89 }
                                   {LexType:IDENTIFIER }
---------------------[Operator]: {OpType: - ,Line:89 }
                                 {OpDir: M }
-------------------------[IdNode]: { Name: 1 ,Line: 89 }
                                   {LexType:CONST }

---------[Function]: {Name: MPI_Barrier ,Line:90 }
                     ArgList: 1 Members
---------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 90 }
                               {LexType:IDENTIFIER }

---------[Branch]: {Type: if ,Line:93 }
                   Judgement:
-----------------------[IdNode]: { Name: SumID ,Line: 93 }
                                 {LexType:IDENTIFIER }
-------------------[Operator]: {OpType: > ,Line:93 }
                               {OpDir: M }
-----------------------[IdNode]: { Name: 1 ,Line: 93 }
                                 {LexType:CONST }
---------------[Function]: {Name: MPI_Barrier ,Line:95 }
                           ArgList: 1 Members
---------------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 95 }
                                     {LexType:IDENTIFIER }

-------------------[IdNode]: { Name: n ,Line: 97 }
                             {LexType:IDENTIFIER }
---------------[Operator]: {OpType: = ,Line:97 }
                           {OpDir: M }
-------------------[Operator]: {OpType: Cast ,Line:97 }
                               {OpDir: R ,CaseType: int }
---------------------------[IdNode]: { Name: mylength ,Line: 97 }
                                     {LexType:IDENTIFIER }
-----------------------[Operator]: {OpType: / ,Line:97 }
                                   {OpDir: M }
-------------------------------[IdNode]: { Name: Spt ,Line: 97 }
                                         {LexType:IDENTIFIER }
---------------------------[Operator]: {OpType: + ,Line:97 }
                                       {OpDir: M }
-------------------------------[IdNode]: { Name: 1 ,Line: 97 }
                                         {LexType:CONST }

---------------[Branch]: {Type: for ,Line:98 }
                         Init:
-----------------------------[IdNode]: { Name: i ,Line: 98 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: = ,Line:98 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: 0 ,Line: 98 }
                                       {LexType:CONST }

                         End:
-----------------------------[IdNode]: { Name: i ,Line: 98 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: < ,Line:98 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: Spt ,Line: 98 }
                                       {LexType:IDENTIFIER }

                         Iterate:
-----------------------------[IdNode]: { Name: i ,Line: 98 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: ++ ,Line:98 }
                                     {OpDir: L }
-----------------------------[IdNode]: { Name: temp1 ,Line: 99 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: [ ,Line:99 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: i ,Line: 99 }
                                       {LexType:IDENTIFIER }
---------------------[Operator]: {OpType: = ,Line:99 }
                                 {OpDir: M }
-----------------------------[IdNode]: { Name: arr ,Line: 99 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: [ ,Line:99 }
                                     {OpDir: M }
-----------------------------------------[IdNode]: { Name: i ,Line: 99 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: + ,Line:99 }
                                                 {OpDir: M }
-----------------------------------------[IdNode]: { Name: 1 ,Line: 99 }
                                                   {LexType:CONST }
---------------------------------[Operator]: {OpType: * ,Line:99 }
                                             {OpDir: M }
-------------------------------------[IdNode]: { Name: n ,Line: 99 }
                                               {LexType:IDENTIFIER }
-----------------------------[Operator]: {OpType: - ,Line:99 }
                                         {OpDir: M }
---------------------------------[IdNode]: { Name: 1 ,Line: 99 }
                                           {LexType:CONST }


---------------[Function]: {Name: MPI_Barrier ,Line:101 }
                           ArgList: 1 Members
---------------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 101 }
                                     {LexType:IDENTIFIER }

---------------[Branch]: {Type: if ,Line:103 }
                         Judgement:
-----------------------------[IdNode]: { Name: MyID ,Line: 103 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: == ,Line:103 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: 0 ,Line: 103 }
                                       {LexType:CONST }
-------------------------[IdNode]: { Name: j ,Line: 106 }
                                   {LexType:IDENTIFIER }
---------------------[Operator]: {OpType: = ,Line:106 }
                                 {OpDir: M }
-------------------------[IdNode]: { Name: 0 ,Line: 106 }
                                   {LexType:CONST }

---------------------[Branch]: {Type: for ,Line:107 }
                               Init:
-----------------------------------[IdNode]: { Name: i ,Line: 107 }
                                             {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: = ,Line:107 }
                                           {OpDir: M }
-----------------------------------[IdNode]: { Name: 1 ,Line: 107 }
                                             {LexType:CONST }

                               End:
-----------------------------------[IdNode]: { Name: i ,Line: 107 }
                                             {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: < ,Line:107 }
                                           {OpDir: M }
-----------------------------------[IdNode]: { Name: SumID ,Line: 107 }
                                             {LexType:IDENTIFIER }

                               Iterate:
-----------------------------------[IdNode]: { Name: i ,Line: 107 }
                                             {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: ++ ,Line:107 }
                                           {OpDir: L }
---------------------------[Function]: {Name: MPI_Irecv ,Line:108 }
                                       ArgList: 7 Members
---------------------------------------[Operator]: {OpType: & ,Line:108 }
                                                   {OpDir: R }
-----------------------------------------------[IdNode]: { Name: temp1 ,Line: 108 }
                                                         {LexType:IDENTIFIER }
-------------------------------------------[Operator]: {OpType: [ ,Line:108 }
                                                       {OpDir: M }
---------------------------------------------------[IdNode]: { Name: i ,Line: 108 }
                                                             {LexType:IDENTIFIER }
-----------------------------------------------[Operator]: {OpType: * ,Line:108 }
                                                           {OpDir: M }
---------------------------------------------------[IdNode]: { Name: Spt ,Line: 108 }
                                                             {LexType:IDENTIFIER }
-------------------------------------------[Function]: {Name: sizeof ,Line:108 }
                                                       ArgList: 1 Members
-------------------------------------------------------[IdNode]: { Name: 4 ,Line: 108 }
                                                                 {LexType:CONST }
---------------------------------------[Operator]: {OpType: * ,Line:108 }
                                                   {OpDir: M }
-------------------------------------------[IdNode]: { Name: Spt ,Line: 108 }
                                                     {LexType:IDENTIFIER }
---------------------------------------[IdNode]: { Name: MPI_CHAR ,Line: 108 }
                                                 {LexType:IDENTIFIER }
---------------------------------------[IdNode]: { Name: i ,Line: 108 }
                                                 {LexType:IDENTIFIER }
-------------------------------------------[IdNode]: { Name: ALLTOONE_TYPE ,Line: 108 }
                                                     {LexType:IDENTIFIER }
---------------------------------------[Operator]: {OpType: + ,Line:108 }
                                                   {OpDir: M }
-------------------------------------------[IdNode]: { Name: i ,Line: 108 }
                                                     {LexType:IDENTIFIER }
---------------------------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 108 }
                                                 {LexType:IDENTIFIER }
---------------------------------------[Operator]: {OpType: & ,Line:108 }
                                                   {OpDir: R }
-----------------------------------------------[IdNode]: { Name: request ,Line: 108 }
                                                         {LexType:IDENTIFIER }
-------------------------------------------[Operator]: {OpType: [ ,Line:108 }
                                                       {OpDir: M }
---------------------------------------------------[IdNode]: { Name: j ,Line: 108 }
                                                             {LexType:IDENTIFIER }
-----------------------------------------------[Operator]: {OpType: ++ ,Line:108 }
                                                           {OpDir: L }


---------------------[Function]: {Name: MPI_Waitall ,Line:109 }
                                 ArgList: 3 Members
-------------------------------------[IdNode]: { Name: SumID ,Line: 109 }
                                               {LexType:IDENTIFIER }
---------------------------------[Operator]: {OpType: - ,Line:109 }
                                             {OpDir: M }
-------------------------------------[IdNode]: { Name: 1 ,Line: 109 }
                                               {LexType:CONST }
---------------------------------[IdNode]: { Name: request ,Line: 109 }
                                           {LexType:IDENTIFIER }
---------------------------------[IdNode]: { Name: status ,Line: 109 }
                                           {LexType:IDENTIFIER }

---------------------[Function]: {Name: MPI_Barrier ,Line:112 }
                                 ArgList: 1 Members
---------------------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 112 }
                                           {LexType:IDENTIFIER }

---------------------[Function]: {Name: quicksort ,Line:113 }
                                 ArgList: 3 Members
---------------------------------[IdNode]: { Name: temp1 ,Line: 113 }
                                           {LexType:IDENTIFIER }
---------------------------------[IdNode]: { Name: 0 ,Line: 113 }
                                           {LexType:CONST }
-----------------------------------------[IdNode]: { Name: SumID ,Line: 113 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: * ,Line:113 }
                                                 {OpDir: M }
-----------------------------------------[IdNode]: { Name: Spt ,Line: 113 }
                                                   {LexType:IDENTIFIER }
---------------------------------[Operator]: {OpType: - ,Line:113 }
                                             {OpDir: M }
-------------------------------------[IdNode]: { Name: 1 ,Line: 113 }
                                               {LexType:CONST }

---------------------[Function]: {Name: MPI_Barrier ,Line:114 }
                                 ArgList: 1 Members
---------------------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 114 }
                                           {LexType:IDENTIFIER }

---------------------[Branch]: {Type: for ,Line:116 }
                               Init:
-----------------------------------[IdNode]: { Name: i ,Line: 116 }
                                             {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: = ,Line:116 }
                                           {OpDir: M }
-----------------------------------[IdNode]: { Name: 1 ,Line: 116 }
                                             {LexType:CONST }

                               End:
-----------------------------------[IdNode]: { Name: i ,Line: 116 }
                                             {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: < ,Line:116 }
                                           {OpDir: M }
---------------------------------------[IdNode]: { Name: Spt ,Line: 116 }
                                                 {LexType:IDENTIFIER }
-----------------------------------[Operator]: {OpType: + ,Line:116 }
                                               {OpDir: M }
---------------------------------------[IdNode]: { Name: 1 ,Line: 116 }
                                                 {LexType:CONST }

                               Iterate:
-----------------------------------[IdNode]: { Name: i ,Line: 116 }
                                             {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: ++ ,Line:116 }
                                           {OpDir: L }
-----------------------------------[IdNode]: { Name: temp1 ,Line: 117 }
                                             {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: [ ,Line:117 }
                                           {OpDir: M }
-----------------------------------[IdNode]: { Name: i ,Line: 117 }
                                             {LexType:IDENTIFIER }
---------------------------[Operator]: {OpType: = ,Line:117 }
                                       {OpDir: M }
-----------------------------------[IdNode]: { Name: temp1 ,Line: 117 }
                                             {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: [ ,Line:117 }
                                           {OpDir: M }
-------------------------------------------[IdNode]: { Name: i ,Line: 117 }
                                                     {LexType:IDENTIFIER }
---------------------------------------[Operator]: {OpType: * ,Line:117 }
                                                   {OpDir: M }
-------------------------------------------[IdNode]: { Name: Spt ,Line: 117 }
                                                     {LexType:IDENTIFIER }
-----------------------------------[Operator]: {OpType: - ,Line:117 }
                                               {OpDir: M }
---------------------------------------[IdNode]: { Name: 1 ,Line: 117 }
                                                 {LexType:CONST }


---------------------[Function]: {Name: MPI_Bcast ,Line:119 }
                                 ArgList: 5 Members
---------------------------------[IdNode]: { Name: temp1 ,Line: 119 }
                                           {LexType:IDENTIFIER }
-------------------------------------[Function]: {Name: sizeof ,Line:119 }
                                                 ArgList: 1 Members
-------------------------------------------------[IdNode]: { Name: 4 ,Line: 119 }
                                                           {LexType:CONST }
---------------------------------[Operator]: {OpType: * ,Line:119 }
                                             {OpDir: M }
-----------------------------------------[IdNode]: { Name: 1 ,Line: 119 }
                                                   {LexType:CONST }
-------------------------------------[Operator]: {OpType: + ,Line:119 }
                                                 {OpDir: M }
-----------------------------------------[IdNode]: { Name: Spt ,Line: 119 }
                                                   {LexType:IDENTIFIER }
---------------------------------[IdNode]: { Name: MPI_CHAR ,Line: 119 }
                                           {LexType:IDENTIFIER }
---------------------------------[IdNode]: { Name: 0 ,Line: 119 }
                                           {LexType:CONST }
---------------------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 119 }
                                           {LexType:IDENTIFIER }

---------------------[Function]: {Name: MPI_Barrier ,Line:120 }
                                 ArgList: 1 Members
---------------------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 120 }
                                           {LexType:IDENTIFIER }


---------------[Branch]: {Type: else ,Line:123 }
---------------------[Function]: {Name: MPI_Send ,Line:124 }
                                 ArgList: 6 Members
---------------------------------[IdNode]: { Name: temp1 ,Line: 124 }
                                           {LexType:IDENTIFIER }
-------------------------------------[Function]: {Name: sizeof ,Line:124 }
                                                 ArgList: 1 Members
-------------------------------------------------[IdNode]: { Name: 4 ,Line: 124 }
                                                           {LexType:CONST }
---------------------------------[Operator]: {OpType: * ,Line:124 }
                                             {OpDir: M }
-------------------------------------[IdNode]: { Name: Spt ,Line: 124 }
                                               {LexType:IDENTIFIER }
---------------------------------[IdNode]: { Name: MPI_CHAR ,Line: 124 }
                                           {LexType:IDENTIFIER }
---------------------------------[IdNode]: { Name: 0 ,Line: 124 }
                                           {LexType:CONST }
-------------------------------------[IdNode]: { Name: ALLTOONE_TYPE ,Line: 124 }
                                               {LexType:IDENTIFIER }
---------------------------------[Operator]: {OpType: + ,Line:124 }
                                             {OpDir: M }
-------------------------------------[IdNode]: { Name: MyID ,Line: 124 }
                                               {LexType:IDENTIFIER }
---------------------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 124 }
                                           {LexType:IDENTIFIER }

---------------------[Function]: {Name: MPI_Barrier ,Line:125 }
                                 ArgList: 1 Members
---------------------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 125 }
                                           {LexType:IDENTIFIER }

---------------------[Function]: {Name: MPI_Barrier ,Line:126 }
                                 ArgList: 1 Members
---------------------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 126 }
                                           {LexType:IDENTIFIER }

---------------------[Function]: {Name: MPI_Bcast ,Line:127 }
                                 ArgList: 5 Members
---------------------------------[IdNode]: { Name: temp1 ,Line: 127 }
                                           {LexType:IDENTIFIER }
-------------------------------------[Function]: {Name: sizeof ,Line:127 }
                                                 ArgList: 1 Members
-------------------------------------------------[IdNode]: { Name: 4 ,Line: 127 }
                                                           {LexType:CONST }
---------------------------------[Operator]: {OpType: * ,Line:127 }
                                             {OpDir: M }
-----------------------------------------[IdNode]: { Name: 1 ,Line: 127 }
                                                   {LexType:CONST }
-------------------------------------[Operator]: {OpType: + ,Line:127 }
                                                 {OpDir: M }
-----------------------------------------[IdNode]: { Name: Spt ,Line: 127 }
                                                   {LexType:IDENTIFIER }
---------------------------------[IdNode]: { Name: MPI_CHAR ,Line: 127 }
                                           {LexType:IDENTIFIER }
---------------------------------[IdNode]: { Name: 0 ,Line: 127 }
                                           {LexType:CONST }
---------------------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 127 }
                                           {LexType:IDENTIFIER }

---------------------[Function]: {Name: MPI_Barrier ,Line:128 }
                                 ArgList: 1 Members
---------------------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 128 }
                                           {LexType:IDENTIFIER }


-------------------[IdNode]: { Name: n ,Line: 132 }
                             {LexType:IDENTIFIER }
---------------[Operator]: {OpType: = ,Line:132 }
                           {OpDir: M }
-------------------[IdNode]: { Name: mylength ,Line: 132 }
                             {LexType:IDENTIFIER }

-----------------------[IdNode]: { Name: index ,Line: 133 }
                                 {LexType:IDENTIFIER }
-------------------[Operator]: {OpType: [ ,Line:133 }
                               {OpDir: M }
-----------------------[IdNode]: { Name: 0 ,Line: 133 }
                                 {LexType:CONST }
---------------[Operator]: {OpType: = ,Line:133 }
                           {OpDir: M }
-------------------[IdNode]: { Name: 0 ,Line: 133 }
                             {LexType:CONST }

-------------------[IdNode]: { Name: i ,Line: 134 }
                             {LexType:IDENTIFIER }
---------------[Operator]: {OpType: = ,Line:134 }
                           {OpDir: M }
-------------------[IdNode]: { Name: 1 ,Line: 134 }
                             {LexType:CONST }

---------------[Branch]: {Type: while ,Line:135 }
                         Judgement:
-------------------------------------[IdNode]: { Name: arr ,Line: 135 }
                                               {LexType:IDENTIFIER }
---------------------------------[Operator]: {OpType: [ ,Line:135 }
                                             {OpDir: M }
-------------------------------------[IdNode]: { Name: 0 ,Line: 135 }
                                               {LexType:CONST }
-----------------------------[Operator]: {OpType: >= ,Line:135 }
                                         {OpDir: M }
-------------------------------------[IdNode]: { Name: temp1 ,Line: 135 }
                                               {LexType:IDENTIFIER }
---------------------------------[Operator]: {OpType: [ ,Line:135 }
                                             {OpDir: M }
-------------------------------------[IdNode]: { Name: i ,Line: 135 }
                                               {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: && ,Line:135 }
                                     {OpDir: M }
---------------------------------[IdNode]: { Name: i ,Line: 135 }
                                           {LexType:IDENTIFIER }
-----------------------------[Operator]: {OpType: < ,Line:135 }
                                         {OpDir: M }
---------------------------------[IdNode]: { Name: SumID ,Line: 135 }
                                           {LexType:IDENTIFIER }
-----------------------------[IdNode]: { Name: index ,Line: 137 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: [ ,Line:137 }
                                     {OpDir: M }
-------------------------------------[IdNode]: { Name: 2 ,Line: 137 }
                                               {LexType:CONST }
---------------------------------[Operator]: {OpType: * ,Line:137 }
                                             {OpDir: M }
-------------------------------------[IdNode]: { Name: i ,Line: 137 }
                                               {LexType:IDENTIFIER }
-----------------------------[Operator]: {OpType: - ,Line:137 }
                                         {OpDir: M }
---------------------------------[IdNode]: { Name: 1 ,Line: 137 }
                                           {LexType:CONST }
---------------------[Operator]: {OpType: = ,Line:137 }
                                 {OpDir: M }
-------------------------[IdNode]: { Name: 0 ,Line: 137 }
                                   {LexType:CONST }

-----------------------------[IdNode]: { Name: index ,Line: 138 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: [ ,Line:138 }
                                     {OpDir: M }
---------------------------------[IdNode]: { Name: 2 ,Line: 138 }
                                           {LexType:CONST }
-----------------------------[Operator]: {OpType: * ,Line:138 }
                                         {OpDir: M }
---------------------------------[IdNode]: { Name: i ,Line: 138 }
                                           {LexType:IDENTIFIER }
---------------------[Operator]: {OpType: = ,Line:138 }
                                 {OpDir: M }
-------------------------[IdNode]: { Name: 0 ,Line: 138 }
                                   {LexType:CONST }

-------------------------[IdNode]: { Name: i ,Line: 139 }
                                   {LexType:IDENTIFIER }
---------------------[Operator]: {OpType: ++ ,Line:139 }
                                 {OpDir: L }


---------------[Branch]: {Type: if ,Line:141 }
                         Judgement:
-----------------------------[IdNode]: { Name: i ,Line: 141 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: == ,Line:141 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: SumID ,Line: 141 }
                                       {LexType:IDENTIFIER }

-----------------------[IdNode]: { Name: index ,Line: 141 }
                                 {LexType:IDENTIFIER }
-------------------[Operator]: {OpType: [ ,Line:141 }
                               {OpDir: M }
-------------------------------[IdNode]: { Name: 2 ,Line: 141 }
                                         {LexType:CONST }
---------------------------[Operator]: {OpType: * ,Line:141 }
                                       {OpDir: M }
-------------------------------[IdNode]: { Name: i ,Line: 141 }
                                         {LexType:IDENTIFIER }
-----------------------[Operator]: {OpType: - ,Line:141 }
                                   {OpDir: M }
---------------------------[IdNode]: { Name: 1 ,Line: 141 }
                                     {LexType:CONST }
---------------[Operator]: {OpType: = ,Line:141 }
                           {OpDir: M }
-------------------[IdNode]: { Name: n ,Line: 141 }
                             {LexType:IDENTIFIER }

-------------------[IdNode]: { Name: c1 ,Line: 142 }
                             {LexType:IDENTIFIER }
---------------[Operator]: {OpType: = ,Line:142 }
                           {OpDir: M }
-------------------[IdNode]: { Name: 0 ,Line: 142 }
                             {LexType:CONST }

---------------[Branch]: {Type: while ,Line:143 }
                         Judgement:
-----------------------------[IdNode]: { Name: i ,Line: 143 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: < ,Line:143 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: SumID ,Line: 143 }
                                       {LexType:IDENTIFIER }
-------------------------[IdNode]: { Name: c4 ,Line: 145 }
                                   {LexType:IDENTIFIER }
---------------------[Operator]: {OpType: = ,Line:145 }
                                 {OpDir: M }
-----------------------------[IdNode]: { Name: temp1 ,Line: 145 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: [ ,Line:145 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: i ,Line: 145 }
                                       {LexType:IDENTIFIER }

-------------------------[IdNode]: { Name: c3 ,Line: 146 }
                                   {LexType:IDENTIFIER }
---------------------[Operator]: {OpType: = ,Line:146 }
                                 {OpDir: M }
-------------------------[IdNode]: { Name: n ,Line: 146 }
                                   {LexType:IDENTIFIER }

-------------------------[IdNode]: { Name: c2 ,Line: 147 }
                                   {LexType:IDENTIFIER }
---------------------[Operator]: {OpType: = ,Line:147 }
                                 {OpDir: M }
-------------------------[Operator]: {OpType: Cast ,Line:147 }
                                     {OpDir: R ,CaseType: int }
-------------------------------------[IdNode]: { Name: c1 ,Line: 147 }
                                               {LexType:IDENTIFIER }
---------------------------------[Operator]: {OpType: + ,Line:147 }
                                             {OpDir: M }
-------------------------------------[IdNode]: { Name: c3 ,Line: 147 }
                                               {LexType:IDENTIFIER }
-----------------------------[Operator]: {OpType: / ,Line:147 }
                                         {OpDir: M }
---------------------------------[IdNode]: { Name: 2 ,Line: 147 }
                                           {LexType:CONST }

---------------------[Branch]: {Type: while ,Line:148 }
                               Judgement:
-------------------------------------------[IdNode]: { Name: arr ,Line: 148 }
                                                     {LexType:IDENTIFIER }
---------------------------------------[Operator]: {OpType: [ ,Line:148 }
                                                   {OpDir: M }
-------------------------------------------[IdNode]: { Name: c2 ,Line: 148 }
                                                     {LexType:IDENTIFIER }
-----------------------------------[Operator]: {OpType: != ,Line:148 }
                                               {OpDir: M }
---------------------------------------[IdNode]: { Name: c4 ,Line: 148 }
                                                 {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: && ,Line:148 }
                                           {OpDir: M }
---------------------------------------[IdNode]: { Name: c1 ,Line: 148 }
                                                 {LexType:IDENTIFIER }
-----------------------------------[Operator]: {OpType: < ,Line:148 }
                                               {OpDir: M }
---------------------------------------[IdNode]: { Name: c3 ,Line: 148 }
                                                 {LexType:IDENTIFIER }
---------------------------[Branch]: {Type: if ,Line:150 }
                                     Judgement:
---------------------------------------------[IdNode]: { Name: arr ,Line: 150 }
                                                       {LexType:IDENTIFIER }
-----------------------------------------[Operator]: {OpType: [ ,Line:150 }
                                                     {OpDir: M }
---------------------------------------------[IdNode]: { Name: c2 ,Line: 150 }
                                                       {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: > ,Line:150 }
                                                 {OpDir: M }
-----------------------------------------[IdNode]: { Name: c4 ,Line: 150 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[IdNode]: { Name: c3 ,Line: 152 }
                                               {LexType:IDENTIFIER }
---------------------------------[Operator]: {OpType: = ,Line:152 }
                                             {OpDir: M }
-----------------------------------------[IdNode]: { Name: c2 ,Line: 152 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: - ,Line:152 }
                                                 {OpDir: M }
-----------------------------------------[IdNode]: { Name: 1 ,Line: 152 }
                                                   {LexType:CONST }

-------------------------------------[IdNode]: { Name: c2 ,Line: 153 }
                                               {LexType:IDENTIFIER }
---------------------------------[Operator]: {OpType: = ,Line:153 }
                                             {OpDir: M }
-------------------------------------[Operator]: {OpType: Cast ,Line:153 }
                                                 {OpDir: R ,CaseType: int }
-------------------------------------------------[IdNode]: { Name: c1 ,Line: 153 }
                                                           {LexType:IDENTIFIER }
---------------------------------------------[Operator]: {OpType: + ,Line:153 }
                                                         {OpDir: M }
-------------------------------------------------[IdNode]: { Name: c3 ,Line: 153 }
                                                           {LexType:IDENTIFIER }
-----------------------------------------[Operator]: {OpType: / ,Line:153 }
                                                     {OpDir: M }
---------------------------------------------[IdNode]: { Name: 2 ,Line: 153 }
                                                       {LexType:CONST }


---------------------------[Branch]: {Type: else ,Line:156 }
-------------------------------------[IdNode]: { Name: c1 ,Line: 157 }
                                               {LexType:IDENTIFIER }
---------------------------------[Operator]: {OpType: = ,Line:157 }
                                             {OpDir: M }
-----------------------------------------[IdNode]: { Name: c2 ,Line: 157 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: + ,Line:157 }
                                                 {OpDir: M }
-----------------------------------------[IdNode]: { Name: 1 ,Line: 157 }
                                                   {LexType:CONST }

-------------------------------------[IdNode]: { Name: c2 ,Line: 158 }
                                               {LexType:IDENTIFIER }
---------------------------------[Operator]: {OpType: = ,Line:158 }
                                             {OpDir: M }
-------------------------------------[Operator]: {OpType: Cast ,Line:158 }
                                                 {OpDir: R ,CaseType: int }
-------------------------------------------------[IdNode]: { Name: c1 ,Line: 158 }
                                                           {LexType:IDENTIFIER }
---------------------------------------------[Operator]: {OpType: + ,Line:158 }
                                                         {OpDir: M }
-------------------------------------------------[IdNode]: { Name: c3 ,Line: 158 }
                                                           {LexType:IDENTIFIER }
-----------------------------------------[Operator]: {OpType: / ,Line:158 }
                                                     {OpDir: M }
---------------------------------------------[IdNode]: { Name: 2 ,Line: 158 }
                                                       {LexType:CONST }



---------------------[Branch]: {Type: while ,Line:161 }
                               Judgement:
-------------------------------------------[IdNode]: { Name: arr ,Line: 161 }
                                                     {LexType:IDENTIFIER }
---------------------------------------[Operator]: {OpType: [ ,Line:161 }
                                                   {OpDir: M }
-------------------------------------------[IdNode]: { Name: c2 ,Line: 161 }
                                                     {LexType:IDENTIFIER }
-----------------------------------[Operator]: {OpType: <= ,Line:161 }
                                               {OpDir: M }
---------------------------------------[IdNode]: { Name: c4 ,Line: 161 }
                                                 {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: && ,Line:161 }
                                           {OpDir: M }
---------------------------------------[IdNode]: { Name: c2 ,Line: 161 }
                                                 {LexType:IDENTIFIER }
-----------------------------------[Operator]: {OpType: < ,Line:161 }
                                               {OpDir: M }
---------------------------------------[IdNode]: { Name: n ,Line: 161 }
                                                 {LexType:IDENTIFIER }

-------------------------[IdNode]: { Name: c2 ,Line: 161 }
                                   {LexType:IDENTIFIER }
---------------------[Operator]: {OpType: ++ ,Line:161 }
                                 {OpDir: L }

---------------------[Branch]: {Type: if ,Line:162 }
                               Judgement:
-----------------------------------[IdNode]: { Name: c2 ,Line: 162 }
                                             {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: == ,Line:162 }
                                           {OpDir: M }
-----------------------------------[IdNode]: { Name: n ,Line: 162 }
                                             {LexType:IDENTIFIER }
-----------------------------------[IdNode]: { Name: index ,Line: 164 }
                                             {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: [ ,Line:164 }
                                           {OpDir: M }
-------------------------------------------[IdNode]: { Name: 2 ,Line: 164 }
                                                     {LexType:CONST }
---------------------------------------[Operator]: {OpType: * ,Line:164 }
                                                   {OpDir: M }
-------------------------------------------[IdNode]: { Name: i ,Line: 164 }
                                                     {LexType:IDENTIFIER }
-----------------------------------[Operator]: {OpType: - ,Line:164 }
                                               {OpDir: M }
---------------------------------------[IdNode]: { Name: 1 ,Line: 164 }
                                                 {LexType:CONST }
---------------------------[Operator]: {OpType: = ,Line:164 }
                                       {OpDir: M }
-------------------------------[IdNode]: { Name: n ,Line: 164 }
                                         {LexType:IDENTIFIER }

---------------------------[Branch]: {Type: for ,Line:165 }
                                     Init:
-----------------------------------------[IdNode]: { Name: k ,Line: 165 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: = ,Line:165 }
                                                 {OpDir: M }
-----------------------------------------[IdNode]: { Name: i ,Line: 165 }
                                                   {LexType:IDENTIFIER }

                                     End:
-----------------------------------------[IdNode]: { Name: k ,Line: 165 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: < ,Line:165 }
                                                 {OpDir: M }
-----------------------------------------[IdNode]: { Name: SumID ,Line: 165 }
                                                   {LexType:IDENTIFIER }

                                     Iterate:
-----------------------------------------[IdNode]: { Name: k ,Line: 165 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: ++ ,Line:165 }
                                                 {OpDir: L }
-----------------------------------------[IdNode]: { Name: index ,Line: 167 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: [ ,Line:167 }
                                                 {OpDir: M }
---------------------------------------------[IdNode]: { Name: 2 ,Line: 167 }
                                                       {LexType:CONST }
-----------------------------------------[Operator]: {OpType: * ,Line:167 }
                                                     {OpDir: M }
---------------------------------------------[IdNode]: { Name: k ,Line: 167 }
                                                       {LexType:IDENTIFIER }
---------------------------------[Operator]: {OpType: = ,Line:167 }
                                             {OpDir: M }
-------------------------------------[IdNode]: { Name: 0 ,Line: 167 }
                                               {LexType:CONST }

-----------------------------------------[IdNode]: { Name: index ,Line: 168 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: [ ,Line:168 }
                                                 {OpDir: M }
-------------------------------------------------[IdNode]: { Name: 2 ,Line: 168 }
                                                           {LexType:CONST }
---------------------------------------------[Operator]: {OpType: * ,Line:168 }
                                                         {OpDir: M }
-------------------------------------------------[IdNode]: { Name: k ,Line: 168 }
                                                           {LexType:IDENTIFIER }
-----------------------------------------[Operator]: {OpType: + ,Line:168 }
                                                     {OpDir: M }
---------------------------------------------[IdNode]: { Name: 1 ,Line: 168 }
                                                       {LexType:CONST }
---------------------------------[Operator]: {OpType: = ,Line:168 }
                                             {OpDir: M }
-------------------------------------[IdNode]: { Name: 0 ,Line: 168 }
                                               {LexType:CONST }


-------------------------------[IdNode]: { Name: i ,Line: 170 }
                                         {LexType:IDENTIFIER }
---------------------------[Operator]: {OpType: = ,Line:170 }
                                       {OpDir: M }
-------------------------------[IdNode]: { Name: SumID ,Line: 170 }
                                         {LexType:IDENTIFIER }


---------------------[Branch]: {Type: else ,Line:173 }
-----------------------------------[IdNode]: { Name: index ,Line: 174 }
                                             {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: [ ,Line:174 }
                                           {OpDir: M }
---------------------------------------[IdNode]: { Name: 2 ,Line: 174 }
                                                 {LexType:CONST }
-----------------------------------[Operator]: {OpType: * ,Line:174 }
                                               {OpDir: M }
---------------------------------------[IdNode]: { Name: i ,Line: 174 }
                                                 {LexType:IDENTIFIER }
---------------------------[Operator]: {OpType: = ,Line:174 }
                                       {OpDir: M }
-------------------------------[IdNode]: { Name: c2 ,Line: 174 }
                                         {LexType:IDENTIFIER }

-----------------------------------[IdNode]: { Name: index ,Line: 175 }
                                             {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: [ ,Line:175 }
                                           {OpDir: M }
-------------------------------------------[IdNode]: { Name: 2 ,Line: 175 }
                                                     {LexType:CONST }
---------------------------------------[Operator]: {OpType: * ,Line:175 }
                                                   {OpDir: M }
-------------------------------------------[IdNode]: { Name: i ,Line: 175 }
                                                     {LexType:IDENTIFIER }
-----------------------------------[Operator]: {OpType: - ,Line:175 }
                                               {OpDir: M }
---------------------------------------[IdNode]: { Name: 1 ,Line: 175 }
                                                 {LexType:CONST }
---------------------------[Operator]: {OpType: = ,Line:175 }
                                       {OpDir: M }
-------------------------------[IdNode]: { Name: c2 ,Line: 175 }
                                         {LexType:IDENTIFIER }


-------------------------[IdNode]: { Name: c1 ,Line: 177 }
                                   {LexType:IDENTIFIER }
---------------------[Operator]: {OpType: = ,Line:177 }
                                 {OpDir: M }
-------------------------[IdNode]: { Name: c2 ,Line: 177 }
                                   {LexType:IDENTIFIER }

-------------------------[IdNode]: { Name: c2 ,Line: 178 }
                                   {LexType:IDENTIFIER }
---------------------[Operator]: {OpType: = ,Line:178 }
                                 {OpDir: M }
-------------------------[Operator]: {OpType: Cast ,Line:178 }
                                     {OpDir: R ,CaseType: int }
-------------------------------------[IdNode]: { Name: c1 ,Line: 178 }
                                               {LexType:IDENTIFIER }
---------------------------------[Operator]: {OpType: + ,Line:178 }
                                             {OpDir: M }
-------------------------------------[IdNode]: { Name: c3 ,Line: 178 }
                                               {LexType:IDENTIFIER }
-----------------------------[Operator]: {OpType: / ,Line:178 }
                                         {OpDir: M }
---------------------------------[IdNode]: { Name: 2 ,Line: 178 }
                                           {LexType:CONST }

-------------------------[IdNode]: { Name: i ,Line: 179 }
                                   {LexType:IDENTIFIER }
---------------------[Operator]: {OpType: ++ ,Line:179 }
                                 {OpDir: L }


---------------[Branch]: {Type: if ,Line:181 }
                         Judgement:
-----------------------------[IdNode]: { Name: i ,Line: 181 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: == ,Line:181 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: SumID ,Line: 181 }
                                       {LexType:IDENTIFIER }

-----------------------[IdNode]: { Name: index ,Line: 181 }
                                 {LexType:IDENTIFIER }
-------------------[Operator]: {OpType: [ ,Line:181 }
                               {OpDir: M }
-------------------------------[IdNode]: { Name: 2 ,Line: 181 }
                                         {LexType:CONST }
---------------------------[Operator]: {OpType: * ,Line:181 }
                                       {OpDir: M }
-------------------------------[IdNode]: { Name: i ,Line: 181 }
                                         {LexType:IDENTIFIER }
-----------------------[Operator]: {OpType: - ,Line:181 }
                                   {OpDir: M }
---------------------------[IdNode]: { Name: 1 ,Line: 181 }
                                     {LexType:CONST }
---------------[Operator]: {OpType: = ,Line:181 }
                           {OpDir: M }
-------------------[IdNode]: { Name: n ,Line: 181 }
                             {LexType:IDENTIFIER }

---------------[Function]: {Name: MPI_Barrier ,Line:183 }
                           ArgList: 1 Members
---------------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 183 }
                                     {LexType:IDENTIFIER }

-------------------[IdNode]: { Name: j ,Line: 187 }
                             {LexType:IDENTIFIER }
---------------[Operator]: {OpType: = ,Line:187 }
                           {OpDir: M }
-------------------[IdNode]: { Name: 0 ,Line: 187 }
                             {LexType:CONST }

---------------[Branch]: {Type: for ,Line:188 }
                         Init:
-----------------------------[IdNode]: { Name: i ,Line: 188 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: = ,Line:188 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: 0 ,Line: 188 }
                                       {LexType:CONST }

                         End:
-----------------------------[IdNode]: { Name: i ,Line: 188 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: < ,Line:188 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: SumID ,Line: 188 }
                                       {LexType:IDENTIFIER }

                         Iterate:
-----------------------------[IdNode]: { Name: i ,Line: 188 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: ++ ,Line:188 }
                                     {OpDir: L }
---------------------[Branch]: {Type: if ,Line:190 }
                               Judgement:
-----------------------------------[IdNode]: { Name: i ,Line: 190 }
                                             {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: == ,Line:190 }
                                           {OpDir: M }
-----------------------------------[IdNode]: { Name: MyID ,Line: 190 }
                                             {LexType:IDENTIFIER }
-----------------------------------[IdNode]: { Name: temp1 ,Line: 192 }
                                             {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: [ ,Line:192 }
                                           {OpDir: M }
-----------------------------------[IdNode]: { Name: i ,Line: 192 }
                                             {LexType:IDENTIFIER }
---------------------------[Operator]: {OpType: = ,Line:192 }
                                       {OpDir: M }
---------------------------------------[IdNode]: { Name: index ,Line: 192 }
                                                 {LexType:IDENTIFIER }
-----------------------------------[Operator]: {OpType: [ ,Line:192 }
                                               {OpDir: M }
-----------------------------------------------[IdNode]: { Name: 2 ,Line: 192 }
                                                         {LexType:CONST }
-------------------------------------------[Operator]: {OpType: * ,Line:192 }
                                                       {OpDir: M }
-----------------------------------------------[IdNode]: { Name: i ,Line: 192 }
                                                         {LexType:IDENTIFIER }
---------------------------------------[Operator]: {OpType: + ,Line:192 }
                                                   {OpDir: M }
-------------------------------------------[IdNode]: { Name: 1 ,Line: 192 }
                                                     {LexType:CONST }
-------------------------------[Operator]: {OpType: - ,Line:192 }
                                           {OpDir: M }
---------------------------------------[IdNode]: { Name: index ,Line: 192 }
                                                 {LexType:IDENTIFIER }
-----------------------------------[Operator]: {OpType: [ ,Line:192 }
                                               {OpDir: M }
-------------------------------------------[IdNode]: { Name: 2 ,Line: 192 }
                                                     {LexType:CONST }
---------------------------------------[Operator]: {OpType: * ,Line:192 }
                                                   {OpDir: M }
-------------------------------------------[IdNode]: { Name: i ,Line: 192 }
                                                     {LexType:IDENTIFIER }

---------------------------[Branch]: {Type: for ,Line:193 }
                                     Init:
-----------------------------------------[IdNode]: { Name: n ,Line: 193 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: = ,Line:193 }
                                                 {OpDir: M }
-----------------------------------------[IdNode]: { Name: 0 ,Line: 193 }
                                                   {LexType:CONST }

                                     End:
-----------------------------------------[IdNode]: { Name: n ,Line: 193 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: < ,Line:193 }
                                                 {OpDir: M }
-----------------------------------------[IdNode]: { Name: SumID ,Line: 193 }
                                                   {LexType:IDENTIFIER }

                                     Iterate:
-----------------------------------------[IdNode]: { Name: n ,Line: 193 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: ++ ,Line:193 }
                                                 {OpDir: L }
---------------------------------[Branch]: {Type: if ,Line:194 }
                                           Judgement:
-----------------------------------------------[IdNode]: { Name: n ,Line: 194 }
                                                         {LexType:IDENTIFIER }
-------------------------------------------[Operator]: {OpType: != ,Line:194 }
                                                       {OpDir: M }
-----------------------------------------------[IdNode]: { Name: MyID ,Line: 194 }
                                                         {LexType:IDENTIFIER }
-------------------------------------------[IdNode]: { Name: k ,Line: 196 }
                                                     {LexType:IDENTIFIER }
---------------------------------------[Operator]: {OpType: = ,Line:196 }
                                                   {OpDir: M }
---------------------------------------------------[IdNode]: { Name: index ,Line: 196 }
                                                             {LexType:IDENTIFIER }
-----------------------------------------------[Operator]: {OpType: [ ,Line:196 }
                                                           {OpDir: M }
-----------------------------------------------------------[IdNode]: { Name: 2 ,Line: 196 }
                                                                     {LexType:CONST }
-------------------------------------------------------[Operator]: {OpType: * ,Line:196 }
                                                                   {OpDir: M }
-----------------------------------------------------------[IdNode]: { Name: n ,Line: 196 }
                                                                     {LexType:IDENTIFIER }
---------------------------------------------------[Operator]: {OpType: + ,Line:196 }
                                                               {OpDir: M }
-------------------------------------------------------[IdNode]: { Name: 1 ,Line: 196 }
                                                                 {LexType:CONST }
-------------------------------------------[Operator]: {OpType: - ,Line:196 }
                                                       {OpDir: M }
---------------------------------------------------[IdNode]: { Name: index ,Line: 196 }
                                                             {LexType:IDENTIFIER }
-----------------------------------------------[Operator]: {OpType: [ ,Line:196 }
                                                           {OpDir: M }
-------------------------------------------------------[IdNode]: { Name: 2 ,Line: 196 }
                                                                 {LexType:CONST }
---------------------------------------------------[Operator]: {OpType: * ,Line:196 }
                                                               {OpDir: M }
-------------------------------------------------------[IdNode]: { Name: n ,Line: 196 }
                                                                 {LexType:IDENTIFIER }

---------------------------------------[Function]: {Name: MPI_Send ,Line:197 }
                                                   ArgList: 6 Members
---------------------------------------------------[Operator]: {OpType: & ,Line:197 }
                                                               {OpDir: R }
-------------------------------------------------------[IdNode]: { Name: k ,Line: 197 }
                                                                 {LexType:IDENTIFIER }
---------------------------------------------------[Function]: {Name: sizeof ,Line:197 }
                                                               ArgList: 1 Members
---------------------------------------------------------------[IdNode]: { Name: 4 ,Line: 197 }
                                                                         {LexType:CONST }
---------------------------------------------------[IdNode]: { Name: MPI_CHAR ,Line: 197 }
                                                             {LexType:IDENTIFIER }
---------------------------------------------------[IdNode]: { Name: n ,Line: 197 }
                                                             {LexType:IDENTIFIER }
-------------------------------------------------------[IdNode]: { Name: MULTI_LEN ,Line: 197 }
                                                                 {LexType:IDENTIFIER }
---------------------------------------------------[Operator]: {OpType: + ,Line:197 }
                                                               {OpDir: M }
-------------------------------------------------------[IdNode]: { Name: MyID ,Line: 197 }
                                                                 {LexType:IDENTIFIER }
---------------------------------------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 197 }
                                                             {LexType:IDENTIFIER }




---------------------[Branch]: {Type: else ,Line:202 }
---------------------------[Function]: {Name: MPI_Recv ,Line:203 }
                                       ArgList: 7 Members
---------------------------------------[Operator]: {OpType: & ,Line:203 }
                                                   {OpDir: R }
-----------------------------------------------[IdNode]: { Name: temp1 ,Line: 203 }
                                                         {LexType:IDENTIFIER }
-------------------------------------------[Operator]: {OpType: [ ,Line:203 }
                                                       {OpDir: M }
-----------------------------------------------[IdNode]: { Name: i ,Line: 203 }
                                                         {LexType:IDENTIFIER }
---------------------------------------[Function]: {Name: sizeof ,Line:203 }
                                                   ArgList: 1 Members
---------------------------------------------------[IdNode]: { Name: 4 ,Line: 203 }
                                                             {LexType:CONST }
---------------------------------------[IdNode]: { Name: MPI_CHAR ,Line: 203 }
                                                 {LexType:IDENTIFIER }
---------------------------------------[IdNode]: { Name: i ,Line: 203 }
                                                 {LexType:IDENTIFIER }
-------------------------------------------[IdNode]: { Name: MULTI_LEN ,Line: 203 }
                                                     {LexType:IDENTIFIER }
---------------------------------------[Operator]: {OpType: + ,Line:203 }
                                                   {OpDir: M }
-------------------------------------------[IdNode]: { Name: i ,Line: 203 }
                                                     {LexType:IDENTIFIER }
---------------------------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 203 }
                                                 {LexType:IDENTIFIER }
---------------------------------------[Operator]: {OpType: & ,Line:203 }
                                                   {OpDir: R }
-----------------------------------------------[IdNode]: { Name: status ,Line: 203 }
                                                         {LexType:IDENTIFIER }
-------------------------------------------[Operator]: {OpType: [ ,Line:203 }
                                                       {OpDir: M }
---------------------------------------------------[IdNode]: { Name: j ,Line: 203 }
                                                             {LexType:IDENTIFIER }
-----------------------------------------------[Operator]: {OpType: ++ ,Line:203 }
                                                           {OpDir: L }



---------------[Function]: {Name: MPI_Barrier ,Line:207 }
                           ArgList: 1 Members
---------------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 207 }
                                     {LexType:IDENTIFIER }

-------------------[IdNode]: { Name: j ,Line: 209 }
                             {LexType:IDENTIFIER }
---------------[Operator]: {OpType: = ,Line:209 }
                           {OpDir: M }
-------------------[IdNode]: { Name: 0 ,Line: 209 }
                             {LexType:CONST }

-------------------[IdNode]: { Name: k ,Line: 210 }
                             {LexType:IDENTIFIER }
---------------[Operator]: {OpType: = ,Line:210 }
                           {OpDir: M }
-------------------[IdNode]: { Name: 0 ,Line: 210 }
                             {LexType:CONST }

-------------------[IdNode]: { Name: l ,Line: 211 }
                             {LexType:IDENTIFIER }
---------------[Operator]: {OpType: = ,Line:211 }
                           {OpDir: M }
-------------------[IdNode]: { Name: 0 ,Line: 211 }
                             {LexType:CONST }

---------------[Branch]: {Type: for ,Line:213 }
                         Init:
-----------------------------[IdNode]: { Name: i ,Line: 213 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: = ,Line:213 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: 0 ,Line: 213 }
                                       {LexType:CONST }

                         End:
-----------------------------[IdNode]: { Name: i ,Line: 213 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: < ,Line:213 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: SumID ,Line: 213 }
                                       {LexType:IDENTIFIER }

                         Iterate:
-----------------------------[IdNode]: { Name: i ,Line: 213 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: ++ ,Line:213 }
                                     {OpDir: L }
---------------------[Function]: {Name: MPI_Barrier ,Line:215 }
                                 ArgList: 1 Members
---------------------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 215 }
                                           {LexType:IDENTIFIER }

---------------------[Branch]: {Type: if ,Line:217 }
                               Judgement:
-----------------------------------[IdNode]: { Name: i ,Line: 217 }
                                             {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: == ,Line:217 }
                                           {OpDir: M }
-----------------------------------[IdNode]: { Name: MyID ,Line: 217 }
                                             {LexType:IDENTIFIER }
---------------------------[Branch]: {Type: for ,Line:219 }
                                     Init:
-----------------------------------------[IdNode]: { Name: n ,Line: 219 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: = ,Line:219 }
                                                 {OpDir: M }
---------------------------------------------[IdNode]: { Name: index ,Line: 219 }
                                                       {LexType:IDENTIFIER }
-----------------------------------------[Operator]: {OpType: [ ,Line:219 }
                                                     {OpDir: M }
-------------------------------------------------[IdNode]: { Name: 2 ,Line: 219 }
                                                           {LexType:CONST }
---------------------------------------------[Operator]: {OpType: * ,Line:219 }
                                                         {OpDir: M }
-------------------------------------------------[IdNode]: { Name: i ,Line: 219 }
                                                           {LexType:IDENTIFIER }

                                     End:
-----------------------------------------[IdNode]: { Name: n ,Line: 219 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: < ,Line:219 }
                                                 {OpDir: M }
---------------------------------------------[IdNode]: { Name: index ,Line: 219 }
                                                       {LexType:IDENTIFIER }
-----------------------------------------[Operator]: {OpType: [ ,Line:219 }
                                                     {OpDir: M }
-----------------------------------------------------[IdNode]: { Name: 2 ,Line: 219 }
                                                               {LexType:CONST }
-------------------------------------------------[Operator]: {OpType: * ,Line:219 }
                                                             {OpDir: M }
-----------------------------------------------------[IdNode]: { Name: i ,Line: 219 }
                                                               {LexType:IDENTIFIER }
---------------------------------------------[Operator]: {OpType: + ,Line:219 }
                                                         {OpDir: M }
-------------------------------------------------[IdNode]: { Name: 1 ,Line: 219 }
                                                           {LexType:CONST }

                                     Iterate:
-----------------------------------------[IdNode]: { Name: n ,Line: 219 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: ++ ,Line:219 }
                                                 {OpDir: L }
-----------------------------------------[IdNode]: { Name: arr1 ,Line: 220 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: [ ,Line:220 }
                                                 {OpDir: M }
---------------------------------------------[IdNode]: { Name: k ,Line: 220 }
                                                       {LexType:IDENTIFIER }
-----------------------------------------[Operator]: {OpType: ++ ,Line:220 }
                                                     {OpDir: L }
---------------------------------[Operator]: {OpType: = ,Line:220 }
                                             {OpDir: M }
-----------------------------------------[IdNode]: { Name: arr ,Line: 220 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: [ ,Line:220 }
                                                 {OpDir: M }
-----------------------------------------[IdNode]: { Name: n ,Line: 220 }
                                                   {LexType:IDENTIFIER }



---------------------[Function]: {Name: MPI_Barrier ,Line:223 }
                                 ArgList: 1 Members
---------------------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 223 }
                                           {LexType:IDENTIFIER }

---------------------[Branch]: {Type: if ,Line:225 }
                               Judgement:
-----------------------------------[IdNode]: { Name: i ,Line: 225 }
                                             {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: == ,Line:225 }
                                           {OpDir: M }
-----------------------------------[IdNode]: { Name: MyID ,Line: 225 }
                                             {LexType:IDENTIFIER }
---------------------------[Branch]: {Type: for ,Line:227 }
                                     Init:
-----------------------------------------[IdNode]: { Name: n ,Line: 227 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: = ,Line:227 }
                                                 {OpDir: M }
-----------------------------------------[IdNode]: { Name: 0 ,Line: 227 }
                                                   {LexType:CONST }

                                     End:
-----------------------------------------[IdNode]: { Name: n ,Line: 227 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: < ,Line:227 }
                                                 {OpDir: M }
-----------------------------------------[IdNode]: { Name: SumID ,Line: 227 }
                                                   {LexType:IDENTIFIER }

                                     Iterate:
-----------------------------------------[IdNode]: { Name: n ,Line: 227 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: ++ ,Line:227 }
                                                 {OpDir: L }
---------------------------------[Branch]: {Type: if ,Line:228 }
                                           Judgement:
-----------------------------------------------[IdNode]: { Name: n ,Line: 228 }
                                                         {LexType:IDENTIFIER }
-------------------------------------------[Operator]: {OpType: != ,Line:228 }
                                                       {OpDir: M }
-----------------------------------------------[IdNode]: { Name: MyID ,Line: 228 }
                                                         {LexType:IDENTIFIER }
---------------------------------------[Function]: {Name: MPI_Send ,Line:230 }
                                                   ArgList: 6 Members
---------------------------------------------------[Operator]: {OpType: & ,Line:230 }
                                                               {OpDir: R }
-----------------------------------------------------------[IdNode]: { Name: arr ,Line: 230 }
                                                                     {LexType:IDENTIFIER }
-------------------------------------------------------[Operator]: {OpType: [ ,Line:230 }
                                                                   {OpDir: M }
---------------------------------------------------------------[IdNode]: { Name: index ,Line: 230 }
                                                                         {LexType:IDENTIFIER }
-----------------------------------------------------------[Operator]: {OpType: [ ,Line:230 }
                                                                       {OpDir: M }
-------------------------------------------------------------------[IdNode]: { Name: 2 ,Line: 230 }
                                                                             {LexType:CONST }
---------------------------------------------------------------[Operator]: {OpType: * ,Line:230 }
                                                                           {OpDir: M }
-------------------------------------------------------------------[IdNode]: { Name: n ,Line: 230 }
                                                                             {LexType:IDENTIFIER }
-------------------------------------------------------[Function]: {Name: sizeof ,Line:230 }
                                                                   ArgList: 1 Members
-------------------------------------------------------------------[IdNode]: { Name: 4 ,Line: 230 }
                                                                             {LexType:CONST }
---------------------------------------------------[Operator]: {OpType: * ,Line:230 }
                                                               {OpDir: M }
---------------------------------------------------------------[IdNode]: { Name: index ,Line: 230 }
                                                                         {LexType:IDENTIFIER }
-----------------------------------------------------------[Operator]: {OpType: [ ,Line:230 }
                                                                       {OpDir: M }
-----------------------------------------------------------------------[IdNode]: { Name: 2 ,Line: 230 }
                                                                                 {LexType:CONST }
-------------------------------------------------------------------[Operator]: {OpType: * ,Line:230 }
                                                                               {OpDir: M }
-----------------------------------------------------------------------[IdNode]: { Name: n ,Line: 230 }
                                                                                 {LexType:IDENTIFIER }
---------------------------------------------------------------[Operator]: {OpType: + ,Line:230 }
                                                                           {OpDir: M }
-------------------------------------------------------------------[IdNode]: { Name: 1 ,Line: 230 }
                                                                             {LexType:CONST }
-------------------------------------------------------[Operator]: {OpType: - ,Line:230 }
                                                                   {OpDir: M }
---------------------------------------------------------------[IdNode]: { Name: index ,Line: 230 }
                                                                         {LexType:IDENTIFIER }
-----------------------------------------------------------[Operator]: {OpType: [ ,Line:230 }
                                                                       {OpDir: M }
-------------------------------------------------------------------[IdNode]: { Name: 2 ,Line: 230 }
                                                                             {LexType:CONST }
---------------------------------------------------------------[Operator]: {OpType: * ,Line:230 }
                                                                           {OpDir: M }
-------------------------------------------------------------------[IdNode]: { Name: n ,Line: 230 }
                                                                             {LexType:IDENTIFIER }
---------------------------------------------------[IdNode]: { Name: MPI_CHAR ,Line: 230 }
                                                             {LexType:IDENTIFIER }
---------------------------------------------------[IdNode]: { Name: n ,Line: 230 }
                                                             {LexType:IDENTIFIER }
-------------------------------------------------------[IdNode]: { Name: MULTI_TYPE ,Line: 230 }
                                                                 {LexType:IDENTIFIER }
---------------------------------------------------[Operator]: {OpType: + ,Line:230 }
                                                               {OpDir: M }
-------------------------------------------------------[IdNode]: { Name: MyID ,Line: 230 }
                                                                 {LexType:IDENTIFIER }
---------------------------------------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 230 }
                                                             {LexType:IDENTIFIER }




---------------------[Branch]: {Type: else ,Line:235 }
-------------------------------[IdNode]: { Name: l ,Line: 236 }
                                         {LexType:IDENTIFIER }
---------------------------[Operator]: {OpType: = ,Line:236 }
                                       {OpDir: M }
-----------------------------------[IdNode]: { Name: temp1 ,Line: 236 }
                                             {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: [ ,Line:236 }
                                           {OpDir: M }
-----------------------------------[IdNode]: { Name: i ,Line: 236 }
                                             {LexType:IDENTIFIER }

---------------------------[Function]: {Name: MPI_Recv ,Line:237 }
                                       ArgList: 7 Members
---------------------------------------[Operator]: {OpType: & ,Line:237 }
                                                   {OpDir: R }
-----------------------------------------------[IdNode]: { Name: arr1 ,Line: 237 }
                                                         {LexType:IDENTIFIER }
-------------------------------------------[Operator]: {OpType: [ ,Line:237 }
                                                       {OpDir: M }
-----------------------------------------------[IdNode]: { Name: k ,Line: 237 }
                                                         {LexType:IDENTIFIER }
-------------------------------------------[IdNode]: { Name: l ,Line: 237 }
                                                     {LexType:IDENTIFIER }
---------------------------------------[Operator]: {OpType: * ,Line:237 }
                                                   {OpDir: M }
-------------------------------------------[Function]: {Name: sizeof ,Line:237 }
                                                       ArgList: 1 Members
-------------------------------------------------------[IdNode]: { Name: 4 ,Line: 237 }
                                                                 {LexType:CONST }
---------------------------------------[IdNode]: { Name: MPI_CHAR ,Line: 237 }
                                                 {LexType:IDENTIFIER }
---------------------------------------[IdNode]: { Name: i ,Line: 237 }
                                                 {LexType:IDENTIFIER }
-------------------------------------------[IdNode]: { Name: MULTI_TYPE ,Line: 237 }
                                                     {LexType:IDENTIFIER }
---------------------------------------[Operator]: {OpType: + ,Line:237 }
                                                   {OpDir: M }
-------------------------------------------[IdNode]: { Name: i ,Line: 237 }
                                                     {LexType:IDENTIFIER }
---------------------------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 237 }
                                                 {LexType:IDENTIFIER }
---------------------------------------[Operator]: {OpType: & ,Line:237 }
                                                   {OpDir: R }
-----------------------------------------------[IdNode]: { Name: status ,Line: 237 }
                                                         {LexType:IDENTIFIER }
-------------------------------------------[Operator]: {OpType: [ ,Line:237 }
                                                       {OpDir: M }
---------------------------------------------------[IdNode]: { Name: j ,Line: 237 }
                                                             {LexType:IDENTIFIER }
-----------------------------------------------[Operator]: {OpType: ++ ,Line:237 }
                                                           {OpDir: L }

-------------------------------[IdNode]: { Name: k ,Line: 238 }
                                         {LexType:IDENTIFIER }
---------------------------[Operator]: {OpType: = ,Line:238 }
                                       {OpDir: M }
-----------------------------------[IdNode]: { Name: k ,Line: 238 }
                                             {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: + ,Line:238 }
                                           {OpDir: M }
-----------------------------------[IdNode]: { Name: l ,Line: 238 }
                                             {LexType:IDENTIFIER }


---------------------[Function]: {Name: MPI_Barrier ,Line:241 }
                                 ArgList: 1 Members
---------------------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 241 }
                                           {LexType:IDENTIFIER }


-------------------[IdNode]: { Name: mylength ,Line: 243 }
                             {LexType:IDENTIFIER }
---------------[Operator]: {OpType: = ,Line:243 }
                           {OpDir: M }
-------------------[IdNode]: { Name: k ,Line: 243 }
                             {LexType:IDENTIFIER }

---------------[Function]: {Name: MPI_Barrier ,Line:244 }
                           ArgList: 1 Members
---------------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 244 }
                                     {LexType:IDENTIFIER }

-------------------[IdNode]: { Name: k ,Line: 247 }
                             {LexType:IDENTIFIER }
---------------[Operator]: {OpType: = ,Line:247 }
                           {OpDir: M }
-------------------[IdNode]: { Name: 0 ,Line: 247 }
                             {LexType:CONST }

---------------[Function]: {Name: multimerge ,Line:248 }
                           ArgList: 5 Members
---------------------------[IdNode]: { Name: arr1 ,Line: 248 }
                                     {LexType:IDENTIFIER }
---------------------------[IdNode]: { Name: temp1 ,Line: 248 }
                                     {LexType:IDENTIFIER }
---------------------------[IdNode]: { Name: arr ,Line: 248 }
                                     {LexType:IDENTIFIER }
---------------------------[Operator]: {OpType: & ,Line:248 }
                                       {OpDir: R }
-------------------------------[IdNode]: { Name: k ,Line: 248 }
                                         {LexType:IDENTIFIER }
---------------------------[IdNode]: { Name: SumID ,Line: 248 }
                                     {LexType:IDENTIFIER }

---------------[Function]: {Name: MPI_Barrier ,Line:249 }
                           ArgList: 1 Members
---------------------------[IdNode]: { Name: MPI_COMM_WORLD ,Line: 249 }
                                     {LexType:IDENTIFIER }


---------[Function]: {Name: printf ,Line:252 }
                     ArgList: 2 Members
---------------------[IdNode]: { Name: "On node %d the sorted data is : \n" ,Line: 252 }
                               {LexType:CONST }
---------------------[IdNode]: { Name: MyID ,Line: 252 }
                               {LexType:IDENTIFIER }

---------[Branch]: {Type: for ,Line:253 }
                   Init:
-----------------------[IdNode]: { Name: i ,Line: 253 }
                                 {LexType:IDENTIFIER }
-------------------[Operator]: {OpType: = ,Line:253 }
                               {OpDir: M }
-----------------------[IdNode]: { Name: 0 ,Line: 253 }
                                 {LexType:CONST }

                   End:
-----------------------[IdNode]: { Name: i ,Line: 253 }
                                 {LexType:IDENTIFIER }
-------------------[Operator]: {OpType: < ,Line:253 }
                               {OpDir: M }
-----------------------[IdNode]: { Name: mylength ,Line: 253 }
                                 {LexType:IDENTIFIER }

                   Iterate:
-----------------------[IdNode]: { Name: i ,Line: 253 }
                                 {LexType:IDENTIFIER }
-------------------[Operator]: {OpType: ++ ,Line:253 }
                               {OpDir: L }
---------------[Function]: {Name: printf ,Line:254 }
                           ArgList: 2 Members
---------------------------[IdNode]: { Name: "%d : " ,Line: 254 }
                                     {LexType:CONST }
-------------------------------[IdNode]: { Name: arr ,Line: 254 }
                                         {LexType:IDENTIFIER }
---------------------------[Operator]: {OpType: [ ,Line:254 }
                                       {OpDir: M }
-------------------------------[IdNode]: { Name: i ,Line: 254 }
                                         {LexType:IDENTIFIER }


---------[Function]: {Name: printf ,Line:255 }
                     ArgList: 1 Members
---------------------[IdNode]: { Name: "\n" ,Line: 255 }
                               {LexType:CONST }


---[FuncDefine]: {Name: merror ,Line:260 }
                 {ReturnType:void ,Modifier: None ,ArgTable:{char*:ch}}
---------[Function]: {Name: printf ,Line:262 }
                     ArgList: 2 Members
---------------------[IdNode]: { Name: "%s\n" ,Line: 262 }
                               {LexType:CONST }
---------------------[IdNode]: { Name: ch ,Line: 262 }
                               {LexType:IDENTIFIER }

---------[Function]: {Name: exit ,Line:263 }
                     ArgList: 1 Members
---------------------[IdNode]: { Name: 1 ,Line: 263 }
                               {LexType:CONST }


---[FuncDefine]: {Name: quicksort ,Line:268 }
                 {ReturnType:void ,Modifier: None ,ArgTable:{int*:datas}{int:bb}{int:ee}}
---------[VarDeclare]: {Name: tt ,Line:270 }
                       {Type:int,Modifier: None }

---------[IdNode]: { Name: tt ,Line: 270 }
                   {LexType:IDENTIFIER }

---------[VarDeclare]: {Name: i ,Line:270 }
                       {Type:int,Modifier: None }

---------[IdNode]: { Name: i ,Line: 270 }
                   {LexType:IDENTIFIER }

---------[VarDeclare]: {Name: j ,Line:270 }
                       {Type:int,Modifier: None }

---------[IdNode]: { Name: j ,Line: 270 }
                   {LexType:IDENTIFIER }

-------------[IdNode]: { Name: tt ,Line: 271 }
                       {LexType:IDENTIFIER }
---------[Operator]: {OpType: = ,Line:271 }
                     {OpDir: M }
-----------------[IdNode]: { Name: datas ,Line: 271 }
                           {LexType:IDENTIFIER }
-------------[Operator]: {OpType: [ ,Line:271 }
                         {OpDir: M }
-----------------[IdNode]: { Name: bb ,Line: 271 }
                           {LexType:IDENTIFIER }

-------------[IdNode]: { Name: i ,Line: 272 }
                       {LexType:IDENTIFIER }
---------[Operator]: {OpType: = ,Line:272 }
                     {OpDir: M }
-------------[IdNode]: { Name: bb ,Line: 272 }
                       {LexType:IDENTIFIER }

-------------[IdNode]: { Name: j ,Line: 273 }
                       {LexType:IDENTIFIER }
---------[Operator]: {OpType: = ,Line:273 }
                     {OpDir: M }
-------------[IdNode]: { Name: ee ,Line: 273 }
                       {LexType:IDENTIFIER }

---------[Branch]: {Type: if ,Line:275 }
                   Judgement:
-----------------------[IdNode]: { Name: i ,Line: 275 }
                                 {LexType:IDENTIFIER }
-------------------[Operator]: {OpType: < ,Line:275 }
                               {OpDir: M }
-----------------------[IdNode]: { Name: j ,Line: 275 }
                                 {LexType:IDENTIFIER }
---------------[Branch]: {Type: while ,Line:277 }
                         Judgement:
-----------------------------[IdNode]: { Name: i ,Line: 277 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: < ,Line:277 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: j ,Line: 277 }
                                       {LexType:IDENTIFIER }
---------------------[Branch]: {Type: while ,Line:279 }
                               Judgement:
---------------------------------------[IdNode]: { Name: i ,Line: 279 }
                                                 {LexType:IDENTIFIER }
-----------------------------------[Operator]: {OpType: < ,Line:279 }
                                               {OpDir: M }
---------------------------------------[IdNode]: { Name: j ,Line: 279 }
                                                 {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: && ,Line:279 }
                                           {OpDir: M }
---------------------------------------[IdNode]: { Name: tt ,Line: 279 }
                                                 {LexType:IDENTIFIER }
-----------------------------------[Operator]: {OpType: <= ,Line:279 }
                                               {OpDir: M }
-------------------------------------------[IdNode]: { Name: datas ,Line: 279 }
                                                     {LexType:IDENTIFIER }
---------------------------------------[Operator]: {OpType: [ ,Line:279 }
                                                   {OpDir: M }
-------------------------------------------[IdNode]: { Name: j ,Line: 279 }
                                                     {LexType:IDENTIFIER }

-------------------------[IdNode]: { Name: j ,Line: 279 }
                                   {LexType:IDENTIFIER }
---------------------[Operator]: {OpType: -- ,Line:279 }
                                 {OpDir: L }

---------------------[Branch]: {Type: if ,Line:280 }
                               Judgement:
-----------------------------------[IdNode]: { Name: i ,Line: 280 }
                                             {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: < ,Line:280 }
                                           {OpDir: M }
-----------------------------------[IdNode]: { Name: j ,Line: 280 }
                                             {LexType:IDENTIFIER }
-----------------------------------[IdNode]: { Name: datas ,Line: 282 }
                                             {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: [ ,Line:282 }
                                           {OpDir: M }
-----------------------------------[IdNode]: { Name: i ,Line: 282 }
                                             {LexType:IDENTIFIER }
---------------------------[Operator]: {OpType: = ,Line:282 }
                                       {OpDir: M }
-----------------------------------[IdNode]: { Name: datas ,Line: 282 }
                                             {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: [ ,Line:282 }
                                           {OpDir: M }
-----------------------------------[IdNode]: { Name: j ,Line: 282 }
                                             {LexType:IDENTIFIER }

-------------------------------[IdNode]: { Name: i ,Line: 283 }
                                         {LexType:IDENTIFIER }
---------------------------[Operator]: {OpType: ++ ,Line:283 }
                                       {OpDir: L }

---------------------------[Branch]: {Type: while ,Line:284 }
                                     Judgement:
---------------------------------------------[IdNode]: { Name: i ,Line: 284 }
                                                       {LexType:IDENTIFIER }
-----------------------------------------[Operator]: {OpType: < ,Line:284 }
                                                     {OpDir: M }
---------------------------------------------[IdNode]: { Name: j ,Line: 284 }
                                                       {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: && ,Line:284 }
                                                 {OpDir: M }
---------------------------------------------[IdNode]: { Name: tt ,Line: 284 }
                                                       {LexType:IDENTIFIER }
-----------------------------------------[Operator]: {OpType: > ,Line:284 }
                                                     {OpDir: M }
-------------------------------------------------[IdNode]: { Name: datas ,Line: 284 }
                                                           {LexType:IDENTIFIER }
---------------------------------------------[Operator]: {OpType: [ ,Line:284 }
                                                         {OpDir: M }
-------------------------------------------------[IdNode]: { Name: i ,Line: 284 }
                                                           {LexType:IDENTIFIER }

-------------------------------[IdNode]: { Name: i ,Line: 284 }
                                         {LexType:IDENTIFIER }
---------------------------[Operator]: {OpType: ++ ,Line:284 }
                                       {OpDir: L }

---------------------------[Branch]: {Type: if ,Line:285 }
                                     Judgement:
-----------------------------------------[IdNode]: { Name: i ,Line: 285 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: < ,Line:285 }
                                                 {OpDir: M }
-----------------------------------------[IdNode]: { Name: j ,Line: 285 }
                                                   {LexType:IDENTIFIER }
-----------------------------------------[IdNode]: { Name: datas ,Line: 287 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: [ ,Line:287 }
                                                 {OpDir: M }
-----------------------------------------[IdNode]: { Name: j ,Line: 287 }
                                                   {LexType:IDENTIFIER }
---------------------------------[Operator]: {OpType: = ,Line:287 }
                                             {OpDir: M }
-----------------------------------------[IdNode]: { Name: datas ,Line: 287 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: [ ,Line:287 }
                                                 {OpDir: M }
-----------------------------------------[IdNode]: { Name: i ,Line: 287 }
                                                   {LexType:IDENTIFIER }

-------------------------------------[IdNode]: { Name: j ,Line: 288 }
                                               {LexType:IDENTIFIER }
---------------------------------[Operator]: {OpType: -- ,Line:288 }
                                             {OpDir: L }

---------------------------------[Branch]: {Type: if ,Line:289 }
                                           Judgement:
-----------------------------------------------[IdNode]: { Name: i ,Line: 289 }
                                                         {LexType:IDENTIFIER }
-------------------------------------------[Operator]: {OpType: == ,Line:289 }
                                                       {OpDir: M }
-----------------------------------------------[IdNode]: { Name: j ,Line: 289 }
                                                         {LexType:IDENTIFIER }

-----------------------------------------[IdNode]: { Name: datas ,Line: 289 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: [ ,Line:289 }
                                                 {OpDir: M }
-----------------------------------------[IdNode]: { Name: i ,Line: 289 }
                                                   {LexType:IDENTIFIER }
---------------------------------[Operator]: {OpType: = ,Line:289 }
                                             {OpDir: M }
-------------------------------------[IdNode]: { Name: tt ,Line: 289 }
                                               {LexType:IDENTIFIER }


---------------------------[Branch]: {Type: else ,Line:291 }

-----------------------------------[IdNode]: { Name: datas ,Line: 291 }
                                             {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: [ ,Line:291 }
                                           {OpDir: M }
-----------------------------------[IdNode]: { Name: j ,Line: 291 }
                                             {LexType:IDENTIFIER }
---------------------------[Operator]: {OpType: = ,Line:291 }
                                       {OpDir: M }
-------------------------------[IdNode]: { Name: tt ,Line: 291 }
                                         {LexType:IDENTIFIER }


---------------------[Branch]: {Type: else ,Line:292 }

-----------------------------[IdNode]: { Name: datas ,Line: 292 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: [ ,Line:292 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: i ,Line: 292 }
                                       {LexType:IDENTIFIER }
---------------------[Operator]: {OpType: = ,Line:292 }
                                 {OpDir: M }
-------------------------[IdNode]: { Name: tt ,Line: 292 }
                                   {LexType:IDENTIFIER }


---------------[Function]: {Name: quicksort ,Line:295 }
                           ArgList: 3 Members
---------------------------[IdNode]: { Name: datas ,Line: 295 }
                                     {LexType:IDENTIFIER }
---------------------------[IdNode]: { Name: bb ,Line: 295 }
                                     {LexType:IDENTIFIER }
-------------------------------[IdNode]: { Name: i ,Line: 295 }
                                         {LexType:IDENTIFIER }
---------------------------[Operator]: {OpType: - ,Line:295 }
                                       {OpDir: M }
-------------------------------[IdNode]: { Name: 1 ,Line: 295 }
                                         {LexType:CONST }

---------------[Function]: {Name: quicksort ,Line:296 }
                           ArgList: 3 Members
---------------------------[IdNode]: { Name: datas ,Line: 296 }
                                     {LexType:IDENTIFIER }
-------------------------------[IdNode]: { Name: i ,Line: 296 }
                                         {LexType:IDENTIFIER }
---------------------------[Operator]: {OpType: + ,Line:296 }
                                       {OpDir: M }
-------------------------------[IdNode]: { Name: 1 ,Line: 296 }
                                         {LexType:CONST }
---------------------------[IdNode]: { Name: ee ,Line: 296 }
                                     {LexType:IDENTIFIER }



---[FuncDefine]: {Name: multimerge ,Line:302 }
                 {ReturnType:void ,Modifier: None ,ArgTable:{int*:data1}{int*:ind}{int*:data}{int*:iter}{int:SumID}}
---------[VarDeclare]: {Name: i ,Line:304 }
                       {Type:int,Modifier: None }

---------[IdNode]: { Name: i ,Line: 304 }
                   {LexType:IDENTIFIER }

---------[VarDeclare]: {Name: j ,Line:304 }
                       {Type:int,Modifier: None }

---------[IdNode]: { Name: j ,Line: 304 }
                   {LexType:IDENTIFIER }

---------[VarDeclare]: {Name: n ,Line:304 }
                       {Type:int,Modifier: None }

---------[IdNode]: { Name: n ,Line: 304 }
                   {LexType:IDENTIFIER }

-------------[IdNode]: { Name: j ,Line: 306 }
                       {LexType:IDENTIFIER }
---------[Operator]: {OpType: = ,Line:306 }
                     {OpDir: M }
-------------[IdNode]: { Name: 0 ,Line: 306 }
                       {LexType:CONST }

---------[Branch]: {Type: for ,Line:307 }
                   Init:
-----------------------[IdNode]: { Name: i ,Line: 307 }
                                 {LexType:IDENTIFIER }
-------------------[Operator]: {OpType: = ,Line:307 }
                               {OpDir: M }
-----------------------[IdNode]: { Name: 0 ,Line: 307 }
                                 {LexType:CONST }

                   End:
-----------------------[IdNode]: { Name: i ,Line: 307 }
                                 {LexType:IDENTIFIER }
-------------------[Operator]: {OpType: < ,Line:307 }
                               {OpDir: M }
-----------------------[IdNode]: { Name: SumID ,Line: 307 }
                                 {LexType:IDENTIFIER }

                   Iterate:
-----------------------[IdNode]: { Name: i ,Line: 307 }
                                 {LexType:IDENTIFIER }
-------------------[Operator]: {OpType: ++ ,Line:307 }
                               {OpDir: L }
---------------[Branch]: {Type: if ,Line:308 }
                         Judgement:
---------------------------------[IdNode]: { Name: ind ,Line: 308 }
                                           {LexType:IDENTIFIER }
-----------------------------[Operator]: {OpType: [ ,Line:308 }
                                         {OpDir: M }
---------------------------------[IdNode]: { Name: i ,Line: 308 }
                                           {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: > ,Line:308 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: 0 ,Line: 308 }
                                       {LexType:CONST }
-----------------------------[IdNode]: { Name: ind ,Line: 310 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: [ ,Line:310 }
                                     {OpDir: M }
---------------------------------[IdNode]: { Name: j ,Line: 310 }
                                           {LexType:IDENTIFIER }
-----------------------------[Operator]: {OpType: ++ ,Line:310 }
                                         {OpDir: L }
---------------------[Operator]: {OpType: = ,Line:310 }
                                 {OpDir: M }
-----------------------------[IdNode]: { Name: ind ,Line: 310 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: [ ,Line:310 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: i ,Line: 310 }
                                       {LexType:IDENTIFIER }

---------------------[Branch]: {Type: if ,Line:311 }
                               Judgement:
-----------------------------------[IdNode]: { Name: j ,Line: 311 }
                                             {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: < ,Line:311 }
                                           {OpDir: M }
---------------------------------------[IdNode]: { Name: i ,Line: 311 }
                                                 {LexType:IDENTIFIER }
-----------------------------------[Operator]: {OpType: + ,Line:311 }
                                               {OpDir: M }
---------------------------------------[IdNode]: { Name: 1 ,Line: 311 }
                                                 {LexType:CONST }

-----------------------------[IdNode]: { Name: ind ,Line: 311 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: [ ,Line:311 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: i ,Line: 311 }
                                       {LexType:IDENTIFIER }
---------------------[Operator]: {OpType: = ,Line:311 }
                                 {OpDir: M }
-------------------------[IdNode]: { Name: 0 ,Line: 311 }
                                   {LexType:CONST }



---------[Branch]: {Type: if ,Line:313 }
                   Judgement:
-----------------------[IdNode]: { Name: j ,Line: 313 }
                                 {LexType:IDENTIFIER }
-------------------[Operator]: {OpType: > ,Line:313 }
                               {OpDir: M }
-----------------------[IdNode]: { Name: 1 ,Line: 313 }
                                 {LexType:CONST }
-------------------[IdNode]: { Name: n ,Line: 315 }
                             {LexType:IDENTIFIER }
---------------[Operator]: {OpType: = ,Line:315 }
                           {OpDir: M }
-------------------[IdNode]: { Name: 0 ,Line: 315 }
                             {LexType:CONST }

---------------[Branch]: {Type: for ,Line:316 }
                         Init:
-----------------------------[IdNode]: { Name: i ,Line: 316 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: = ,Line:316 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: 0 ,Line: 316 }
                                       {LexType:CONST }

                         End:
---------------------------------[IdNode]: { Name: i ,Line: 316 }
                                           {LexType:IDENTIFIER }
-----------------------------[Operator]: {OpType: + ,Line:316 }
                                         {OpDir: M }
---------------------------------[IdNode]: { Name: 1 ,Line: 316 }
                                           {LexType:CONST }
-------------------------[Operator]: {OpType: < ,Line:316 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: j ,Line: 316 }
                                       {LexType:IDENTIFIER }

                         Iterate:
-----------------------------[IdNode]: { Name: i ,Line: 316 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: = ,Line:316 }
                                     {OpDir: M }
---------------------------------[IdNode]: { Name: i ,Line: 316 }
                                           {LexType:IDENTIFIER }
-----------------------------[Operator]: {OpType: + ,Line:316 }
                                         {OpDir: M }
---------------------------------[IdNode]: { Name: 2 ,Line: 316 }
                                           {LexType:CONST }
---------------------[Function]: {Name: merge ,Line:318 }
                                 ArgList: 4 Members
---------------------------------[Operator]: {OpType: & ,Line:318 }
                                             {OpDir: R }
-----------------------------------------[IdNode]: { Name: data1 ,Line: 318 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: [ ,Line:318 }
                                                 {OpDir: M }
-----------------------------------------[IdNode]: { Name: n ,Line: 318 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[IdNode]: { Name: ind ,Line: 318 }
                                               {LexType:IDENTIFIER }
---------------------------------[Operator]: {OpType: [ ,Line:318 }
                                             {OpDir: M }
-------------------------------------[IdNode]: { Name: i ,Line: 318 }
                                               {LexType:IDENTIFIER }
-------------------------------------[IdNode]: { Name: ind ,Line: 318 }
                                               {LexType:IDENTIFIER }
---------------------------------[Operator]: {OpType: [ ,Line:318 }
                                             {OpDir: M }
-----------------------------------------[IdNode]: { Name: i ,Line: 318 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: + ,Line:318 }
                                                 {OpDir: M }
-----------------------------------------[IdNode]: { Name: 1 ,Line: 318 }
                                                   {LexType:CONST }
---------------------------------[Operator]: {OpType: & ,Line:318 }
                                             {OpDir: R }
-----------------------------------------[IdNode]: { Name: data ,Line: 318 }
                                                   {LexType:IDENTIFIER }
-------------------------------------[Operator]: {OpType: [ ,Line:318 }
                                                 {OpDir: M }
-----------------------------------------[IdNode]: { Name: n ,Line: 318 }
                                                   {LexType:IDENTIFIER }

-----------------------------[IdNode]: { Name: ind ,Line: 319 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: [ ,Line:319 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: i ,Line: 319 }
                                       {LexType:IDENTIFIER }
---------------------[Operator]: {OpType: += ,Line:319 }
                                 {OpDir: M }
-----------------------------[IdNode]: { Name: ind ,Line: 319 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: [ ,Line:319 }
                                     {OpDir: M }
---------------------------------[IdNode]: { Name: i ,Line: 319 }
                                           {LexType:IDENTIFIER }
-----------------------------[Operator]: {OpType: + ,Line:319 }
                                         {OpDir: M }
---------------------------------[IdNode]: { Name: 1 ,Line: 319 }
                                           {LexType:CONST }

-----------------------------[IdNode]: { Name: ind ,Line: 320 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: [ ,Line:320 }
                                     {OpDir: M }
---------------------------------[IdNode]: { Name: i ,Line: 320 }
                                           {LexType:IDENTIFIER }
-----------------------------[Operator]: {OpType: + ,Line:320 }
                                         {OpDir: M }
---------------------------------[IdNode]: { Name: 1 ,Line: 320 }
                                           {LexType:CONST }
---------------------[Operator]: {OpType: = ,Line:320 }
                                 {OpDir: M }
-------------------------[IdNode]: { Name: 0 ,Line: 320 }
                                   {LexType:CONST }

-------------------------[IdNode]: { Name: n ,Line: 321 }
                                   {LexType:IDENTIFIER }
---------------------[Operator]: {OpType: += ,Line:321 }
                                 {OpDir: M }
-----------------------------[IdNode]: { Name: ind ,Line: 321 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: [ ,Line:321 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: i ,Line: 321 }
                                       {LexType:IDENTIFIER }


---------------[Branch]: {Type: if ,Line:323 }
                         Judgement:
---------------------------------[IdNode]: { Name: j ,Line: 323 }
                                           {LexType:IDENTIFIER }
-----------------------------[Operator]: {OpType: % ,Line:323 }
                                         {OpDir: M }
---------------------------------[IdNode]: { Name: 2 ,Line: 323 }
                                           {LexType:CONST }
-------------------------[Operator]: {OpType: == ,Line:323 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: 1 ,Line: 323 }
                                       {LexType:CONST }
---------------------[Branch]: {Type: for ,Line:324 }
                               Init:
-----------------------------------[IdNode]: { Name: i ,Line: 324 }
                                             {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: = ,Line:324 }
                                           {OpDir: M }
-----------------------------------[IdNode]: { Name: 0 ,Line: 324 }
                                             {LexType:CONST }

                               End:
-----------------------------------[IdNode]: { Name: i ,Line: 324 }
                                             {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: < ,Line:324 }
                                           {OpDir: M }
---------------------------------------[IdNode]: { Name: ind ,Line: 324 }
                                                 {LexType:IDENTIFIER }
-----------------------------------[Operator]: {OpType: [ ,Line:324 }
                                               {OpDir: M }
-------------------------------------------[IdNode]: { Name: j ,Line: 324 }
                                                     {LexType:IDENTIFIER }
---------------------------------------[Operator]: {OpType: - ,Line:324 }
                                                   {OpDir: M }
-------------------------------------------[IdNode]: { Name: 1 ,Line: 324 }
                                                     {LexType:CONST }

                               Iterate:
-----------------------------------[IdNode]: { Name: i ,Line: 324 }
                                             {LexType:IDENTIFIER }
-------------------------------[Operator]: {OpType: ++ ,Line:324 }
                                           {OpDir: L }

-----------------------------[IdNode]: { Name: data ,Line: 324 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: [ ,Line:324 }
                                     {OpDir: M }
---------------------------------[IdNode]: { Name: n ,Line: 324 }
                                           {LexType:IDENTIFIER }
-----------------------------[Operator]: {OpType: ++ ,Line:324 }
                                         {OpDir: L }
---------------------[Operator]: {OpType: = ,Line:324 }
                                 {OpDir: M }
-----------------------------[IdNode]: { Name: data1 ,Line: 324 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: [ ,Line:324 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: n ,Line: 324 }
                                       {LexType:IDENTIFIER }


-------------------[Operator]: {OpType: * ,Line:325 }
                               {OpDir: R }
-----------------------[IdNode]: { Name: iter ,Line: 325 }
                                 {LexType:IDENTIFIER }
---------------[Operator]: {OpType: ++ ,Line:325 }
                           {OpDir: L }

---------------[Function]: {Name: multimerge ,Line:326 }
                           ArgList: 5 Members
---------------------------[IdNode]: { Name: data ,Line: 326 }
                                     {LexType:IDENTIFIER }
---------------------------[IdNode]: { Name: ind ,Line: 326 }
                                     {LexType:IDENTIFIER }
---------------------------[IdNode]: { Name: data1 ,Line: 326 }
                                     {LexType:IDENTIFIER }
---------------------------[IdNode]: { Name: iter ,Line: 326 }
                                     {LexType:IDENTIFIER }
---------------------------[IdNode]: { Name: SumID ,Line: 326 }
                                     {LexType:IDENTIFIER }



---[FuncDefine]: {Name: merge ,Line:331 }
                 {ReturnType:void ,Modifier: None ,ArgTable:{int*:data1}{int:s1}{int:s2}{int*:data2}}
---------[VarDeclare]: {Name: i ,Line:333 }
                       {Type:int,Modifier: None }

---------[IdNode]: { Name: i ,Line: 333 }
                   {LexType:IDENTIFIER }

---------[VarDeclare]: {Name: l ,Line:333 }
                       {Type:int,Modifier: None }

---------[IdNode]: { Name: l ,Line: 333 }
                   {LexType:IDENTIFIER }

---------[VarDeclare]: {Name: m ,Line:333 }
                       {Type:int,Modifier: None }

---------[IdNode]: { Name: m ,Line: 333 }
                   {LexType:IDENTIFIER }

-------------[IdNode]: { Name: l ,Line: 335 }
                       {LexType:IDENTIFIER }
---------[Operator]: {OpType: = ,Line:335 }
                     {OpDir: M }
-------------[IdNode]: { Name: 0 ,Line: 335 }
                       {LexType:CONST }

-------------[IdNode]: { Name: m ,Line: 336 }
                       {LexType:IDENTIFIER }
---------[Operator]: {OpType: = ,Line:336 }
                     {OpDir: M }
-------------[IdNode]: { Name: s1 ,Line: 336 }
                       {LexType:IDENTIFIER }

---------[Branch]: {Type: for ,Line:337 }
                   Init:
-----------------------[IdNode]: { Name: i ,Line: 337 }
                                 {LexType:IDENTIFIER }
-------------------[Operator]: {OpType: = ,Line:337 }
                               {OpDir: M }
-----------------------[IdNode]: { Name: 0 ,Line: 337 }
                                 {LexType:CONST }

                   End:
-----------------------[IdNode]: { Name: i ,Line: 337 }
                                 {LexType:IDENTIFIER }
-------------------[Operator]: {OpType: < ,Line:337 }
                               {OpDir: M }
---------------------------[IdNode]: { Name: s1 ,Line: 337 }
                                     {LexType:IDENTIFIER }
-----------------------[Operator]: {OpType: + ,Line:337 }
                                   {OpDir: M }
---------------------------[IdNode]: { Name: s2 ,Line: 337 }
                                     {LexType:IDENTIFIER }

                   Iterate:
-----------------------[IdNode]: { Name: i ,Line: 337 }
                                 {LexType:IDENTIFIER }
-------------------[Operator]: {OpType: ++ ,Line:337 }
                               {OpDir: L }
---------------[Branch]: {Type: if ,Line:339 }
                         Judgement:
-----------------------------[IdNode]: { Name: l ,Line: 339 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: == ,Line:339 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: s1 ,Line: 339 }
                                       {LexType:IDENTIFIER }
-----------------------------[IdNode]: { Name: data2 ,Line: 340 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: [ ,Line:340 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: i ,Line: 340 }
                                       {LexType:IDENTIFIER }
---------------------[Operator]: {OpType: = ,Line:340 }
                                 {OpDir: M }
-----------------------------[IdNode]: { Name: data1 ,Line: 340 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: [ ,Line:340 }
                                     {OpDir: M }
---------------------------------[IdNode]: { Name: m ,Line: 340 }
                                           {LexType:IDENTIFIER }
-----------------------------[Operator]: {OpType: ++ ,Line:340 }
                                         {OpDir: L }


---------------[Branch]: {Type: else if ,Line:341 }
                         Judgement:
-----------------------------[IdNode]: { Name: m ,Line: 342 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: == ,Line:342 }
                                     {OpDir: M }
---------------------------------[IdNode]: { Name: s2 ,Line: 342 }
                                           {LexType:IDENTIFIER }
-----------------------------[Operator]: {OpType: + ,Line:342 }
                                         {OpDir: M }
---------------------------------[IdNode]: { Name: s1 ,Line: 342 }
                                           {LexType:IDENTIFIER }
-----------------------------[IdNode]: { Name: data2 ,Line: 343 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: [ ,Line:343 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: i ,Line: 343 }
                                       {LexType:IDENTIFIER }
---------------------[Operator]: {OpType: = ,Line:343 }
                                 {OpDir: M }
-----------------------------[IdNode]: { Name: data1 ,Line: 343 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: [ ,Line:343 }
                                     {OpDir: M }
---------------------------------[IdNode]: { Name: l ,Line: 343 }
                                           {LexType:IDENTIFIER }
-----------------------------[Operator]: {OpType: ++ ,Line:343 }
                                         {OpDir: L }


---------------[Branch]: {Type: else if ,Line:344 }
                         Judgement:
---------------------------------[IdNode]: { Name: data1 ,Line: 345 }
                                           {LexType:IDENTIFIER }
-----------------------------[Operator]: {OpType: [ ,Line:345 }
                                         {OpDir: M }
---------------------------------[IdNode]: { Name: l ,Line: 345 }
                                           {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: > ,Line:345 }
                                     {OpDir: M }
---------------------------------[IdNode]: { Name: data1 ,Line: 345 }
                                           {LexType:IDENTIFIER }
-----------------------------[Operator]: {OpType: [ ,Line:345 }
                                         {OpDir: M }
---------------------------------[IdNode]: { Name: m ,Line: 345 }
                                           {LexType:IDENTIFIER }
-----------------------------[IdNode]: { Name: data2 ,Line: 346 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: [ ,Line:346 }
                                     {OpDir: M }
-----------------------------[IdNode]: { Name: i ,Line: 346 }
                                       {LexType:IDENTIFIER }
---------------------[Operator]: {OpType: = ,Line:346 }
                                 {OpDir: M }
-----------------------------[IdNode]: { Name: data1 ,Line: 346 }
                                       {LexType:IDENTIFIER }
-------------------------[Operator]: {OpType: [ ,Line:346 }
                                     {OpDir: M }
---------------------------------[IdNode]: { Name: m ,Line: 346 }
                                           {LexType:IDENTIFIER }
-----------------------------[Operator]: {OpType: ++ ,Line:346 }
                                         {OpDir: L }


---------------[Branch]: {Type: else ,Line:348 }

-----------------------[IdNode]: { Name: data2 ,Line: 348 }
                                 {LexType:IDENTIFIER }
-------------------[Operator]: {OpType: [ ,Line:348 }
                               {OpDir: M }
-----------------------[IdNode]: { Name: i ,Line: 348 }
                                 {LexType:IDENTIFIER }
---------------[Operator]: {OpType: = ,Line:348 }
                           {OpDir: M }
-----------------------[IdNode]: { Name: data1 ,Line: 348 }
                                 {LexType:IDENTIFIER }
-------------------[Operator]: {OpType: [ ,Line:348 }
                               {OpDir: M }
---------------------------[IdNode]: { Name: l ,Line: 348 }
                                     {LexType:IDENTIFIER }
-----------------------[Operator]: {OpType: ++ ,Line:348 }
                                   {OpDir: L }
